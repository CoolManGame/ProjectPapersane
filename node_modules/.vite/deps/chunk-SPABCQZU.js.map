{
  "version": 3,
  "sources": ["browser-external:crypto", "../../puppeteer-core/lib/esm/third_party/mitt/index.js", "../../puppeteer-core/src/common/EventEmitter.ts", "../../puppeteer-core/src/api/Browser.ts", "../../puppeteer-core/src/api/BrowserContext.ts", "../../puppeteer-core/src/util/assert.ts", "../../puppeteer-core/src/common/Errors.ts", "../../puppeteer-core/src/util/Deferred.ts", "../../puppeteer-core/src/environment.ts", "../../puppeteer-core/src/util/DebuggableDeferred.ts", "../../puppeteer-core/src/api/HTTPRequest.ts", "../../puppeteer-core/src/util/ErrorLike.ts", "../../puppeteer-core/src/common/Debug.ts", "../../puppeteer-core/src/util/AsyncIterableUtil.ts", "../../puppeteer-core/src/common/LazyArg.ts", "../../puppeteer-core/src/common/AriaQueryHandler.ts", "../../puppeteer-core/src/util/Function.ts", "../../puppeteer-core/src/generated/injected.ts", "../../puppeteer-core/src/common/ScriptInjector.ts", "../../puppeteer-core/src/common/CustomQueryHandler.ts", "../../puppeteer-core/src/common/PierceQueryHandler.ts", "../../puppeteer-core/src/common/PQueryHandler.ts", "../../puppeteer-core/src/common/TextQueryHandler.ts", "../../puppeteer-core/src/common/XPathQueryHandler.ts", "../../puppeteer-core/src/common/GetQueryHandler.ts", "../../puppeteer-core/src/api/JSHandle.ts", "../../puppeteer-core/src/common/JSHandle.ts", "../../puppeteer-core/src/common/ElementHandle.ts", "../../puppeteer-core/src/common/util.ts", "../../puppeteer-core/src/api/ElementHandle.ts", "../../puppeteer-core/src/common/HandleIterator.ts", "../../puppeteer-core/src/common/QueryHandler.ts", "../../puppeteer-core/src/api/HTTPResponse.ts", "../../puppeteer-core/src/common/SecurityDetails.ts", "../../puppeteer-core/src/common/NetworkEventManager.ts", "../../puppeteer-core/src/common/HTTPRequest.ts", "../../puppeteer-core/src/common/HTTPResponse.ts", "../../puppeteer-core/src/common/NetworkManager.ts", "../../puppeteer-core/src/common/PDFOptions.ts", "../../puppeteer-core/src/api/Locator.ts", "../../puppeteer-core/src/api/Page.ts", "../../puppeteer-core/src/api/Input.ts", "../../puppeteer-core/src/api/Frame.ts", "../../puppeteer-core/src/common/Accessibility.ts", "../../puppeteer-core/src/common/Connection.ts", "../../puppeteer-core/src/common/ConsoleMessage.ts", "../../puppeteer-core/src/common/Coverage.ts", "../../puppeteer-core/src/common/EmulationManager.ts", "../../puppeteer-core/src/common/DeviceRequestPrompt.ts", "../../puppeteer-core/src/common/Binding.ts", "../../puppeteer-core/src/common/ExecutionContext.ts", "../../puppeteer-core/src/common/IsolatedWorlds.ts", "../../puppeteer-core/src/common/WaitTask.ts", "../../puppeteer-core/src/common/IsolatedWorld.ts", "../../puppeteer-core/src/common/Frame.ts", "../../puppeteer-core/src/common/FrameTree.ts", "../../puppeteer-core/src/common/FrameManager.ts", "../../puppeteer-core/src/common/LifecycleWatcher.ts", "../../puppeteer-core/src/common/TimeoutSettings.ts", "../../puppeteer-core/src/common/Tracing.ts"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code.`)\n    }\n  }\n}))", "function mitt(n){return {all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e]);},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]));},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e);}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e);});}}}\n\nexport { mitt as default };\n", "/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport mitt, {Emitter, EventHandlerMap} from '../../third_party/mitt/index.js';\n\n/**\n * @public\n */\nexport type EventType = string | symbol;\n/**\n * @public\n */\nexport type Handler<T = unknown> = (event: T) => void;\n\n/**\n * @public\n */\nexport interface CommonEventEmitter {\n  on(event: EventType, handler: Handler): this;\n  off(event: EventType, handler: Handler): this;\n  /* To maintain parity with the built in NodeJS event emitter which uses removeListener\n   * rather than `off`.\n   * If you're implementing new code you should use `off`.\n   */\n  addListener(event: EventType, handler: Handler): this;\n  removeListener(event: EventType, handler: Handler): this;\n  emit(event: EventType, eventData?: unknown): boolean;\n  once(event: EventType, handler: Handler): this;\n  listenerCount(event: string): number;\n\n  removeAllListeners(event?: EventType): this;\n}\n\n/**\n * The EventEmitter class that many Puppeteer classes extend.\n *\n * @remarks\n *\n * This allows you to listen to events that Puppeteer classes fire and act\n * accordingly. Therefore you'll mostly use {@link EventEmitter.on | on} and\n * {@link EventEmitter.off | off} to bind\n * and unbind to event listeners.\n *\n * @public\n */\nexport class EventEmitter implements CommonEventEmitter {\n  private emitter: Emitter<Record<string | symbol, any>>;\n  private eventsMap: EventHandlerMap<Record<string | symbol, any>> = new Map();\n\n  /**\n   * @internal\n   */\n  constructor() {\n    this.emitter = mitt(this.eventsMap);\n  }\n\n  /**\n   * Bind an event listener to fire when an event occurs.\n   * @param event - the event type you'd like to listen to. Can be a string or symbol.\n   * @param handler - the function to be called when the event occurs.\n   * @returns `this` to enable you to chain method calls.\n   */\n  on(event: EventType, handler: Handler<any>): this {\n    this.emitter.on(event, handler);\n    return this;\n  }\n\n  /**\n   * Remove an event listener from firing.\n   * @param event - the event type you'd like to stop listening to.\n   * @param handler - the function that should be removed.\n   * @returns `this` to enable you to chain method calls.\n   */\n  off(event: EventType, handler: Handler<any>): this {\n    this.emitter.off(event, handler);\n    return this;\n  }\n\n  /**\n   * Remove an event listener.\n   * @deprecated please use {@link EventEmitter.off} instead.\n   */\n  removeListener(event: EventType, handler: Handler<any>): this {\n    this.off(event, handler);\n    return this;\n  }\n\n  /**\n   * Add an event listener.\n   * @deprecated please use {@link EventEmitter.on} instead.\n   */\n  addListener(event: EventType, handler: Handler<any>): this {\n    this.on(event, handler);\n    return this;\n  }\n\n  /**\n   * Emit an event and call any associated listeners.\n   *\n   * @param event - the event you'd like to emit\n   * @param eventData - any data you'd like to emit with the event\n   * @returns `true` if there are any listeners, `false` if there are not.\n   */\n  emit(event: EventType, eventData?: unknown): boolean {\n    this.emitter.emit(event, eventData);\n    return this.eventListenersCount(event) > 0;\n  }\n\n  /**\n   * Like `on` but the listener will only be fired once and then it will be removed.\n   * @param event - the event you'd like to listen to\n   * @param handler - the handler function to run when the event occurs\n   * @returns `this` to enable you to chain method calls.\n   */\n  once(event: EventType, handler: Handler<any>): this {\n    const onceHandler: Handler<any> = eventData => {\n      handler(eventData);\n      this.off(event, onceHandler);\n    };\n\n    return this.on(event, onceHandler);\n  }\n\n  /**\n   * Gets the number of listeners for a given event.\n   *\n   * @param event - the event to get the listener count for\n   * @returns the number of listeners bound to the given event\n   */\n  listenerCount(event: EventType): number {\n    return this.eventListenersCount(event);\n  }\n\n  /**\n   * Removes all listeners. If given an event argument, it will remove only\n   * listeners for that event.\n   * @param event - the event to remove listeners for.\n   * @returns `this` to enable you to chain method calls.\n   */\n  removeAllListeners(event?: EventType): this {\n    if (event) {\n      this.eventsMap.delete(event);\n    } else {\n      this.eventsMap.clear();\n    }\n    return this;\n  }\n\n  private eventListenersCount(event: EventType): number {\n    return this.eventsMap.get(event)?.length || 0;\n  }\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport {ChildProcess} from 'child_process';\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {EventEmitter} from '../common/EventEmitter.js';\nimport type {Target} from '../common/Target.js'; // TODO: move to ./api\n\nimport type {BrowserContext} from './BrowserContext.js';\nimport type {Page} from './Page.js'; // TODO: move to ./api\n\n/**\n * BrowserContext options.\n *\n * @public\n */\nexport interface BrowserContextOptions {\n  /**\n   * Proxy server with optional port to use for all requests.\n   * Username and password can be set in `Page.authenticate`.\n   */\n  proxyServer?: string;\n  /**\n   * Bypass the proxy for the given list of hosts.\n   */\n  proxyBypassList?: string[];\n}\n\n/**\n * @internal\n */\nexport type BrowserCloseCallback = () => Promise<void> | void;\n\n/**\n * @public\n */\nexport type TargetFilterCallback = (\n  target: Protocol.Target.TargetInfo\n) => boolean;\n\n/**\n * @internal\n */\nexport type IsPageTargetCallback = (\n  target: Protocol.Target.TargetInfo\n) => boolean;\n\n/**\n * @internal\n */\nexport const WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map<\n  Permission,\n  Protocol.Browser.PermissionType\n>([\n  ['geolocation', 'geolocation'],\n  ['midi', 'midi'],\n  ['notifications', 'notifications'],\n  // TODO: push isn't a valid type?\n  // ['push', 'push'],\n  ['camera', 'videoCapture'],\n  ['microphone', 'audioCapture'],\n  ['background-sync', 'backgroundSync'],\n  ['ambient-light-sensor', 'sensors'],\n  ['accelerometer', 'sensors'],\n  ['gyroscope', 'sensors'],\n  ['magnetometer', 'sensors'],\n  ['accessibility-events', 'accessibilityEvents'],\n  ['clipboard-read', 'clipboardReadWrite'],\n  ['clipboard-write', 'clipboardReadWrite'],\n  ['clipboard-sanitized-write', 'clipboardSanitizedWrite'],\n  ['payment-handler', 'paymentHandler'],\n  ['persistent-storage', 'durableStorage'],\n  ['idle-detection', 'idleDetection'],\n  // chrome-specific permissions we have.\n  ['midi-sysex', 'midiSysex'],\n]);\n\n/**\n * @public\n */\nexport type Permission =\n  | 'geolocation'\n  | 'midi'\n  | 'notifications'\n  | 'camera'\n  | 'microphone'\n  | 'background-sync'\n  | 'ambient-light-sensor'\n  | 'accelerometer'\n  | 'gyroscope'\n  | 'magnetometer'\n  | 'accessibility-events'\n  | 'clipboard-read'\n  | 'clipboard-write'\n  | 'clipboard-sanitized-write'\n  | 'payment-handler'\n  | 'persistent-storage'\n  | 'idle-detection'\n  | 'midi-sysex';\n\n/**\n * @public\n */\nexport interface WaitForTargetOptions {\n  /**\n   * Maximum wait time in milliseconds. Pass `0` to disable the timeout.\n   * @defaultValue `30_000`\n   */\n  timeout?: number;\n}\n\n/**\n * All the events a {@link Browser | browser instance} may emit.\n *\n * @public\n */\nexport const enum BrowserEmittedEvents {\n  /**\n   * Emitted when Puppeteer gets disconnected from the browser instance. This\n   * might happen because of one of the following:\n   *\n   * - browser is closed or crashed\n   *\n   * - The {@link Browser.disconnect | browser.disconnect } method was called.\n   */\n  Disconnected = 'disconnected',\n\n  /**\n   * Emitted when the url of a target changes. Contains a {@link Target} instance.\n   *\n   * @remarks\n   *\n   * Note that this includes target changes in incognito browser contexts.\n   */\n  TargetChanged = 'targetchanged',\n\n  /**\n   * Emitted when a target is created, for example when a new page is opened by\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/open | window.open}\n   * or by {@link Browser.newPage | browser.newPage}\n   *\n   * Contains a {@link Target} instance.\n   *\n   * @remarks\n   *\n   * Note that this includes target creations in incognito browser contexts.\n   */\n  TargetCreated = 'targetcreated',\n  /**\n   * Emitted when a target is destroyed, for example when a page is closed.\n   * Contains a {@link Target} instance.\n   *\n   * @remarks\n   *\n   * Note that this includes target destructions in incognito browser contexts.\n   */\n  TargetDestroyed = 'targetdestroyed',\n}\n\n/**\n * A Browser is created when Puppeteer connects to a browser instance, either through\n * {@link PuppeteerNode.launch} or {@link Puppeteer.connect}.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link BrowserEmittedEvents} enum.\n *\n * @example\n * An example of using a {@link Browser} to create a {@link Page}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await browser.close();\n * })();\n * ```\n *\n * @example\n * An example of disconnecting from and reconnecting to a {@link Browser}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   // Store the endpoint to be able to reconnect to the browser.\n *   const browserWSEndpoint = browser.wsEndpoint();\n *   // Disconnect puppeteer from the browser.\n *   browser.disconnect();\n *\n *   // Use the endpoint to reestablish a connection\n *   const browser2 = await puppeteer.connect({browserWSEndpoint});\n *   // Close the browser.\n *   await browser2.close();\n * })();\n * ```\n *\n * @public\n */\nexport class Browser extends EventEmitter {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * @internal\n   */\n  _attach(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  _detach(): void {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  get _targets(): Map<string, Target> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The spawned browser process. Returns `null` if the browser instance was created with\n   * {@link Puppeteer.connect}.\n   */\n  process(): ChildProcess | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  _getIsPageTargetCallback(): IsPageTargetCallback | undefined {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Creates a new incognito browser context. This won't share cookies/cache with other\n   * browser contexts.\n   *\n   * @example\n   *\n   * ```ts\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   // Create a new incognito browser context.\n   *   const context = await browser.createIncognitoBrowserContext();\n   *   // Create a new page in a pristine context.\n   *   const page = await context.newPage();\n   *   // Do stuff\n   *   await page.goto('https://example.com');\n   * })();\n   * ```\n   */\n  createIncognitoBrowserContext(\n    options?: BrowserContextOptions\n  ): Promise<BrowserContext>;\n  createIncognitoBrowserContext(): Promise<BrowserContext> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Returns an array of all open browser contexts. In a newly created browser, this will\n   * return a single instance of {@link BrowserContext}.\n   */\n  browserContexts(): BrowserContext[] {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Returns the default browser context. The default browser context cannot be closed.\n   */\n  defaultBrowserContext(): BrowserContext {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  _disposeContext(contextId?: string): Promise<void>;\n  _disposeContext(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The browser websocket endpoint which can be used as an argument to\n   * {@link Puppeteer.connect}.\n   *\n   * @returns The Browser websocket url.\n   *\n   * @remarks\n   *\n   * The format is `ws://${host}:${port}/devtools/browser/<id>`.\n   *\n   * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.\n   * Learn more about the\n   * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and\n   * the {@link\n   * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target\n   * | browser endpoint}.\n   */\n  wsEndpoint(): string {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Promise which resolves to a new {@link Page} object. The Page is created in\n   * a default browser context.\n   */\n  newPage(): Promise<Page> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  _createPageInContext(contextId?: string): Promise<Page>;\n  _createPageInContext(): Promise<Page> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * All active targets inside the Browser. In case of multiple browser contexts, returns\n   * an array with all the targets in all browser contexts.\n   */\n  targets(): Target[] {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The target associated with the browser.\n   */\n  target(): Target {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Searches for a target in all browser contexts.\n   *\n   * @param predicate - A function to be run for every target.\n   * @returns The first target found that matches the `predicate` function.\n   *\n   * @example\n   *\n   * An example of finding a target for a page opened via `window.open`:\n   *\n   * ```ts\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browser.waitForTarget(\n   *   target => target.url() === 'https://www.example.com/'\n   * );\n   * ```\n   */\n  waitForTarget(\n    predicate: (x: Target) => boolean | Promise<boolean>,\n    options?: WaitForTargetOptions\n  ): Promise<Target>;\n  waitForTarget(): Promise<Target> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * An array of all open pages inside the Browser.\n   *\n   * @remarks\n   *\n   * In case of multiple browser contexts, returns an array with all the pages in all\n   * browser contexts. Non-visible pages, such as `\"background_page\"`, will not be listed\n   * here. You can find them using {@link Target.page}.\n   */\n  async pages(): Promise<Page[]> {\n    const contextPages = await Promise.all(\n      this.browserContexts().map(context => {\n        return context.pages();\n      })\n    );\n    // Flatten array.\n    return contextPages.reduce((acc, x) => {\n      return acc.concat(x);\n    }, []);\n  }\n\n  /**\n   * A string representing the browser name and version.\n   *\n   * @remarks\n   *\n   * For headless browser, this is similar to `HeadlessChrome/61.0.3153.0`. For\n   * non-headless or new-headless, this is similar to `Chrome/61.0.3153.0`. For\n   * Firefox, it is similar to `Firefox/116.0a1`.\n   *\n   * The format of browser.version() might change with future releases of\n   * browsers.\n   */\n  version(): Promise<string> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The browser's original user agent. Pages can override the browser user agent with\n   * {@link Page.setUserAgent}.\n   */\n  userAgent(): Promise<string> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Closes the browser and all of its pages (if any were opened). The\n   * {@link Browser} object itself is considered to be disposed and cannot be\n   * used anymore.\n   */\n  close(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Disconnects Puppeteer from the browser, but leaves the browser process running.\n   * After calling `disconnect`, the {@link Browser} object is considered disposed and\n   * cannot be used anymore.\n   */\n  disconnect(): void {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Indicates that the browser is connected.\n   */\n  isConnected(): boolean {\n    throw new Error('Not implemented');\n  }\n}\n/**\n * @public\n */\nexport const enum BrowserContextEmittedEvents {\n  /**\n   * Emitted when the url of a target inside the browser context changes.\n   * Contains a {@link Target} instance.\n   */\n  TargetChanged = 'targetchanged',\n\n  /**\n   * Emitted when a target is created within the browser context, for example\n   * when a new page is opened by\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/open | window.open}\n   * or by {@link BrowserContext.newPage | browserContext.newPage}\n   *\n   * Contains a {@link Target} instance.\n   */\n  TargetCreated = 'targetcreated',\n  /**\n   * Emitted when a target is destroyed within the browser context, for example\n   * when a page is closed. Contains a {@link Target} instance.\n   */\n  TargetDestroyed = 'targetdestroyed',\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {EventEmitter} from '../common/EventEmitter.js';\nimport {Target} from '../common/Target.js';\n\nimport type {Permission, Browser} from './Browser.js';\nimport {Page} from './Page.js';\n\n/**\n * BrowserContexts provide a way to operate multiple independent browser\n * sessions. When a browser is launched, it has a single BrowserContext used by\n * default. The method {@link Browser.newPage | Browser.newPage} creates a page\n * in the default browser context.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and\n * will emit various events which are documented in the\n * {@link BrowserContextEmittedEvents} enum.\n *\n * If a page opens another page, e.g. with a `window.open` call, the popup will\n * belong to the parent page's browser context.\n *\n * Puppeteer allows creation of \"incognito\" browser contexts with\n * {@link Browser.createIncognitoBrowserContext | Browser.createIncognitoBrowserContext}\n * method. \"Incognito\" browser contexts don't write any browsing data to disk.\n *\n * @example\n *\n * ```ts\n * // Create a new incognito browser context\n * const context = await browser.createIncognitoBrowserContext();\n * // Create a new page inside context.\n * const page = await context.newPage();\n * // ... do stuff with page ...\n * await page.goto('https://example.com');\n * // Dispose context once it's no longer needed.\n * await context.close();\n * ```\n *\n * @public\n */\n\nexport class BrowserContext extends EventEmitter {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * An array of all active targets inside the browser context.\n   */\n  targets(): Target[] {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This searches for a target in this specific browser context.\n   *\n   * @example\n   * An example of finding a target for a page opened via `window.open`:\n   *\n   * ```ts\n   * await page.evaluate(() => window.open('https://www.example.com/'));\n   * const newWindowTarget = await browserContext.waitForTarget(\n   *   target => target.url() === 'https://www.example.com/'\n   * );\n   * ```\n   *\n   * @param predicate - A function to be run for every target\n   * @param options - An object of options. Accepts a timeout,\n   * which is the maximum wait time in milliseconds.\n   * Pass `0` to disable the timeout. Defaults to 30 seconds.\n   * @returns Promise which resolves to the first target found\n   * that matches the `predicate` function.\n   */\n  waitForTarget(\n    predicate: (x: Target) => boolean | Promise<boolean>,\n    options?: {timeout?: number}\n  ): Promise<Target>;\n  waitForTarget(): Promise<Target> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * An array of all pages inside the browser context.\n   *\n   * @returns Promise which resolves to an array of all open pages.\n   * Non visible pages, such as `\"background_page\"`, will not be listed here.\n   * You can find them using {@link Target.page | the target page}.\n   */\n  pages(): Promise<Page[]> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Returns whether BrowserContext is incognito.\n   * The default browser context is the only non-incognito browser context.\n   *\n   * @remarks\n   * The default browser context cannot be closed.\n   */\n  isIncognito(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @example\n   *\n   * ```ts\n   * const context = browser.defaultBrowserContext();\n   * await context.overridePermissions('https://html5demos.com', [\n   *   'geolocation',\n   * ]);\n   * ```\n   *\n   * @param origin - The origin to grant permissions to, e.g. \"https://example.com\".\n   * @param permissions - An array of permissions to grant.\n   * All permissions that are not listed here will be automatically denied.\n   */\n  overridePermissions(origin: string, permissions: Permission[]): Promise<void>;\n  overridePermissions(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Clears all permission overrides for the browser context.\n   *\n   * @example\n   *\n   * ```ts\n   * const context = browser.defaultBrowserContext();\n   * context.overridePermissions('https://example.com', ['clipboard-read']);\n   * // do stuff ..\n   * context.clearPermissionOverrides();\n   * ```\n   */\n  clearPermissionOverrides(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Creates a new page in the browser context.\n   */\n  newPage(): Promise<Page> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The browser this browser context belongs to.\n   */\n  browser(): Browser {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Closes the browser context. All the targets that belong to the browser context\n   * will be closed.\n   *\n   * @remarks\n   * Only incognito browser contexts can be closed.\n   */\n  close(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  get id(): string | undefined {\n    return undefined;\n  }\n}\n", "/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that the given value is truthy.\n * @param value - some conditional statement\n * @param message - the error message to throw if the value is not truthy.\n *\n * @internal\n */\nexport const assert: (value: unknown, message?: string) => asserts value = (\n  value,\n  message\n) => {\n  if (!value) {\n    throw new Error(message);\n  }\n};\n", "/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @deprecated Do not use.\n *\n * @public\n */\nexport class CustomError extends Error {\n  /**\n   * @internal\n   */\n  constructor(message?: string) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n/**\n * TimeoutError is emitted whenever certain operations are terminated due to\n * timeout.\n *\n * @remarks\n * Example operations are {@link Page.waitForSelector | page.waitForSelector} or\n * {@link PuppeteerNode.launch | puppeteer.launch}.\n *\n * @public\n */\nexport class TimeoutError extends CustomError {}\n\n/**\n * ProtocolError is emitted whenever there is an error from the protocol.\n *\n * @public\n */\nexport class ProtocolError extends CustomError {\n  #code?: number;\n  #originalMessage = '';\n\n  set code(code: number | undefined) {\n    this.#code = code;\n  }\n  /**\n   * @readonly\n   * @public\n   */\n  get code(): number | undefined {\n    return this.#code;\n  }\n\n  set originalMessage(originalMessage: string) {\n    this.#originalMessage = originalMessage;\n  }\n  /**\n   * @readonly\n   * @public\n   */\n  get originalMessage(): string {\n    return this.#originalMessage;\n  }\n}\n\n/**\n * @internal\n */\nexport class TargetCloseError extends ProtocolError {}\n\n/**\n * @deprecated Do not use.\n *\n * @public\n */\nexport interface PuppeteerErrors {\n  TimeoutError: typeof TimeoutError;\n  ProtocolError: typeof ProtocolError;\n}\n\n/**\n * @deprecated Import error classes directly.\n *\n * Puppeteer methods might throw errors if they are unable to fulfill a request.\n * For example, `page.waitForSelector(selector[, options])` might fail if the\n * selector doesn't match any nodes during the given timeframe.\n *\n * For certain types of errors Puppeteer uses specific error classes. These\n * classes are available via `puppeteer.errors`.\n *\n * @example\n * An example of handling a timeout error:\n *\n * ```ts\n * try {\n *   await page.waitForSelector('.foo');\n * } catch (e) {\n *   if (e instanceof TimeoutError) {\n *     // Do something if this is a timeout.\n *   }\n * }\n * ```\n *\n * @public\n */\nexport const errors: PuppeteerErrors = Object.freeze({\n  TimeoutError,\n  ProtocolError,\n});\n", "import {TimeoutError} from '../common/Errors.js';\n\n/**\n * @internal\n */\nexport interface DeferredOptions {\n  message: string;\n  timeout: number;\n}\n\n/**\n * Creates and returns a deferred object along with the resolve/reject functions.\n *\n * If the deferred has not been resolved/rejected within the `timeout` period,\n * the deferred gets resolves with a timeout error. `timeout` has to be greater than 0 or\n * it is ignored.\n *\n * @internal\n */\nexport class Deferred<T> {\n  #isResolved = false;\n  #isRejected = false;\n  #value: T | Error | undefined;\n  #resolver: (value: void) => void = () => {};\n  #taskPromise = new Promise<void>(resolve => {\n    this.#resolver = resolve;\n  });\n  #timeoutId: ReturnType<typeof setTimeout> | undefined;\n\n  constructor(opts?: DeferredOptions) {\n    this.#timeoutId =\n      opts && opts.timeout > 0\n        ? setTimeout(() => {\n            this.reject(new TimeoutError(opts.message));\n          }, opts.timeout)\n        : undefined;\n  }\n\n  #finish(value: T | Error) {\n    clearTimeout(this.#timeoutId);\n    this.#value = value;\n    this.#resolver();\n  }\n\n  resolve(value: T): void {\n    if (this.#isRejected || this.#isResolved) {\n      return;\n    }\n    this.#isResolved = true;\n    this.#finish(value);\n  }\n\n  reject(error: Error): void {\n    if (this.#isRejected || this.#isResolved) {\n      return;\n    }\n    this.#isRejected = true;\n    this.#finish(error);\n  }\n\n  resolved(): boolean {\n    return this.#isResolved;\n  }\n\n  finished(): boolean {\n    return this.#isResolved || this.#isRejected;\n  }\n\n  value(): T | Error | undefined {\n    return this.#value;\n  }\n\n  async valueOrThrow(): Promise<T> {\n    await this.#taskPromise;\n    if (this.#isRejected) {\n      throw this.#value;\n    }\n    return this.#value as T;\n  }\n\n  static create<R>(opts?: DeferredOptions): Deferred<R> {\n    return new Deferred<R>(opts);\n  }\n\n  static async race<R>(\n    awaitables: Array<Promise<R> | Deferred<R>>\n  ): Promise<R> {\n    const deferredWithTimeout: Set<Deferred<R>> = new Set();\n    try {\n      const promises = awaitables.map(value => {\n        if (value instanceof Deferred) {\n          if (value.#timeoutId) {\n            deferredWithTimeout.add(value);\n          }\n\n          return value.valueOrThrow();\n        }\n\n        return value;\n      });\n      // eslint-disable-next-line no-restricted-syntax\n      return await Promise.race(promises);\n    } finally {\n      for (const deferred of deferredWithTimeout) {\n        // We need to stop the timeout else\n        // Node.JS will keep running the event loop till the\n        // timer executes\n        deferred.reject(new Error('Timeout cleared'));\n      }\n    }\n  }\n}\n", "/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @internal\n */\nexport const isNode = !!(typeof process !== 'undefined' && process.version);\n\n/**\n * @internal\n */\nexport const DEFERRED_PROMISE_DEBUG_TIMEOUT =\n  typeof process !== 'undefined' &&\n  typeof process.env['PUPPETEER_DEFERRED_PROMISE_DEBUG_TIMEOUT'] !== 'undefined'\n    ? Number(process.env['PUPPETEER_DEFERRED_PROMISE_DEBUG_TIMEOUT'])\n    : -1;\n", "import {DEFERRED_PROMISE_DEBUG_TIMEOUT} from '../environment.js';\n\nimport {Deferred} from './Deferred.js';\n\n/**\n * Creates and returns a deferred promise using DEFERRED_PROMISE_DEBUG_TIMEOUT\n * if it's specified or a normal deferred promise otherwise.\n *\n * @internal\n */\nexport function createDebuggableDeferred<T>(message: string): Deferred<T> {\n  if (DEFERRED_PROMISE_DEBUG_TIMEOUT > 0) {\n    return Deferred.create({\n      message,\n      timeout: DEFERRED_PROMISE_DEBUG_TIMEOUT,\n    });\n  }\n  return Deferred.create();\n}\n", "/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Protocol} from 'devtools-protocol';\n\nimport {CDPSession} from '../common/Connection.js';\n\nimport {Frame} from './Frame.js';\nimport {HTTPResponse} from './HTTPResponse.js';\n\n/**\n * @public\n */\nexport interface ContinueRequestOverrides {\n  /**\n   * If set, the request URL will change. This is not a redirect.\n   */\n  url?: string;\n  method?: string;\n  postData?: string;\n  headers?: Record<string, string>;\n}\n\n/**\n * @public\n */\nexport interface InterceptResolutionState {\n  action: InterceptResolutionAction;\n  priority?: number;\n}\n\n/**\n * Required response data to fulfill a request with.\n *\n * @public\n */\nexport interface ResponseForRequest {\n  status: number;\n  /**\n   * Optional response headers. All values are converted to strings.\n   */\n  headers: Record<string, unknown>;\n  contentType: string;\n  body: string | Buffer;\n}\n\n/**\n * Resource types for HTTPRequests as perceived by the rendering engine.\n *\n * @public\n */\nexport type ResourceType = Lowercase<Protocol.Network.ResourceType>;\n\n/**\n * The default cooperative request interception resolution priority\n *\n * @public\n */\nexport const DEFAULT_INTERCEPT_RESOLUTION_PRIORITY = 0;\n\n/**\n * Represents an HTTP request sent by a page.\n * @remarks\n *\n * Whenever the page sends a request, such as for a network resource, the\n * following events are emitted by Puppeteer's `page`:\n *\n * - `request`: emitted when the request is issued by the page.\n * - `requestfinished` - emitted when the response body is downloaded and the\n *   request is complete.\n *\n * If request fails at some point, then instead of `requestfinished` event the\n * `requestfailed` event is emitted.\n *\n * All of these events provide an instance of `HTTPRequest` representing the\n * request that occurred:\n *\n * ```\n * page.on('request', request => ...)\n * ```\n *\n * NOTE: HTTP Error responses, such as 404 or 503, are still successful\n * responses from HTTP standpoint, so request will complete with\n * `requestfinished` event.\n *\n * If request gets a 'redirect' response, the request is successfully finished\n * with the `requestfinished` event, and a new request is issued to a\n * redirected url.\n *\n * @public\n */\nexport class HTTPRequest {\n  /**\n   * @internal\n   */\n  _requestId = '';\n  /**\n   * @internal\n   */\n  _interceptionId: string | undefined;\n  /**\n   * @internal\n   */\n  _failureText: string | null = null;\n  /**\n   * @internal\n   */\n  _response: HTTPResponse | null = null;\n  /**\n   * @internal\n   */\n  _fromMemoryCache = false;\n  /**\n   * @internal\n   */\n  _redirectChain: HTTPRequest[] = [];\n\n  /**\n   * Warning! Using this client can break Puppeteer. Use with caution.\n   *\n   * @experimental\n   */\n  get client(): CDPSession {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * The URL of the request\n   */\n  url(): string {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The `ContinueRequestOverrides` that will be used\n   * if the interception is allowed to continue (ie, `abort()` and\n   * `respond()` aren't called).\n   */\n  continueRequestOverrides(): ContinueRequestOverrides {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The `ResponseForRequest` that gets used if the\n   * interception is allowed to respond (ie, `abort()` is not called).\n   */\n  responseForRequest(): Partial<ResponseForRequest> | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The most recent reason for aborting the request\n   */\n  abortErrorReason(): Protocol.Network.ErrorReason | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * An InterceptResolutionState object describing the current resolution\n   * action and priority.\n   *\n   * InterceptResolutionState contains:\n   * action: InterceptResolutionAction\n   * priority?: number\n   *\n   * InterceptResolutionAction is one of: `abort`, `respond`, `continue`,\n   * `disabled`, `none`, or `already-handled`.\n   */\n  interceptResolutionState(): InterceptResolutionState {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Is `true` if the intercept resolution has already been handled,\n   * `false` otherwise.\n   */\n  isInterceptResolutionHandled(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Adds an async request handler to the processing queue.\n   * Deferred handlers are not guaranteed to execute in any particular order,\n   * but they are guaranteed to resolve before the request interception\n   * is finalized.\n   */\n  enqueueInterceptAction(\n    pendingHandler: () => void | PromiseLike<unknown>\n  ): void;\n  enqueueInterceptAction(): void {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Awaits pending interception handlers and then decides how to fulfill\n   * the request interception.\n   */\n  async finalizeInterceptions(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Contains the request's resource type as it was perceived by the rendering\n   * engine.\n   */\n  resourceType(): ResourceType {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The method used (`GET`, `POST`, etc.)\n   */\n  method(): string {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The request's post body, if any.\n   */\n  postData(): string | undefined {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * An object with HTTP headers associated with the request. All\n   * header names are lower-case.\n   */\n  headers(): Record<string, string> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * A matching `HTTPResponse` object, or null if the response has not\n   * been received yet.\n   */\n  response(): HTTPResponse | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The frame that initiated the request, or null if navigating to\n   * error pages.\n   */\n  frame(): Frame | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * True if the request is the driver of the current frame's navigation.\n   */\n  isNavigationRequest(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The initiator of the request.\n   */\n  initiator(): Protocol.Network.Initiator | undefined {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * A `redirectChain` is a chain of requests initiated to fetch a resource.\n   * @remarks\n   *\n   * `redirectChain` is shared between all the requests of the same chain.\n   *\n   * For example, if the website `http://example.com` has a single redirect to\n   * `https://example.com`, then the chain will contain one request:\n   *\n   * ```ts\n   * const response = await page.goto('http://example.com');\n   * const chain = response.request().redirectChain();\n   * console.log(chain.length); // 1\n   * console.log(chain[0].url()); // 'http://example.com'\n   * ```\n   *\n   * If the website `https://google.com` has no redirects, then the chain will be empty:\n   *\n   * ```ts\n   * const response = await page.goto('https://google.com');\n   * const chain = response.request().redirectChain();\n   * console.log(chain.length); // 0\n   * ```\n   *\n   * @returns the chain of requests - if a server responds with at least a\n   * single redirect, this chain will contain all requests that were redirected.\n   */\n  redirectChain(): HTTPRequest[] {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Access information about the request's failure.\n   *\n   * @remarks\n   *\n   * @example\n   *\n   * Example of logging all failed requests:\n   *\n   * ```ts\n   * page.on('requestfailed', request => {\n   *   console.log(request.url() + ' ' + request.failure().errorText);\n   * });\n   * ```\n   *\n   * @returns `null` unless the request failed. If the request fails this can\n   * return an object with `errorText` containing a human-readable error\n   * message, e.g. `net::ERR_FAILED`. It is not guaranteed that there will be\n   * failure text if the request fails.\n   */\n  failure(): {errorText: string} | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Continues request with optional request overrides.\n   *\n   * @remarks\n   *\n   * To use this, request\n   * interception should be enabled with {@link Page.setRequestInterception}.\n   *\n   * Exception is immediately thrown if the request interception is not enabled.\n   *\n   * @example\n   *\n   * ```ts\n   * await page.setRequestInterception(true);\n   * page.on('request', request => {\n   *   // Override headers\n   *   const headers = Object.assign({}, request.headers(), {\n   *     foo: 'bar', // set \"foo\" header\n   *     origin: undefined, // remove \"origin\" header\n   *   });\n   *   request.continue({headers});\n   * });\n   * ```\n   *\n   * @param overrides - optional overrides to apply to the request.\n   * @param priority - If provided, intercept is resolved using\n   * cooperative handling rules. Otherwise, intercept is resolved\n   * immediately.\n   */\n  async continue(\n    overrides?: ContinueRequestOverrides,\n    priority?: number\n  ): Promise<void>;\n  async continue(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Fulfills a request with the given response.\n   *\n   * @remarks\n   *\n   * To use this, request\n   * interception should be enabled with {@link Page.setRequestInterception}.\n   *\n   * Exception is immediately thrown if the request interception is not enabled.\n   *\n   * @example\n   * An example of fulfilling all requests with 404 responses:\n   *\n   * ```ts\n   * await page.setRequestInterception(true);\n   * page.on('request', request => {\n   *   request.respond({\n   *     status: 404,\n   *     contentType: 'text/plain',\n   *     body: 'Not Found!',\n   *   });\n   * });\n   * ```\n   *\n   * NOTE: Mocking responses for dataURL requests is not supported.\n   * Calling `request.respond` for a dataURL request is a noop.\n   *\n   * @param response - the response to fulfill the request with.\n   * @param priority - If provided, intercept is resolved using\n   * cooperative handling rules. Otherwise, intercept is resolved\n   * immediately.\n   */\n  async respond(\n    response: Partial<ResponseForRequest>,\n    priority?: number\n  ): Promise<void>;\n  async respond(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Aborts a request.\n   *\n   * @remarks\n   * To use this, request interception should be enabled with\n   * {@link Page.setRequestInterception}. If it is not enabled, this method will\n   * throw an exception immediately.\n   *\n   * @param errorCode - optional error code to provide.\n   * @param priority - If provided, intercept is resolved using\n   * cooperative handling rules. Otherwise, intercept is resolved\n   * immediately.\n   */\n  async abort(errorCode?: ErrorCode, priority?: number): Promise<void>;\n  async abort(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n}\n\n/**\n * @public\n */\nexport enum InterceptResolutionAction {\n  Abort = 'abort',\n  Respond = 'respond',\n  Continue = 'continue',\n  Disabled = 'disabled',\n  None = 'none',\n  AlreadyHandled = 'already-handled',\n}\n\n/**\n * @public\n *\n * @deprecated please use {@link InterceptResolutionAction} instead.\n */\nexport type InterceptResolutionStrategy = InterceptResolutionAction;\n\n/**\n * @public\n */\nexport type ErrorCode =\n  | 'aborted'\n  | 'accessdenied'\n  | 'addressunreachable'\n  | 'blockedbyclient'\n  | 'blockedbyresponse'\n  | 'connectionaborted'\n  | 'connectionclosed'\n  | 'connectionfailed'\n  | 'connectionrefused'\n  | 'connectionreset'\n  | 'internetdisconnected'\n  | 'namenotresolved'\n  | 'timedout'\n  | 'failed';\n\n/**\n * @public\n */\nexport type ActionResult = 'continue' | 'abort' | 'respond';\n\n/**\n * @internal\n */\nexport function headersArray(\n  headers: Record<string, string | string[]>\n): Array<{name: string; value: string}> {\n  const result = [];\n  for (const name in headers) {\n    const value = headers[name];\n\n    if (!Object.is(value, undefined)) {\n      const values = Array.isArray(value) ? value : [value];\n\n      result.push(\n        ...values.map(value => {\n          return {name, value: value + ''};\n        })\n      );\n    }\n  }\n  return result;\n}\n\n/**\n * @internal\n *\n * @remarks\n * List taken from {@link https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml}\n * with extra 306 and 418 codes.\n */\nexport const STATUS_TEXTS: {[key: string]: string | undefined} = {\n  '100': 'Continue',\n  '101': 'Switching Protocols',\n  '102': 'Processing',\n  '103': 'Early Hints',\n  '200': 'OK',\n  '201': 'Created',\n  '202': 'Accepted',\n  '203': 'Non-Authoritative Information',\n  '204': 'No Content',\n  '205': 'Reset Content',\n  '206': 'Partial Content',\n  '207': 'Multi-Status',\n  '208': 'Already Reported',\n  '226': 'IM Used',\n  '300': 'Multiple Choices',\n  '301': 'Moved Permanently',\n  '302': 'Found',\n  '303': 'See Other',\n  '304': 'Not Modified',\n  '305': 'Use Proxy',\n  '306': 'Switch Proxy',\n  '307': 'Temporary Redirect',\n  '308': 'Permanent Redirect',\n  '400': 'Bad Request',\n  '401': 'Unauthorized',\n  '402': 'Payment Required',\n  '403': 'Forbidden',\n  '404': 'Not Found',\n  '405': 'Method Not Allowed',\n  '406': 'Not Acceptable',\n  '407': 'Proxy Authentication Required',\n  '408': 'Request Timeout',\n  '409': 'Conflict',\n  '410': 'Gone',\n  '411': 'Length Required',\n  '412': 'Precondition Failed',\n  '413': 'Payload Too Large',\n  '414': 'URI Too Long',\n  '415': 'Unsupported Media Type',\n  '416': 'Range Not Satisfiable',\n  '417': 'Expectation Failed',\n  '418': \"I'm a teapot\",\n  '421': 'Misdirected Request',\n  '422': 'Unprocessable Entity',\n  '423': 'Locked',\n  '424': 'Failed Dependency',\n  '425': 'Too Early',\n  '426': 'Upgrade Required',\n  '428': 'Precondition Required',\n  '429': 'Too Many Requests',\n  '431': 'Request Header Fields Too Large',\n  '451': 'Unavailable For Legal Reasons',\n  '500': 'Internal Server Error',\n  '501': 'Not Implemented',\n  '502': 'Bad Gateway',\n  '503': 'Service Unavailable',\n  '504': 'Gateway Timeout',\n  '505': 'HTTP Version Not Supported',\n  '506': 'Variant Also Negotiates',\n  '507': 'Insufficient Storage',\n  '508': 'Loop Detected',\n  '510': 'Not Extended',\n  '511': 'Network Authentication Required',\n} as const;\n", "/**\n * @internal\n */\n\nexport interface ErrorLike extends Error {\n  name: string;\n  message: string;\n}\n/**\n * @internal\n */\n\nexport function isErrorLike(obj: unknown): obj is ErrorLike {\n  return (\n    typeof obj === 'object' && obj !== null && 'name' in obj && 'message' in obj\n  );\n}\n/**\n * @internal\n */\n\nexport function isErrnoException(obj: unknown): obj is NodeJS.ErrnoException {\n  return (\n    isErrorLike(obj) &&\n    ('errno' in obj || 'code' in obj || 'path' in obj || 'syscall' in obj)\n  );\n}\n", "/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isNode} from '../environment.js';\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var __PUPPETEER_DEBUG: string;\n}\n\n/**\n * @internal\n */\nlet debugModule: typeof import('debug') | null = null;\n/**\n * @internal\n */\nexport async function importDebug(): Promise<typeof import('debug')> {\n  if (!debugModule) {\n    debugModule = (await import('debug')).default;\n  }\n  return debugModule;\n}\n\n/**\n * A debug function that can be used in any environment.\n *\n * @remarks\n * If used in Node, it falls back to the\n * {@link https://www.npmjs.com/package/debug | debug module}. In the browser it\n * uses `console.log`.\n *\n * In Node, use the `DEBUG` environment variable to control logging:\n *\n * ```\n * DEBUG=* // logs all channels\n * DEBUG=foo // logs the `foo` channel\n * DEBUG=foo* // logs any channels starting with `foo`\n * ```\n *\n * In the browser, set `window.__PUPPETEER_DEBUG` to a string:\n *\n * ```\n * window.__PUPPETEER_DEBUG='*'; // logs all channels\n * window.__PUPPETEER_DEBUG='foo'; // logs the `foo` channel\n * window.__PUPPETEER_DEBUG='foo*'; // logs any channels starting with `foo`\n * ```\n *\n * @example\n *\n * ```\n * const log = debug('Page');\n *\n * log('new page created')\n * // logs \"Page: new page created\"\n * ```\n *\n * @param prefix - this will be prefixed to each log.\n * @returns a function that can be called to log to that debug channel.\n *\n * @internal\n */\nexport const debug = (prefix: string): ((...args: unknown[]) => void) => {\n  if (isNode) {\n    return async (...logArgs: unknown[]) => {\n      if (captureLogs) {\n        capturedLogs.push(prefix + logArgs);\n      }\n      (await importDebug())(prefix)(logArgs);\n    };\n  }\n\n  return (...logArgs: unknown[]): void => {\n    const debugLevel = (globalThis as any).__PUPPETEER_DEBUG;\n    if (!debugLevel) {\n      return;\n    }\n\n    const everythingShouldBeLogged = debugLevel === '*';\n\n    const prefixMatchesDebugLevel =\n      everythingShouldBeLogged ||\n      /**\n       * If the debug level is `foo*`, that means we match any prefix that\n       * starts with `foo`. If the level is `foo`, we match only the prefix\n       * `foo`.\n       */\n      (debugLevel.endsWith('*')\n        ? prefix.startsWith(debugLevel)\n        : prefix === debugLevel);\n\n    if (!prefixMatchesDebugLevel) {\n      return;\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(`${prefix}:`, ...logArgs);\n  };\n};\n\n/**\n * @internal\n */\nlet capturedLogs: string[] = [];\n/**\n * @internal\n */\nlet captureLogs = false;\n\n/**\n * @internal\n */\nexport function setLogCapture(value: boolean): void {\n  capturedLogs = [];\n  captureLogs = value;\n}\n\n/**\n * @internal\n */\nexport function getCapturedLogs(): string[] {\n  return capturedLogs;\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {AwaitableIterable} from '../common/types.js';\n\n/**\n * @internal\n */\nexport class AsyncIterableUtil {\n  static async *map<T, U>(\n    iterable: AwaitableIterable<T>,\n    map: (item: T) => Promise<U>\n  ): AsyncIterable<U> {\n    for await (const value of iterable) {\n      yield await map(value);\n    }\n  }\n\n  static async *flatMap<T, U>(\n    iterable: AwaitableIterable<T>,\n    map: (item: T) => AwaitableIterable<U>\n  ): AsyncIterable<U> {\n    for await (const value of iterable) {\n      yield* map(value);\n    }\n  }\n\n  static async collect<T>(iterable: AwaitableIterable<T>): Promise<T[]> {\n    const result = [];\n    for await (const value of iterable) {\n      result.push(value);\n    }\n    return result;\n  }\n\n  static async first<T>(\n    iterable: AwaitableIterable<T>\n  ): Promise<T | undefined> {\n    for await (const value of iterable) {\n      return value;\n    }\n    return;\n  }\n}\n", "/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {JSHandle} from '../api/JSHandle.js';\nimport PuppeteerUtil from '../injected/injected.js';\n\n/**\n * @internal\n */\nexport interface PuppeteerUtilWrapper {\n  puppeteerUtil: Promise<JSHandle<PuppeteerUtil>>;\n}\n\n/**\n * @internal\n */\nexport class LazyArg<T, Context = PuppeteerUtilWrapper> {\n  static create = <T>(\n    get: (context: PuppeteerUtilWrapper) => Promise<T> | T\n  ): T => {\n    // We don't want to introduce LazyArg to the type system, otherwise we would\n    // have to make it public.\n    return new LazyArg(get) as unknown as T;\n  };\n\n  #get: (context: Context) => Promise<T> | T;\n  private constructor(get: (context: Context) => Promise<T> | T) {\n    this.#get = get;\n  }\n\n  async get(context: Context): Promise<T> {\n    return this.#get(context);\n  }\n}\n", "/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {ElementHandle} from '../api/ElementHandle.js';\nimport {assert} from '../util/assert.js';\nimport {AsyncIterableUtil} from '../util/AsyncIterableUtil.js';\n\nimport {CDPSession} from './Connection.js';\nimport {QueryHandler, QuerySelector} from './QueryHandler.js';\nimport {AwaitableIterable} from './types.js';\n\nconst queryAXTree = async (\n  client: CDPSession,\n  element: ElementHandle<Node>,\n  accessibleName?: string,\n  role?: string\n): Promise<Protocol.Accessibility.AXNode[]> => {\n  const {nodes} = await client.send('Accessibility.queryAXTree', {\n    objectId: element.id,\n    accessibleName,\n    role,\n  });\n  return nodes.filter((node: Protocol.Accessibility.AXNode) => {\n    return !node.role || node.role.value !== 'StaticText';\n  });\n};\n\ntype ARIASelector = {name?: string; role?: string};\n\nconst KNOWN_ATTRIBUTES = Object.freeze(['name', 'role']);\nconst isKnownAttribute = (\n  attribute: string\n): attribute is keyof ARIASelector => {\n  return KNOWN_ATTRIBUTES.includes(attribute);\n};\n\nconst normalizeValue = (value: string): string => {\n  return value.replace(/ +/g, ' ').trim();\n};\n\n/**\n * The selectors consist of an accessible name to query for and optionally\n * further aria attributes on the form `[<attribute>=<value>]`.\n * Currently, we only support the `name` and `role` attribute.\n * The following examples showcase how the syntax works wrt. querying:\n *\n * - 'title[role=\"heading\"]' queries for elements with name 'title' and role 'heading'.\n * - '[role=\"img\"]' queries for elements with role 'img' and any name.\n * - 'label' queries for elements with name 'label' and any role.\n * - '[name=\"\"][role=\"button\"]' queries for elements with no name and role 'button'.\n */\nconst ATTRIBUTE_REGEXP =\n  /\\[\\s*(?<attribute>\\w+)\\s*=\\s*(?<quote>\"|')(?<value>\\\\.|.*?(?=\\k<quote>))\\k<quote>\\s*\\]/g;\nconst parseARIASelector = (selector: string): ARIASelector => {\n  const queryOptions: ARIASelector = {};\n  const defaultName = selector.replace(\n    ATTRIBUTE_REGEXP,\n    (_, attribute, __, value) => {\n      attribute = attribute.trim();\n      assert(\n        isKnownAttribute(attribute),\n        `Unknown aria attribute \"${attribute}\" in selector`\n      );\n      queryOptions[attribute] = normalizeValue(value);\n      return '';\n    }\n  );\n  if (defaultName && !queryOptions.name) {\n    queryOptions.name = normalizeValue(defaultName);\n  }\n  return queryOptions;\n};\n\n/**\n * @internal\n */\nexport class ARIAQueryHandler extends QueryHandler {\n  static override querySelector: QuerySelector = async (\n    node,\n    selector,\n    {ariaQuerySelector}\n  ) => {\n    return ariaQuerySelector(node, selector);\n  };\n\n  static override async *queryAll(\n    element: ElementHandle<Node>,\n    selector: string\n  ): AwaitableIterable<ElementHandle<Node>> {\n    const context = element.executionContext();\n    const {name, role} = parseARIASelector(selector);\n    const results = await queryAXTree(context._client, element, name, role);\n    const world = context._world!;\n    yield* AsyncIterableUtil.map(results, node => {\n      return world.adoptBackendNode(node.backendDOMNodeId) as Promise<\n        ElementHandle<Node>\n      >;\n    });\n  }\n\n  static override queryOne = async (\n    element: ElementHandle<Node>,\n    selector: string\n  ): Promise<ElementHandle<Node> | null> => {\n    return (\n      (await AsyncIterableUtil.first(this.queryAll(element, selector))) ?? null\n    );\n  };\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst createdFunctions = new Map<string, (...args: unknown[]) => unknown>();\n\n/**\n * Creates a function from a string.\n *\n * @internal\n */\nexport const createFunction = (\n  functionValue: string\n): ((...args: unknown[]) => unknown) => {\n  let fn = createdFunctions.get(functionValue);\n  if (fn) {\n    return fn;\n  }\n  fn = new Function(`return ${functionValue}`)() as (\n    ...args: unknown[]\n  ) => unknown;\n  createdFunctions.set(functionValue, fn);\n  return fn;\n};\n\n/**\n * @internal\n */\nexport function stringifyFunction(fn: (...args: never) => unknown): string {\n  let value = fn.toString();\n  try {\n    new Function(`(${value})`);\n  } catch {\n    // This means we might have a function shorthand (e.g. `test(){}`). Let's\n    // try prefixing.\n    let prefix = 'function ';\n    if (value.startsWith('async ')) {\n      prefix = `async ${prefix}`;\n      value = value.substring('async '.length);\n    }\n    value = `${prefix}${value}`;\n    try {\n      new Function(`(${value})`);\n    } catch {\n      // We tried hard to serialize, but there's a weird beast here.\n      throw new Error('Passed function cannot be serialized!');\n    }\n  }\n  return value;\n}\n\n/**\n * Replaces `PLACEHOLDER`s with the given replacements.\n *\n * All replacements must be valid JS code.\n *\n * @example\n *\n * ```ts\n * interpolateFunction(() => PLACEHOLDER('test'), {test: 'void 0'});\n * // Equivalent to () => void 0\n * ```\n *\n * @internal\n */\nexport const interpolateFunction = <T extends (...args: never[]) => unknown>(\n  fn: T,\n  replacements: Record<string, string>\n): T => {\n  let value = stringifyFunction(fn);\n  for (const [name, jsValue] of Object.entries(replacements)) {\n    value = value.replace(\n      new RegExp(`PLACEHOLDER\\\\(\\\\s*(?:'${name}'|\"${name}\")\\\\s*\\\\)`, 'g'),\n      // Wrapping this ensures tersers that accidently inline PLACEHOLDER calls\n      // are still valid. Without, we may get calls like ()=>{...}() which is\n      // not valid.\n      `(${jsValue})`\n    );\n  }\n  return createFunction(value) as unknown as T;\n};\n\ndeclare global {\n  /**\n   * Used for interpolation with {@link interpolateFunction}.\n   *\n   * @internal\n   */\n  function PLACEHOLDER<T>(name: string): T;\n}\n", "/**\n * JavaScript code that provides the puppeteer utilities. See the\n * [README](https://github.com/puppeteer/puppeteer/blob/main/src/injected/README.md)\n * for injection for more information.\n *\n * @internal\n */\nexport const source = \"\\\"use strict\\\";var C=Object.defineProperty;var ne=Object.getOwnPropertyDescriptor;var oe=Object.getOwnPropertyNames;var se=Object.prototype.hasOwnProperty;var f=(t,e)=>{for(var n in e)C(t,n,{get:e[n],enumerable:!0})},ie=(t,e,n,r)=>{if(e&&typeof e==\\\"object\\\"||typeof e==\\\"function\\\")for(let o of oe(e))!se.call(t,o)&&o!==n&&C(t,o,{get:()=>e[o],enumerable:!(r=ne(e,o))||r.enumerable});return t};var le=t=>ie(C({},\\\"__esModule\\\",{value:!0}),t);var Oe={};f(Oe,{default:()=>Re});module.exports=le(Oe);var T=class extends Error{constructor(e){super(e),this.name=this.constructor.name,Error.captureStackTrace(this,this.constructor)}},S=class extends T{},I=class extends T{#e;#t=\\\"\\\";set code(e){this.#e=e}get code(){return this.#e}set originalMessage(e){this.#t=e}get originalMessage(){return this.#t}};var qe=Object.freeze({TimeoutError:S,ProtocolError:I});var a=class{#e=!1;#t=!1;#n;#r=()=>{};#o=new Promise(e=>{this.#r=e});#s;constructor(e){this.#s=e&&e.timeout>0?setTimeout(()=>{this.reject(new S(e.message))},e.timeout):void 0}#i(e){clearTimeout(this.#s),this.#n=e,this.#r()}resolve(e){this.#t||this.#e||(this.#e=!0,this.#i(e))}reject(e){this.#t||this.#e||(this.#t=!0,this.#i(e))}resolved(){return this.#e}finished(){return this.#e||this.#t}value(){return this.#n}async valueOrThrow(){if(await this.#o,this.#t)throw this.#n;return this.#n}static create(e){return new a(e)}static async race(e){let n=new Set;try{let r=e.map(o=>o instanceof a?(o.#s&&n.add(o),o.valueOrThrow()):o);return await Promise.race(r)}finally{for(let r of n)r.reject(new Error(\\\"Timeout cleared\\\"))}}};var G=new Map,X=t=>{let e=G.get(t);return e||(e=new Function(`return ${t}`)(),G.set(t,e),e)};var R={};f(R,{ariaQuerySelector:()=>ae,ariaQuerySelectorAll:()=>k});var ae=(t,e)=>window.__ariaQuerySelector(t,e),k=async function*(t,e){yield*await window.__ariaQuerySelectorAll(t,e)};var q={};f(q,{customQuerySelectors:()=>M});var O=class{#e=new Map;register(e,n){if(!n.queryOne&&n.queryAll){let r=n.queryAll;n.queryOne=(o,i)=>{for(let s of r(o,i))return s;return null}}else if(n.queryOne&&!n.queryAll){let r=n.queryOne;n.queryAll=(o,i)=>{let s=r(o,i);return s?[s]:[]}}else if(!n.queryOne||!n.queryAll)throw new Error(\\\"At least one query method must be defined.\\\");this.#e.set(e,{querySelector:n.queryOne,querySelectorAll:n.queryAll})}unregister(e){this.#e.delete(e)}get(e){return this.#e.get(e)}clear(){this.#e.clear()}},M=new O;var _={};f(_,{pierceQuerySelector:()=>ce,pierceQuerySelectorAll:()=>ue});var ce=(t,e)=>{let n=null,r=o=>{let i=document.createTreeWalker(o,NodeFilter.SHOW_ELEMENT);do{let s=i.currentNode;s.shadowRoot&&r(s.shadowRoot),!(s instanceof ShadowRoot)&&s!==o&&!n&&s.matches(e)&&(n=s)}while(!n&&i.nextNode())};return t instanceof Document&&(t=t.documentElement),r(t),n},ue=(t,e)=>{let n=[],r=o=>{let i=document.createTreeWalker(o,NodeFilter.SHOW_ELEMENT);do{let s=i.currentNode;s.shadowRoot&&r(s.shadowRoot),!(s instanceof ShadowRoot)&&s!==o&&s.matches(e)&&n.push(s)}while(i.nextNode())};return t instanceof Document&&(t=t.documentElement),r(t),n};var m=(t,e)=>{if(!t)throw new Error(e)};var P=class{#e;#t;#n;#r;constructor(e,n){this.#e=e,this.#t=n}async start(){let e=this.#r=a.create(),n=await this.#e();if(n){e.resolve(n);return}this.#n=new MutationObserver(async()=>{let r=await this.#e();r&&(e.resolve(r),await this.stop())}),this.#n.observe(this.#t,{childList:!0,subtree:!0,attributes:!0})}async stop(){m(this.#r,\\\"Polling never started.\\\"),this.#r.finished()||this.#r.reject(new Error(\\\"Polling stopped\\\")),this.#n&&(this.#n.disconnect(),this.#n=void 0)}result(){return m(this.#r,\\\"Polling never started.\\\"),this.#r.valueOrThrow()}},E=class{#e;#t;constructor(e){this.#e=e}async start(){let e=this.#t=a.create(),n=await this.#e();if(n){e.resolve(n);return}let r=async()=>{if(e.finished())return;let o=await this.#e();if(!o){window.requestAnimationFrame(r);return}e.resolve(o),await this.stop()};window.requestAnimationFrame(r)}async stop(){m(this.#t,\\\"Polling never started.\\\"),this.#t.finished()||this.#t.reject(new Error(\\\"Polling stopped\\\"))}result(){return m(this.#t,\\\"Polling never started.\\\"),this.#t.valueOrThrow()}},x=class{#e;#t;#n;#r;constructor(e,n){this.#e=e,this.#t=n}async start(){let e=this.#r=a.create(),n=await this.#e();if(n){e.resolve(n);return}this.#n=setInterval(async()=>{let r=await this.#e();r&&(e.resolve(r),await this.stop())},this.#t)}async stop(){m(this.#r,\\\"Polling never started.\\\"),this.#r.finished()||this.#r.reject(new Error(\\\"Polling stopped\\\")),this.#n&&(clearInterval(this.#n),this.#n=void 0)}result(){return m(this.#r,\\\"Polling never started.\\\"),this.#r.valueOrThrow()}};var H={};f(H,{pQuerySelector:()=>Ie,pQuerySelectorAll:()=>re});var u=class{static async*map(e,n){for await(let r of e)yield await n(r)}static async*flatMap(e,n){for await(let r of e)yield*n(r)}static async collect(e){let n=[];for await(let r of e)n.push(r);return n}static async first(e){for await(let n of e)return n}};var p={attribute:/\\\\[\\\\s*(?:(?<namespace>\\\\*|[-\\\\w\\\\P{ASCII}]*)\\\\|)?(?<name>[-\\\\w\\\\P{ASCII}]+)\\\\s*(?:(?<operator>\\\\W?=)\\\\s*(?<value>.+?)\\\\s*(\\\\s(?<caseSensitive>[iIsS]))?\\\\s*)?\\\\]/gu,id:/#(?<name>[-\\\\w\\\\P{ASCII}]+)/gu,class:/\\\\.(?<name>[-\\\\w\\\\P{ASCII}]+)/gu,comma:/\\\\s*,\\\\s*/g,combinator:/\\\\s*[\\\\s>+~]\\\\s*/g,\\\"pseudo-element\\\":/::(?<name>[-\\\\w\\\\P{ASCII}]+)(?:\\\\((?<argument>\u00B6+)\\\\))?/gu,\\\"pseudo-class\\\":/:(?<name>[-\\\\w\\\\P{ASCII}]+)(?:\\\\((?<argument>\u00B6+)\\\\))?/gu,universal:/(?:(?<namespace>\\\\*|[-\\\\w\\\\P{ASCII}]*)\\\\|)?\\\\*/gu,type:/(?:(?<namespace>\\\\*|[-\\\\w\\\\P{ASCII}]*)\\\\|)?(?<name>[-\\\\w\\\\P{ASCII}]+)/gu},fe=new Set([\\\"combinator\\\",\\\"comma\\\"]);var de=t=>{switch(t){case\\\"pseudo-element\\\":case\\\"pseudo-class\\\":return new RegExp(p[t].source.replace(\\\"(?<argument>\\\\xB6+)\\\",\\\"(?<argument>.+)\\\"),\\\"gu\\\");default:return p[t]}};function me(t,e){let n=0,r=\\\"\\\";for(;e<t.length;e++){let o=t[e];switch(o){case\\\"(\\\":++n;break;case\\\")\\\":--n;break}if(r+=o,n===0)return r}return r}function he(t,e=p){if(!t)return[];let n=[t];for(let[o,i]of Object.entries(e))for(let s=0;s<n.length;s++){let l=n[s];if(typeof l!=\\\"string\\\")continue;i.lastIndex=0;let c=i.exec(l);if(!c)continue;let h=c.index-1,d=[],V=c[0],B=l.slice(0,h+1);B&&d.push(B),d.push({...c.groups,type:o,content:V});let z=l.slice(h+V.length+1);z&&d.push(z),n.splice(s,1,...d)}let r=0;for(let o of n)switch(typeof o){case\\\"string\\\":throw new Error(`Unexpected sequence ${o} found at index ${r}`);case\\\"object\\\":r+=o.content.length,o.pos=[r-o.content.length,r],fe.has(o.type)&&(o.content=o.content.trim()||\\\" \\\");break}return n}var pe=/(['\\\"])([^\\\\\\\\\\\\n]+?)\\\\1/g,ye=/\\\\\\\\./g;function K(t,e=p){if(t=t.trim(),t===\\\"\\\")return[];let n=[];t=t.replace(ye,(i,s)=>(n.push({value:i,offset:s}),\\\"\\\\uE000\\\".repeat(i.length))),t=t.replace(pe,(i,s,l,c)=>(n.push({value:i,offset:c}),`${s}${\\\"\\\\uE001\\\".repeat(l.length)}${s}`));{let i=0,s;for(;(s=t.indexOf(\\\"(\\\",i))>-1;){let l=me(t,s);n.push({value:l,offset:s}),t=`${t.substring(0,s)}(${\\\"\\\\xB6\\\".repeat(l.length-2)})${t.substring(s+l.length)}`,i=s+l.length}}let r=he(t,e),o=new Set;for(let i of n.reverse())for(let s of r){let{offset:l,value:c}=i;if(!(s.pos[0]<=l&&l+c.length<=s.pos[1]))continue;let{content:h}=s,d=l-s.pos[0];s.content=h.slice(0,d)+c+h.slice(d+c.length),s.content!==h&&o.add(s)}for(let i of o){let s=de(i.type);if(!s)throw new Error(`Unknown token type: ${i.type}`);s.lastIndex=0;let l=s.exec(i.content);if(!l)throw new Error(`Unable to parse content for ${i.type}: ${i.content}`);Object.assign(i,l.groups)}return r}function*N(t,e){switch(t.type){case\\\"list\\\":for(let n of t.list)yield*N(n,t);break;case\\\"complex\\\":yield*N(t.left,t),yield*N(t.right,t);break;case\\\"compound\\\":yield*t.list.map(n=>[n,t]);break;default:yield[t,e]}}function y(t){let e;return Array.isArray(t)?e=t:e=[...N(t)].map(([n])=>n),e.map(n=>n.content).join(\\\"\\\")}p.combinator=/\\\\s*(>>>>?|[\\\\s>+~])\\\\s*/g;var ge=/\\\\\\\\[\\\\s\\\\S]/g,we=t=>{if(t.length>1){for(let e of['\\\"',\\\"'\\\"])if(!(!t.startsWith(e)||!t.endsWith(e)))return t.slice(e.length,-e.length).replace(ge,n=>n.slice(1))}return t};function Y(t){let e=!0,n=K(t);if(n.length===0)return[[],e];let r=[],o=[r],i=[o],s=[];for(let l of n){switch(l.type){case\\\"combinator\\\":switch(l.content){case\\\">>>\\\":e=!1,s.length&&(r.push(y(s)),s.splice(0)),r=[],o.push(\\\">>>\\\"),o.push(r);continue;case\\\">>>>\\\":e=!1,s.length&&(r.push(y(s)),s.splice(0)),r=[],o.push(\\\">>>>\\\"),o.push(r);continue}break;case\\\"pseudo-element\\\":if(!l.name.startsWith(\\\"-p-\\\"))break;e=!1,s.length&&(r.push(y(s)),s.splice(0)),r.push({name:l.name.slice(3),value:we(l.argument??\\\"\\\")});continue;case\\\"comma\\\":s.length&&(r.push(y(s)),s.splice(0)),r=[],o=[r],i.push(o);continue}s.push(l)}return s.length&&r.push(y(s)),[i,e]}var Q={};f(Q,{textQuerySelectorAll:()=>b});var Se=new Set([\\\"checkbox\\\",\\\"image\\\",\\\"radio\\\"]),be=t=>t instanceof HTMLSelectElement||t instanceof HTMLTextAreaElement||t instanceof HTMLInputElement&&!Se.has(t.type),Te=new Set([\\\"SCRIPT\\\",\\\"STYLE\\\"]),w=t=>!Te.has(t.nodeName)&&!document.head?.contains(t),D=new WeakMap,Z=t=>{for(;t;)D.delete(t),t instanceof ShadowRoot?t=t.host:t=t.parentNode},J=new WeakSet,Pe=new MutationObserver(t=>{for(let e of t)Z(e.target)}),g=t=>{let e=D.get(t);if(e||(e={full:\\\"\\\",immediate:[]},!w(t)))return e;let n=\\\"\\\";if(be(t))e.full=t.value,e.immediate.push(t.value),t.addEventListener(\\\"input\\\",r=>{Z(r.target)},{once:!0,capture:!0});else{for(let r=t.firstChild;r;r=r.nextSibling){if(r.nodeType===Node.TEXT_NODE){e.full+=r.nodeValue??\\\"\\\",n+=r.nodeValue??\\\"\\\";continue}n&&e.immediate.push(n),n=\\\"\\\",r.nodeType===Node.ELEMENT_NODE&&(e.full+=g(r).full)}n&&e.immediate.push(n),t instanceof Element&&t.shadowRoot&&(e.full+=g(t.shadowRoot).full),J.has(t)||(Pe.observe(t,{childList:!0,characterData:!0}),J.add(t))}return D.set(t,e),e};var b=function*(t,e){let n=!1;for(let r of t.childNodes)if(r instanceof Element&&w(r)){let o;r.shadowRoot?o=b(r.shadowRoot,e):o=b(r,e);for(let i of o)yield i,n=!0}n||t instanceof Element&&w(t)&&g(t).full.includes(e)&&(yield t)};var $={};f($,{checkVisibility:()=>xe,pierce:()=>A,pierceAll:()=>L});var Ee=[\\\"hidden\\\",\\\"collapse\\\"],xe=(t,e)=>{if(!t)return e===!1;if(e===void 0)return t;let n=t.nodeType===Node.TEXT_NODE?t.parentElement:t,r=window.getComputedStyle(n),o=r&&!Ee.includes(r.visibility)&&!Ne(n);return e===o?t:!1};function Ne(t){let e=t.getBoundingClientRect();return e.width===0||e.height===0}var Ae=t=>\\\"shadowRoot\\\"in t&&t.shadowRoot instanceof ShadowRoot;function*A(t){Ae(t)?yield t.shadowRoot:yield t}function*L(t){t=A(t).next().value,yield t;let e=[document.createTreeWalker(t,NodeFilter.SHOW_ELEMENT)];for(let n of e){let r;for(;r=n.nextNode();)r.shadowRoot&&(yield r.shadowRoot,e.push(document.createTreeWalker(r.shadowRoot,NodeFilter.SHOW_ELEMENT)))}}var j={};f(j,{xpathQuerySelectorAll:()=>U});var U=function*(t,e){let r=(t.ownerDocument||document).evaluate(e,t,null,XPathResult.ORDERED_NODE_ITERATOR_TYPE),o;for(;o=r.iterateNext();)yield o};var ve=/[-\\\\w\\\\P{ASCII}*]/,ee=t=>\\\"querySelectorAll\\\"in t,v=class extends Error{constructor(e,n){super(`${e} is not a valid selector: ${n}`)}},F=class{#e;#t;#n=[];#r=void 0;elements;constructor(e,n,r){this.elements=[e],this.#e=n,this.#t=r,this.#o()}async run(){if(typeof this.#r==\\\"string\\\")switch(this.#r.trimStart()){case\\\":scope\\\":this.#o();break}for(;this.#r!==void 0;this.#o()){let e=this.#r,n=this.#e;typeof e==\\\"string\\\"?e[0]&&ve.test(e[0])?this.elements=u.flatMap(this.elements,async function*(r){ee(r)&&(yield*r.querySelectorAll(e))}):this.elements=u.flatMap(this.elements,async function*(r){if(!r.parentElement){if(!ee(r))return;yield*r.querySelectorAll(e);return}let o=0;for(let i of r.parentElement.children)if(++o,i===r)break;yield*r.parentElement.querySelectorAll(`:scope>:nth-child(${o})${e}`)}):this.elements=u.flatMap(this.elements,async function*(r){switch(e.name){case\\\"text\\\":yield*b(r,e.value);break;case\\\"xpath\\\":yield*U(r,e.value);break;case\\\"aria\\\":yield*k(r,e.value);break;default:let o=M.get(e.name);if(!o)throw new v(n,`Unknown selector type: ${e.name}`);yield*o.querySelectorAll(r,e.value)}})}}#o(){if(this.#n.length!==0){this.#r=this.#n.shift();return}if(this.#t.length===0){this.#r=void 0;return}let e=this.#t.shift();switch(e){case\\\">>>>\\\":{this.elements=u.flatMap(this.elements,A),this.#o();break}case\\\">>>\\\":{this.elements=u.flatMap(this.elements,L),this.#o();break}default:this.#n=e,this.#o();break}}},W=class{#e=new WeakMap;calculate(e,n=[]){if(e===null)return n;e instanceof ShadowRoot&&(e=e.host);let r=this.#e.get(e);if(r)return[...r,...n];let o=0;for(let s=e.previousSibling;s;s=s.previousSibling)++o;let i=this.calculate(e.parentNode,[o]);return this.#e.set(e,i),[...i,...n]}},te=(t,e)=>{if(t.length+e.length===0)return 0;let[n=-1,...r]=t,[o=-1,...i]=e;return n===o?te(r,i):n<o?-1:1},Ce=async function*(t){let e=new Set;for await(let r of t)e.add(r);let n=new W;yield*[...e.values()].map(r=>[r,n.calculate(r)]).sort(([,r],[,o])=>te(r,o)).map(([r])=>r)},re=function(t,e){let n,r;try{[n,r]=Y(e)}catch{return t.querySelectorAll(e)}if(r)return t.querySelectorAll(e);if(n.some(o=>{let i=0;return o.some(s=>(typeof s==\\\"string\\\"?++i:i=0,i>1))}))throw new v(e,\\\"Multiple deep combinators found in sequence.\\\");return Ce(u.flatMap(n,o=>{let i=new F(t,e,o);return i.run(),i.elements}))},Ie=async function(t,e){for await(let n of re(t,e))return n;return null};var ke=Object.freeze({...R,...q,..._,...H,...Q,...$,...j,Deferred:a,createFunction:X,createTextContent:g,IntervalPoller:x,isSuitableNodeForTextMatching:w,MutationPoller:P,RAFPoller:E}),Re=ke;\\n\";\n", "import {source as injectedSource} from '../generated/injected.js';\n\nclass ScriptInjector {\n  #updated = false;\n  #amendments = new Set<string>();\n\n  // Appends a statement of the form `(PuppeteerUtil) => {...}`.\n  append(statement: string): void {\n    this.#update(() => {\n      this.#amendments.add(statement);\n    });\n  }\n\n  pop(statement: string): void {\n    this.#update(() => {\n      this.#amendments.delete(statement);\n    });\n  }\n\n  inject(inject: (script: string) => void, force = false) {\n    if (this.#updated || force) {\n      inject(this.#get());\n    }\n    this.#updated = false;\n  }\n\n  #update(callback: () => void): void {\n    callback();\n    this.#updated = true;\n  }\n\n  #get(): string {\n    return `(() => {\n      const module = {};\n      ${injectedSource}\n      ${[...this.#amendments]\n        .map(statement => {\n          return `(${statement})(module.exports.default);`;\n        })\n        .join('')}\n      return module.exports.default;\n    })()`;\n  }\n}\n\n/**\n * @internal\n */\nexport const scriptInjector = new ScriptInjector();\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type PuppeteerUtil from '../injected/injected.js';\nimport {assert} from '../util/assert.js';\nimport {interpolateFunction, stringifyFunction} from '../util/Function.js';\n\nimport {QueryHandler, QuerySelector, QuerySelectorAll} from './QueryHandler.js';\nimport {scriptInjector} from './ScriptInjector.js';\n\n/**\n * @public\n */\nexport interface CustomQueryHandler {\n  /**\n   * Searches for a {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Node} matching the given `selector` from {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | node}.\n   */\n  queryOne?: (node: Node, selector: string) => Node | null;\n  /**\n   * Searches for some {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | Nodes} matching the given `selector` from {@link https://developer.mozilla.org/en-US/docs/Web/API/Node | node}.\n   */\n  queryAll?: (node: Node, selector: string) => Iterable<Node>;\n}\n\n/**\n * The registry of {@link CustomQueryHandler | custom query handlers}.\n *\n * @example\n *\n * ```ts\n * Puppeteer.customQueryHandlers.register('lit', { \u2026 });\n * const aHandle = await page.$('lit/\u2026');\n * ```\n *\n * @internal\n */\nexport class CustomQueryHandlerRegistry {\n  #handlers = new Map<\n    string,\n    [registerScript: string, Handler: typeof QueryHandler]\n  >();\n\n  /**\n   * @internal\n   */\n  get(name: string): typeof QueryHandler | undefined {\n    const handler = this.#handlers.get(name);\n    return handler ? handler[1] : undefined;\n  }\n\n  /**\n   * Registers a {@link CustomQueryHandler | custom query handler}.\n   *\n   * @remarks\n   * After registration, the handler can be used everywhere where a selector is\n   * expected by prepending the selection string with `<name>/`. The name is\n   * only allowed to consist of lower- and upper case latin letters.\n   *\n   * @example\n   *\n   * ```ts\n   * Puppeteer.customQueryHandlers.register('lit', { \u2026 });\n   * const aHandle = await page.$('lit/\u2026');\n   * ```\n   *\n   * @param name - Name to register under.\n   * @param queryHandler - {@link CustomQueryHandler | Custom query handler} to\n   * register.\n   *\n   * @internal\n   */\n  register(name: string, handler: CustomQueryHandler): void {\n    if (this.#handlers.has(name)) {\n      throw new Error(`Cannot register over existing handler: ${name}`);\n    }\n    assert(\n      !this.#handlers.has(name),\n      `Cannot register over existing handler: ${name}`\n    );\n    assert(\n      /^[a-zA-Z]+$/.test(name),\n      `Custom query handler names may only contain [a-zA-Z]`\n    );\n    assert(\n      handler.queryAll || handler.queryOne,\n      `At least one query method must be implemented.`\n    );\n\n    const Handler = class extends QueryHandler {\n      static override querySelectorAll: QuerySelectorAll = interpolateFunction(\n        (node, selector, PuppeteerUtil) => {\n          return PuppeteerUtil.customQuerySelectors\n            .get(PLACEHOLDER('name'))!\n            .querySelectorAll(node, selector);\n        },\n        {name: JSON.stringify(name)}\n      );\n      static override querySelector: QuerySelector = interpolateFunction(\n        (node, selector, PuppeteerUtil) => {\n          return PuppeteerUtil.customQuerySelectors\n            .get(PLACEHOLDER('name'))!\n            .querySelector(node, selector);\n        },\n        {name: JSON.stringify(name)}\n      );\n    };\n    const registerScript = interpolateFunction(\n      (PuppeteerUtil: PuppeteerUtil) => {\n        PuppeteerUtil.customQuerySelectors.register(PLACEHOLDER('name'), {\n          queryAll: PLACEHOLDER('queryAll'),\n          queryOne: PLACEHOLDER('queryOne'),\n        });\n      },\n      {\n        name: JSON.stringify(name),\n        queryAll: handler.queryAll\n          ? stringifyFunction(handler.queryAll)\n          : String(undefined),\n        queryOne: handler.queryOne\n          ? stringifyFunction(handler.queryOne)\n          : String(undefined),\n      }\n    ).toString();\n\n    this.#handlers.set(name, [registerScript, Handler]);\n    scriptInjector.append(registerScript);\n  }\n\n  /**\n   * Unregisters the {@link CustomQueryHandler | custom query handler} for the\n   * given name.\n   *\n   * @throws `Error` if there is no handler under the given name.\n   *\n   * @internal\n   */\n  unregister(name: string): void {\n    const handler = this.#handlers.get(name);\n    if (!handler) {\n      throw new Error(`Cannot unregister unknown handler: ${name}`);\n    }\n    scriptInjector.pop(handler[0]);\n    this.#handlers.delete(name);\n  }\n\n  /**\n   * Gets the names of all {@link CustomQueryHandler | custom query handlers}.\n   *\n   * @internal\n   */\n  names(): string[] {\n    return [...this.#handlers.keys()];\n  }\n\n  /**\n   * Unregisters all custom query handlers.\n   *\n   * @internal\n   */\n  clear(): void {\n    for (const [registerScript] of this.#handlers) {\n      scriptInjector.pop(registerScript);\n    }\n    this.#handlers.clear();\n  }\n}\n\n/**\n * @internal\n */\nexport const customQueryHandlers = new CustomQueryHandlerRegistry();\n\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.registerCustomQueryHandler}\n *\n * @public\n */\nexport function registerCustomQueryHandler(\n  name: string,\n  handler: CustomQueryHandler\n): void {\n  customQueryHandlers.register(name, handler);\n}\n\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.unregisterCustomQueryHandler}\n *\n * @public\n */\nexport function unregisterCustomQueryHandler(name: string): void {\n  customQueryHandlers.unregister(name);\n}\n\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.customQueryHandlerNames}\n *\n * @public\n */\nexport function customQueryHandlerNames(): string[] {\n  return customQueryHandlers.names();\n}\n\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.clearCustomQueryHandlers}\n *\n * @public\n */\nexport function clearCustomQueryHandlers(): void {\n  customQueryHandlers.clear();\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type PuppeteerUtil from '../injected/injected.js';\n\nimport {QueryHandler} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class PierceQueryHandler extends QueryHandler {\n  static override querySelector = (\n    element: Node,\n    selector: string,\n    {pierceQuerySelector}: PuppeteerUtil\n  ): Node | null => {\n    return pierceQuerySelector(element, selector);\n  };\n  static override querySelectorAll = (\n    element: Node,\n    selector: string,\n    {pierceQuerySelectorAll}: PuppeteerUtil\n  ): Iterable<Node> => {\n    return pierceQuerySelectorAll(element, selector);\n  };\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {QueryHandler, QuerySelector, QuerySelectorAll} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class PQueryHandler extends QueryHandler {\n  static override querySelectorAll: QuerySelectorAll = (\n    element,\n    selector,\n    {pQuerySelectorAll}\n  ) => {\n    return pQuerySelectorAll(element, selector);\n  };\n  static override querySelector: QuerySelector = (\n    element,\n    selector,\n    {pQuerySelector}\n  ) => {\n    return pQuerySelector(element, selector);\n  };\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {QueryHandler, QuerySelectorAll} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class TextQueryHandler extends QueryHandler {\n  static override querySelectorAll: QuerySelectorAll = (\n    element,\n    selector,\n    {textQuerySelectorAll}\n  ) => {\n    return textQuerySelectorAll(element, selector);\n  };\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {QueryHandler, QuerySelectorAll} from './QueryHandler.js';\n\n/**\n * @internal\n */\nexport class XPathQueryHandler extends QueryHandler {\n  static override querySelectorAll: QuerySelectorAll = (\n    element,\n    selector,\n    {xpathQuerySelectorAll}\n  ) => {\n    return xpathQuerySelectorAll(element, selector);\n  };\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ARIAQueryHandler} from './AriaQueryHandler.js';\nimport {customQueryHandlers} from './CustomQueryHandler.js';\nimport {PierceQueryHandler} from './PierceQueryHandler.js';\nimport {PQueryHandler} from './PQueryHandler.js';\nimport type {QueryHandler} from './QueryHandler.js';\nimport {TextQueryHandler} from './TextQueryHandler.js';\nimport {XPathQueryHandler} from './XPathQueryHandler.js';\n\nexport const BUILTIN_QUERY_HANDLERS = Object.freeze({\n  aria: ARIAQueryHandler,\n  pierce: PierceQueryHandler,\n  xpath: XPathQueryHandler,\n  text: TextQueryHandler,\n});\n\nconst QUERY_SEPARATORS = ['=', '/'];\n\n/**\n * @internal\n */\nexport function getQueryHandlerByName(\n  name: string\n): typeof QueryHandler | undefined {\n  if (name in BUILTIN_QUERY_HANDLERS) {\n    return BUILTIN_QUERY_HANDLERS[name as 'aria'];\n  }\n  return customQueryHandlers.get(name);\n}\n\n/**\n * @internal\n */\nexport function getQueryHandlerAndSelector(selector: string): {\n  updatedSelector: string;\n  QueryHandler: typeof QueryHandler;\n} {\n  for (const handlerMap of [\n    customQueryHandlers.names().map(name => {\n      return [name, customQueryHandlers.get(name)!] as const;\n    }),\n    Object.entries(BUILTIN_QUERY_HANDLERS),\n  ]) {\n    for (const [name, QueryHandler] of handlerMap) {\n      for (const separator of QUERY_SEPARATORS) {\n        const prefix = `${name}${separator}`;\n        if (selector.startsWith(prefix)) {\n          selector = selector.slice(prefix.length);\n          return {updatedSelector: selector, QueryHandler};\n        }\n      }\n    }\n  }\n  return {updatedSelector: selector, QueryHandler: PQueryHandler};\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Protocol from 'devtools-protocol';\n\nimport {CDPSession} from '../common/Connection.js';\nimport {ExecutionContext} from '../common/ExecutionContext.js';\nimport {EvaluateFuncWith, HandleFor, HandleOr} from '../common/types.js';\n\nimport {ElementHandle} from './ElementHandle.js';\n\ndeclare const __JSHandleSymbol: unique symbol;\n\n/**\n * Represents a reference to a JavaScript object. Instances can be created using\n * {@link Page.evaluateHandle}.\n *\n * Handles prevent the referenced JavaScript object from being garbage-collected\n * unless the handle is purposely {@link JSHandle.dispose | disposed}. JSHandles\n * are auto-disposed when their associated frame is navigated away or the parent\n * context gets destroyed.\n *\n * Handles can be used as arguments for any evaluation function such as\n * {@link Page.$eval}, {@link Page.evaluate}, and {@link Page.evaluateHandle}.\n * They are resolved to their referenced object.\n *\n * @example\n *\n * ```ts\n * const windowHandle = await page.evaluateHandle(() => window);\n * ```\n *\n * @public\n */\nexport class JSHandle<T = unknown> {\n  /**\n   * Used for nominally typing {@link JSHandle}.\n   */\n  [__JSHandleSymbol]?: T;\n\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * @internal\n   */\n  get disposed(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  executionContext(): ExecutionContext {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  get client(): CDPSession {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Evaluates the given function with the current handle as its first argument.\n   */\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<T, Params> = EvaluateFuncWith<T, Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>>;\n  async evaluate(): Promise<unknown> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Evaluates the given function with the current handle as its first argument.\n   *\n   */\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<T, Params> = EvaluateFuncWith<T, Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>>;\n  async evaluateHandle(): Promise<HandleFor<unknown>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Fetches a single property from the referenced object.\n   */\n  async getProperty<K extends keyof T>(\n    propertyName: HandleOr<K>\n  ): Promise<HandleFor<T[K]>>;\n  async getProperty(propertyName: string): Promise<JSHandle<unknown>>;\n  async getProperty<K extends keyof T>(\n    propertyName: HandleOr<K>\n  ): Promise<HandleFor<T[K]>>;\n  async getProperty<K extends keyof T>(): Promise<HandleFor<T[K]>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Gets a map of handles representing the properties of the current handle.\n   *\n   * @example\n   *\n   * ```ts\n   * const listHandle = await page.evaluateHandle(() => document.body.children);\n   * const properties = await listHandle.getProperties();\n   * const children = [];\n   * for (const property of properties.values()) {\n   *   const element = property.asElement();\n   *   if (element) {\n   *     children.push(element);\n   *   }\n   * }\n   * children; // holds elementHandles to all children of document.body\n   * ```\n   */\n  async getProperties(): Promise<Map<string, JSHandle>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * A vanilla object representing the serializable portions of the\n   * referenced object.\n   * @throws Throws if the object cannot be serialized due to circularity.\n   *\n   * @remarks\n   * If the object has a `toJSON` function, it **will not** be called.\n   */\n  async jsonValue(): Promise<T> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Either `null` or the handle itself if the handle is an\n   * instance of {@link ElementHandle}.\n   */\n  asElement(): ElementHandle<Node> | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Releases the object referenced by the handle for garbage collection.\n   */\n  async dispose(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Returns a string representation of the JSHandle.\n   *\n   * @remarks\n   * Useful during debugging.\n   */\n  toString(): string {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  get id(): string | undefined {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Provides access to the\n   * {@link https://chromedevtools.github.io/devtools-protocol/tot/Runtime/#type-RemoteObject | Protocol.Runtime.RemoteObject}\n   * backing this handle.\n   */\n  remoteObject(): Protocol.Runtime.RemoteObject {\n    throw new Error('Not implemented');\n  }\n}\n", "/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {JSHandle} from '../api/JSHandle.js';\nimport {assert} from '../util/assert.js';\n\nimport {CDPSession} from './Connection.js';\nimport type {CDPElementHandle} from './ElementHandle.js';\nimport {ExecutionContext} from './ExecutionContext.js';\nimport {EvaluateFuncWith, HandleFor, HandleOr} from './types.js';\nimport {\n  createJSHandle,\n  releaseObject,\n  valueFromRemoteObject,\n  withSourcePuppeteerURLIfNone,\n} from './util.js';\n\ndeclare const __JSHandleSymbol: unique symbol;\n\n/**\n * @internal\n */\nexport class CDPJSHandle<T = unknown> extends JSHandle<T> {\n  /**\n   * Used for nominally typing {@link JSHandle}.\n   */\n  [__JSHandleSymbol]?: T;\n\n  #disposed = false;\n  #context: ExecutionContext;\n  #remoteObject: Protocol.Runtime.RemoteObject;\n\n  override get disposed(): boolean {\n    return this.#disposed;\n  }\n\n  constructor(\n    context: ExecutionContext,\n    remoteObject: Protocol.Runtime.RemoteObject\n  ) {\n    super();\n    this.#context = context;\n    this.#remoteObject = remoteObject;\n  }\n\n  override executionContext(): ExecutionContext {\n    return this.#context;\n  }\n\n  override get client(): CDPSession {\n    return this.#context._client;\n  }\n\n  /**\n   * @see {@link ExecutionContext.evaluate} for more details.\n   */\n  override async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<T, Params> = EvaluateFuncWith<T, Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluate.name,\n      pageFunction\n    );\n    return await this.executionContext().evaluate(pageFunction, this, ...args);\n  }\n\n  /**\n   * @see {@link ExecutionContext.evaluateHandle} for more details.\n   */\n  override async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<T, Params> = EvaluateFuncWith<T, Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluateHandle.name,\n      pageFunction\n    );\n    return await this.executionContext().evaluateHandle(\n      pageFunction,\n      this,\n      ...args\n    );\n  }\n\n  override async getProperty<K extends keyof T>(\n    propertyName: HandleOr<K>\n  ): Promise<HandleFor<T[K]>>;\n  override async getProperty(propertyName: string): Promise<JSHandle<unknown>>;\n  override async getProperty<K extends keyof T>(\n    propertyName: HandleOr<K>\n  ): Promise<HandleFor<T[K]>> {\n    return this.evaluateHandle((object, propertyName) => {\n      return object[propertyName as K];\n    }, propertyName);\n  }\n\n  override async getProperties(): Promise<Map<string, JSHandle>> {\n    assert(this.#remoteObject.objectId);\n    // We use Runtime.getProperties rather than iterative building because the\n    // iterative approach might create a distorted snapshot.\n    const response = await this.client.send('Runtime.getProperties', {\n      objectId: this.#remoteObject.objectId,\n      ownProperties: true,\n    });\n    const result = new Map<string, JSHandle>();\n    for (const property of response.result) {\n      if (!property.enumerable || !property.value) {\n        continue;\n      }\n      result.set(property.name, createJSHandle(this.#context, property.value));\n    }\n    return result;\n  }\n\n  override async jsonValue(): Promise<T> {\n    if (!this.#remoteObject.objectId) {\n      return valueFromRemoteObject(this.#remoteObject);\n    }\n    const value = await this.evaluate(object => {\n      return object;\n    });\n    if (value === undefined) {\n      throw new Error('Could not serialize referenced object');\n    }\n    return value;\n  }\n\n  /**\n   * Either `null` or the handle itself if the handle is an\n   * instance of {@link ElementHandle}.\n   */\n  override asElement(): CDPElementHandle<Node> | null {\n    return null;\n  }\n\n  override async dispose(): Promise<void> {\n    if (this.#disposed) {\n      return;\n    }\n    this.#disposed = true;\n    await releaseObject(this.client, this.#remoteObject);\n  }\n\n  override toString(): string {\n    if (!this.#remoteObject.objectId) {\n      return 'JSHandle:' + valueFromRemoteObject(this.#remoteObject);\n    }\n    const type = this.#remoteObject.subtype || this.#remoteObject.type;\n    return 'JSHandle@' + type;\n  }\n\n  override get id(): string | undefined {\n    return this.#remoteObject.objectId;\n  }\n\n  override remoteObject(): Protocol.Runtime.RemoteObject {\n    return this.#remoteObject;\n  }\n}\n", "/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {\n  BoundingBox,\n  BoxModel,\n  ClickOptions,\n  ElementHandle,\n  Offset,\n  Point,\n} from '../api/ElementHandle.js';\nimport {KeyPressOptions, KeyboardTypeOptions} from '../api/Input.js';\nimport {Page, ScreenshotOptions} from '../api/Page.js';\nimport {assert} from '../util/assert.js';\n\nimport {CDPSession} from './Connection.js';\nimport {ExecutionContext} from './ExecutionContext.js';\nimport {Frame} from './Frame.js';\nimport {FrameManager} from './FrameManager.js';\nimport {WaitForSelectorOptions} from './IsolatedWorld.js';\nimport {CDPJSHandle} from './JSHandle.js';\nimport {CDPPage} from './Page.js';\nimport {NodeFor} from './types.js';\nimport {KeyInput} from './USKeyboardLayout.js';\nimport {debugError} from './util.js';\n\nconst applyOffsetsToQuad = (\n  quad: Point[],\n  offsetX: number,\n  offsetY: number\n) => {\n  return quad.map(part => {\n    return {x: part.x + offsetX, y: part.y + offsetY};\n  });\n};\n\n/**\n * The CDPElementHandle extends ElementHandle now to keep compatibility\n * with `instanceof` because of that we need to have methods for\n * CDPJSHandle to in this implementation as well.\n *\n * @internal\n */\nexport class CDPElementHandle<\n  ElementType extends Node = Element\n> extends ElementHandle<ElementType> {\n  #frame: Frame;\n  declare handle: CDPJSHandle<ElementType>;\n\n  constructor(\n    context: ExecutionContext,\n    remoteObject: Protocol.Runtime.RemoteObject,\n    frame: Frame\n  ) {\n    super(new CDPJSHandle(context, remoteObject));\n    this.#frame = frame;\n  }\n\n  /**\n   * @internal\n   */\n  override executionContext(): ExecutionContext {\n    return this.handle.executionContext();\n  }\n\n  /**\n   * @internal\n   */\n  override get client(): CDPSession {\n    return this.handle.client;\n  }\n\n  override remoteObject(): Protocol.Runtime.RemoteObject {\n    return this.handle.remoteObject();\n  }\n\n  get #frameManager(): FrameManager {\n    return this.#frame._frameManager;\n  }\n\n  get #page(): Page {\n    return this.#frame.page();\n  }\n\n  override get frame(): Frame {\n    return this.#frame;\n  }\n\n  override async $<Selector extends string>(\n    selector: Selector\n  ): Promise<CDPElementHandle<NodeFor<Selector>> | null> {\n    return super.$(selector) as Promise<CDPElementHandle<\n      NodeFor<Selector>\n    > | null>;\n  }\n\n  override async $$<Selector extends string>(\n    selector: Selector\n  ): Promise<Array<CDPElementHandle<NodeFor<Selector>>>> {\n    return super.$$(selector) as Promise<\n      Array<CDPElementHandle<NodeFor<Selector>>>\n    >;\n  }\n\n  override async waitForSelector<Selector extends string>(\n    selector: Selector,\n    options?: WaitForSelectorOptions\n  ): Promise<CDPElementHandle<NodeFor<Selector>> | null> {\n    return (await super.waitForSelector(selector, options)) as CDPElementHandle<\n      NodeFor<Selector>\n    > | null;\n  }\n\n  override async contentFrame(): Promise<Frame | null> {\n    const nodeInfo = await this.client.send('DOM.describeNode', {\n      objectId: this.id,\n    });\n    if (typeof nodeInfo.node.frameId !== 'string') {\n      return null;\n    }\n    return this.#frameManager.frame(nodeInfo.node.frameId);\n  }\n\n  override async scrollIntoView(\n    this: CDPElementHandle<Element>\n  ): Promise<void> {\n    await this.assertConnectedElement();\n    try {\n      await this.client.send('DOM.scrollIntoViewIfNeeded', {\n        objectId: this.id,\n      });\n    } catch (error) {\n      debugError(error);\n      // Fallback to Element.scrollIntoView if DOM.scrollIntoViewIfNeeded is not supported\n      await super.scrollIntoView();\n    }\n  }\n\n  async #getOOPIFOffsets(\n    frame: Frame\n  ): Promise<{offsetX: number; offsetY: number}> {\n    let offsetX = 0;\n    let offsetY = 0;\n    let currentFrame: Frame | null = frame;\n    while (currentFrame && currentFrame.parentFrame()) {\n      const parent = currentFrame.parentFrame();\n      if (!currentFrame.isOOPFrame() || !parent) {\n        currentFrame = parent;\n        continue;\n      }\n      const {backendNodeId} = await parent._client().send('DOM.getFrameOwner', {\n        frameId: currentFrame._id,\n      });\n      const result = await parent._client().send('DOM.getBoxModel', {\n        backendNodeId: backendNodeId,\n      });\n      if (!result) {\n        break;\n      }\n      const contentBoxQuad = result.model.content;\n      const topLeftCorner = this.#fromProtocolQuad(contentBoxQuad)[0];\n      offsetX += topLeftCorner!.x;\n      offsetY += topLeftCorner!.y;\n      currentFrame = parent;\n    }\n    return {offsetX, offsetY};\n  }\n\n  override async clickablePoint(offset?: Offset): Promise<Point> {\n    const [result, layoutMetrics] = await Promise.all([\n      this.client\n        .send('DOM.getContentQuads', {\n          objectId: this.id,\n        })\n        .catch(debugError),\n      (this.#page as CDPPage)._client().send('Page.getLayoutMetrics'),\n    ]);\n    if (!result || !result.quads.length) {\n      throw new Error('Node is either not clickable or not an HTMLElement');\n    }\n    // Filter out quads that have too small area to click into.\n    // Fallback to `layoutViewport` in case of using Firefox.\n    const {clientWidth, clientHeight} =\n      layoutMetrics.cssLayoutViewport || layoutMetrics.layoutViewport;\n    const {offsetX, offsetY} = await this.#getOOPIFOffsets(this.#frame);\n    const quads = result.quads\n      .map(quad => {\n        return this.#fromProtocolQuad(quad);\n      })\n      .map(quad => {\n        return applyOffsetsToQuad(quad, offsetX, offsetY);\n      })\n      .map(quad => {\n        return this.#intersectQuadWithViewport(quad, clientWidth, clientHeight);\n      })\n      .filter(quad => {\n        return computeQuadArea(quad) > 1;\n      });\n    if (!quads.length) {\n      throw new Error('Node is either not clickable or not an HTMLElement');\n    }\n    const quad = quads[0]!;\n    if (offset) {\n      // Return the point of the first quad identified by offset.\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n      for (const point of quad) {\n        if (point.x < minX) {\n          minX = point.x;\n        }\n        if (point.y < minY) {\n          minY = point.y;\n        }\n      }\n      if (\n        minX !== Number.MAX_SAFE_INTEGER &&\n        minY !== Number.MAX_SAFE_INTEGER\n      ) {\n        return {\n          x: minX + offset.x,\n          y: minY + offset.y,\n        };\n      }\n    }\n    // Return the middle point of the first quad.\n    let x = 0;\n    let y = 0;\n    for (const point of quad) {\n      x += point.x;\n      y += point.y;\n    }\n    return {\n      x: x / 4,\n      y: y / 4,\n    };\n  }\n\n  #getBoxModel(): Promise<void | Protocol.DOM.GetBoxModelResponse> {\n    const params: Protocol.DOM.GetBoxModelRequest = {\n      objectId: this.id,\n    };\n    return this.client.send('DOM.getBoxModel', params).catch(error => {\n      return debugError(error);\n    });\n  }\n\n  #fromProtocolQuad(quad: number[]): Point[] {\n    return [\n      {x: quad[0]!, y: quad[1]!},\n      {x: quad[2]!, y: quad[3]!},\n      {x: quad[4]!, y: quad[5]!},\n      {x: quad[6]!, y: quad[7]!},\n    ];\n  }\n\n  #intersectQuadWithViewport(\n    quad: Point[],\n    width: number,\n    height: number\n  ): Point[] {\n    return quad.map(point => {\n      return {\n        x: Math.min(Math.max(point.x, 0), width),\n        y: Math.min(Math.max(point.y, 0), height),\n      };\n    });\n  }\n\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to hover over the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  override async hover(this: CDPElementHandle<Element>): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const {x, y} = await this.clickablePoint();\n    await this.#page.mouse.move(x, y);\n  }\n\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to click in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  override async click(\n    this: CDPElementHandle<Element>,\n    options: Readonly<ClickOptions> = {}\n  ): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const {x, y} = await this.clickablePoint(options.offset);\n    await this.#page.mouse.click(x, y, options);\n  }\n\n  /**\n   * This method creates and captures a dragevent from the element.\n   */\n  override async drag(\n    this: CDPElementHandle<Element>,\n    target: Point\n  ): Promise<Protocol.Input.DragData> {\n    assert(\n      this.#page.isDragInterceptionEnabled(),\n      'Drag Interception is not enabled!'\n    );\n    await this.scrollIntoViewIfNeeded();\n    const start = await this.clickablePoint();\n    return await this.#page.mouse.drag(start, target);\n  }\n\n  override async dragEnter(\n    this: CDPElementHandle<Element>,\n    data: Protocol.Input.DragData = {items: [], dragOperationsMask: 1}\n  ): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const target = await this.clickablePoint();\n    await this.#page.mouse.dragEnter(target, data);\n  }\n\n  override async dragOver(\n    this: CDPElementHandle<Element>,\n    data: Protocol.Input.DragData = {items: [], dragOperationsMask: 1}\n  ): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const target = await this.clickablePoint();\n    await this.#page.mouse.dragOver(target, data);\n  }\n\n  override async drop(\n    this: CDPElementHandle<Element>,\n    data: Protocol.Input.DragData = {items: [], dragOperationsMask: 1}\n  ): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const destination = await this.clickablePoint();\n    await this.#page.mouse.drop(destination, data);\n  }\n\n  override async dragAndDrop(\n    this: CDPElementHandle<Element>,\n    target: CDPElementHandle<Node>,\n    options?: {delay: number}\n  ): Promise<void> {\n    assert(\n      this.#page.isDragInterceptionEnabled(),\n      'Drag Interception is not enabled!'\n    );\n    await this.scrollIntoViewIfNeeded();\n    const startPoint = await this.clickablePoint();\n    const targetPoint = await target.clickablePoint();\n    await this.#page.mouse.dragAndDrop(startPoint, targetPoint, options);\n  }\n\n  override async uploadFile(\n    this: CDPElementHandle<HTMLInputElement>,\n    ...filePaths: string[]\n  ): Promise<void> {\n    const isMultiple = await this.evaluate(element => {\n      return element.multiple;\n    });\n    assert(\n      filePaths.length <= 1 || isMultiple,\n      'Multiple file uploads only work with <input type=file multiple>'\n    );\n\n    // Locate all files and confirm that they exist.\n    let path: typeof import('path');\n    try {\n      path = await import('path');\n    } catch (error) {\n      if (error instanceof TypeError) {\n        throw new Error(\n          `JSHandle#uploadFile can only be used in Node-like environments.`\n        );\n      }\n      throw error;\n    }\n    const files = filePaths.map(filePath => {\n      if (path.win32.isAbsolute(filePath) || path.posix.isAbsolute(filePath)) {\n        return filePath;\n      } else {\n        return path.resolve(filePath);\n      }\n    });\n    const {node} = await this.client.send('DOM.describeNode', {\n      objectId: this.id,\n    });\n    const {backendNodeId} = node;\n\n    /*  The zero-length array is a special case, it seems that\n         DOM.setFileInputFiles does not actually update the files in that case,\n         so the solution is to eval the element value to a new FileList directly.\n     */\n    if (files.length === 0) {\n      await this.evaluate(element => {\n        element.files = new DataTransfer().files;\n\n        // Dispatch events for this case because it should behave akin to a user action.\n        element.dispatchEvent(new Event('input', {bubbles: true}));\n        element.dispatchEvent(new Event('change', {bubbles: true}));\n      });\n    } else {\n      await this.client.send('DOM.setFileInputFiles', {\n        objectId: this.id,\n        files,\n        backendNodeId,\n      });\n    }\n  }\n\n  override async tap(this: CDPElementHandle<Element>): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const {x, y} = await this.clickablePoint();\n    await this.#page.touchscreen.touchStart(x, y);\n    await this.#page.touchscreen.touchEnd();\n  }\n\n  override async touchStart(this: CDPElementHandle<Element>): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const {x, y} = await this.clickablePoint();\n    await this.#page.touchscreen.touchStart(x, y);\n  }\n\n  override async touchMove(this: CDPElementHandle<Element>): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    const {x, y} = await this.clickablePoint();\n    await this.#page.touchscreen.touchMove(x, y);\n  }\n\n  override async touchEnd(this: CDPElementHandle<Element>): Promise<void> {\n    await this.scrollIntoViewIfNeeded();\n    await this.#page.touchscreen.touchEnd();\n  }\n\n  override async type(\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void> {\n    await this.focus();\n    await this.#page.keyboard.type(text, options);\n  }\n\n  override async press(\n    key: KeyInput,\n    options?: Readonly<KeyPressOptions>\n  ): Promise<void> {\n    await this.focus();\n    await this.#page.keyboard.press(key, options);\n  }\n\n  override async boundingBox(): Promise<BoundingBox | null> {\n    const result = await this.#getBoxModel();\n\n    if (!result) {\n      return null;\n    }\n\n    const {offsetX, offsetY} = await this.#getOOPIFOffsets(this.#frame);\n    const quad = result.model.border;\n    const x = Math.min(quad[0]!, quad[2]!, quad[4]!, quad[6]!);\n    const y = Math.min(quad[1]!, quad[3]!, quad[5]!, quad[7]!);\n    const width = Math.max(quad[0]!, quad[2]!, quad[4]!, quad[6]!) - x;\n    const height = Math.max(quad[1]!, quad[3]!, quad[5]!, quad[7]!) - y;\n\n    return {x: x + offsetX, y: y + offsetY, width, height};\n  }\n\n  override async boxModel(): Promise<BoxModel | null> {\n    const result = await this.#getBoxModel();\n\n    if (!result) {\n      return null;\n    }\n\n    const {offsetX, offsetY} = await this.#getOOPIFOffsets(this.#frame);\n\n    const {content, padding, border, margin, width, height} = result.model;\n    return {\n      content: applyOffsetsToQuad(\n        this.#fromProtocolQuad(content),\n        offsetX,\n        offsetY\n      ),\n      padding: applyOffsetsToQuad(\n        this.#fromProtocolQuad(padding),\n        offsetX,\n        offsetY\n      ),\n      border: applyOffsetsToQuad(\n        this.#fromProtocolQuad(border),\n        offsetX,\n        offsetY\n      ),\n      margin: applyOffsetsToQuad(\n        this.#fromProtocolQuad(margin),\n        offsetX,\n        offsetY\n      ),\n      width,\n      height,\n    };\n  }\n\n  override async screenshot(\n    this: CDPElementHandle<Element>,\n    options: ScreenshotOptions = {}\n  ): Promise<string | Buffer> {\n    let needsViewportReset = false;\n\n    let boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n\n    const viewport = this.#page.viewport();\n\n    if (\n      viewport &&\n      (boundingBox.width > viewport.width ||\n        boundingBox.height > viewport.height)\n    ) {\n      const newViewport = {\n        width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n        height: Math.max(viewport.height, Math.ceil(boundingBox.height)),\n      };\n      await this.#page.setViewport(Object.assign({}, viewport, newViewport));\n\n      needsViewportReset = true;\n    }\n\n    await this.scrollIntoViewIfNeeded();\n\n    boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n    assert(boundingBox.width !== 0, 'Node has 0 width.');\n    assert(boundingBox.height !== 0, 'Node has 0 height.');\n\n    const layoutMetrics = await this.client.send('Page.getLayoutMetrics');\n    // Fallback to `layoutViewport` in case of using Firefox.\n    const {pageX, pageY} =\n      layoutMetrics.cssVisualViewport || layoutMetrics.layoutViewport;\n\n    const clip = Object.assign({}, boundingBox);\n    clip.x += pageX;\n    clip.y += pageY;\n\n    const imageData = await this.#page.screenshot(\n      Object.assign(\n        {},\n        {\n          clip,\n        },\n        options\n      )\n    );\n\n    if (needsViewportReset && viewport) {\n      await this.#page.setViewport(viewport);\n    }\n\n    return imageData;\n  }\n}\n\nfunction computeQuadArea(quad: Point[]): number {\n  /* Compute sum of all directed areas of adjacent triangles\n     https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n   */\n  let area = 0;\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i]!;\n    const p2 = quad[(i + 1) % quad.length]!;\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n  return Math.abs(area);\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {Readable} from 'stream';\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport type {ElementHandle} from '../api/ElementHandle.js';\nimport type {JSHandle} from '../api/JSHandle.js';\nimport {Page} from '../api/Page.js';\nimport {isNode} from '../environment.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport type {CDPSession} from './Connection.js';\nimport {debug} from './Debug.js';\nimport {CDPElementHandle} from './ElementHandle.js';\nimport type {CommonEventEmitter} from './EventEmitter.js';\nimport type {ExecutionContext} from './ExecutionContext.js';\nimport {CDPJSHandle} from './JSHandle.js';\n\n/**\n * @internal\n */\nexport const debugError = debug('puppeteer:error');\n\n/**\n * @internal\n */\nexport function createEvaluationError(\n  details: Protocol.Runtime.ExceptionDetails\n): unknown {\n  let name: string;\n  let message: string;\n  if (!details.exception) {\n    name = 'Error';\n    message = details.text;\n  } else if (\n    (details.exception.type !== 'object' ||\n      details.exception.subtype !== 'error') &&\n    !details.exception.objectId\n  ) {\n    return valueFromRemoteObject(details.exception);\n  } else {\n    const detail = getErrorDetails(details);\n    name = detail.name;\n    message = detail.message;\n  }\n  const messageHeight = message.split('\\n').length;\n  const error = new Error(message);\n  error.name = name;\n  const stackLines = error.stack!.split('\\n');\n  const messageLines = stackLines.splice(0, messageHeight);\n\n  // The first line is this function which we ignore.\n  stackLines.shift();\n  if (details.stackTrace && stackLines.length < Error.stackTraceLimit) {\n    for (const frame of details.stackTrace.callFrames.reverse()) {\n      if (\n        PuppeteerURL.isPuppeteerURL(frame.url) &&\n        frame.url !== PuppeteerURL.INTERNAL_URL\n      ) {\n        const url = PuppeteerURL.parse(frame.url);\n        stackLines.unshift(\n          `    at ${frame.functionName || url.functionName} (${\n            url.functionName\n          } at ${url.siteString}, <anonymous>:${frame.lineNumber}:${\n            frame.columnNumber\n          })`\n        );\n      } else {\n        stackLines.push(\n          `    at ${frame.functionName || '<anonymous>'} (${frame.url}:${\n            frame.lineNumber\n          }:${frame.columnNumber})`\n        );\n      }\n      if (stackLines.length >= Error.stackTraceLimit) {\n        break;\n      }\n    }\n  }\n\n  error.stack = [...messageLines, ...stackLines].join('\\n');\n  return error;\n}\n\n/**\n * @internal\n */\nexport function createClientError(\n  details: Protocol.Runtime.ExceptionDetails\n): unknown {\n  let name: string;\n  let message: string;\n  if (!details.exception) {\n    name = 'Error';\n    message = details.text;\n  } else if (\n    (details.exception.type !== 'object' ||\n      details.exception.subtype !== 'error') &&\n    !details.exception.objectId\n  ) {\n    return valueFromRemoteObject(details.exception);\n  } else {\n    const detail = getErrorDetails(details);\n    name = detail.name;\n    message = detail.message;\n  }\n  const messageHeight = message.split('\\n').length;\n  const error = new Error(message);\n  error.name = name;\n\n  const stackLines = [];\n  const messageLines = error.stack!.split('\\n').splice(0, messageHeight);\n  if (details.stackTrace && stackLines.length < Error.stackTraceLimit) {\n    for (const frame of details.stackTrace.callFrames.reverse()) {\n      stackLines.push(\n        `    at ${frame.functionName || '<anonymous>'} (${frame.url}:${\n          frame.lineNumber\n        }:${frame.columnNumber})`\n      );\n      if (stackLines.length >= Error.stackTraceLimit) {\n        break;\n      }\n    }\n  }\n\n  error.stack = [...messageLines, ...stackLines].join('\\n');\n  return error;\n}\n\nconst getErrorDetails = (details: Protocol.Runtime.ExceptionDetails) => {\n  let name = '';\n  let message: string;\n  const lines = details.exception?.description?.split('\\n    at ') ?? [];\n  const size = Math.min(\n    details.stackTrace?.callFrames.length ?? 0,\n    lines.length - 1\n  );\n  lines.splice(-size, size);\n  if (details.exception?.className) {\n    name = details.exception.className;\n  }\n  message = lines.join('\\n');\n  if (name && message.startsWith(`${name}: `)) {\n    message = message.slice(name.length + 2);\n  }\n  return {message, name};\n};\n\n/**\n * @internal\n */\nconst SOURCE_URL = Symbol('Source URL for Puppeteer evaluation scripts');\n\n/**\n * @internal\n */\nexport class PuppeteerURL {\n  static INTERNAL_URL = 'pptr:internal';\n\n  static fromCallSite(\n    functionName: string,\n    site: NodeJS.CallSite\n  ): PuppeteerURL {\n    const url = new PuppeteerURL();\n    url.#functionName = functionName;\n    url.#siteString = site.toString();\n    return url;\n  }\n\n  static parse = (url: string): PuppeteerURL => {\n    url = url.slice('pptr:'.length);\n    const [functionName = '', siteString = ''] = url.split(';');\n    const puppeteerUrl = new PuppeteerURL();\n    puppeteerUrl.#functionName = functionName;\n    puppeteerUrl.#siteString = decodeURIComponent(siteString);\n    return puppeteerUrl;\n  };\n\n  static isPuppeteerURL = (url: string): boolean => {\n    return url.startsWith('pptr:');\n  };\n\n  #functionName!: string;\n  #siteString!: string;\n\n  get functionName(): string {\n    return this.#functionName;\n  }\n\n  get siteString(): string {\n    return this.#siteString;\n  }\n\n  toString(): string {\n    return `pptr:${[\n      this.#functionName,\n      encodeURIComponent(this.#siteString),\n    ].join(';')}`;\n  }\n}\n\n/**\n * @internal\n */\nexport const withSourcePuppeteerURLIfNone = <T extends NonNullable<unknown>>(\n  functionName: string,\n  object: T\n): T => {\n  if (Object.prototype.hasOwnProperty.call(object, SOURCE_URL)) {\n    return object;\n  }\n  const original = Error.prepareStackTrace;\n  Error.prepareStackTrace = (_, stack) => {\n    // First element is the function. Second element is the caller of this\n    // function. Third element is the caller of the caller of this function\n    // which is precisely what we want.\n    return stack[2];\n  };\n  const site = new Error().stack as unknown as NodeJS.CallSite;\n  Error.prepareStackTrace = original;\n  return Object.assign(object, {\n    [SOURCE_URL]: PuppeteerURL.fromCallSite(functionName, site),\n  });\n};\n\n/**\n * @internal\n */\nexport const getSourcePuppeteerURLIfAvailable = <\n  T extends NonNullable<unknown>\n>(\n  object: T\n): PuppeteerURL | undefined => {\n  if (Object.prototype.hasOwnProperty.call(object, SOURCE_URL)) {\n    return object[SOURCE_URL as keyof T] as PuppeteerURL;\n  }\n  return undefined;\n};\n\n/**\n * @internal\n */\nexport function valueFromRemoteObject(\n  remoteObject: Protocol.Runtime.RemoteObject\n): any {\n  assert(!remoteObject.objectId, 'Cannot extract value when objectId is given');\n  if (remoteObject.unserializableValue) {\n    if (remoteObject.type === 'bigint') {\n      return BigInt(remoteObject.unserializableValue.replace('n', ''));\n    }\n    switch (remoteObject.unserializableValue) {\n      case '-0':\n        return -0;\n      case 'NaN':\n        return NaN;\n      case 'Infinity':\n        return Infinity;\n      case '-Infinity':\n        return -Infinity;\n      default:\n        throw new Error(\n          'Unsupported unserializable value: ' +\n            remoteObject.unserializableValue\n        );\n    }\n  }\n  return remoteObject.value;\n}\n\n/**\n * @internal\n */\nexport async function releaseObject(\n  client: CDPSession,\n  remoteObject: Protocol.Runtime.RemoteObject\n): Promise<void> {\n  if (!remoteObject.objectId) {\n    return;\n  }\n  await client\n    .send('Runtime.releaseObject', {objectId: remoteObject.objectId})\n    .catch(error => {\n      // Exceptions might happen in case of a page been navigated or closed.\n      // Swallow these since they are harmless and we don't leak anything in this case.\n      debugError(error);\n    });\n}\n\n/**\n * @internal\n */\nexport interface PuppeteerEventListener {\n  emitter: CommonEventEmitter;\n  eventName: string | symbol;\n  handler: (...args: any[]) => void;\n}\n\n/**\n * @internal\n */\nexport function addEventListener(\n  emitter: CommonEventEmitter,\n  eventName: string | symbol,\n  handler: (...args: any[]) => void\n): PuppeteerEventListener {\n  emitter.on(eventName, handler);\n  return {emitter, eventName, handler};\n}\n\n/**\n * @internal\n */\nexport function removeEventListeners(\n  listeners: Array<{\n    emitter: CommonEventEmitter;\n    eventName: string | symbol;\n    handler: (...args: any[]) => void;\n  }>\n): void {\n  for (const listener of listeners) {\n    listener.emitter.removeListener(listener.eventName, listener.handler);\n  }\n  listeners.length = 0;\n}\n\n/**\n * @internal\n */\nexport const isString = (obj: unknown): obj is string => {\n  return typeof obj === 'string' || obj instanceof String;\n};\n\n/**\n * @internal\n */\nexport const isNumber = (obj: unknown): obj is number => {\n  return typeof obj === 'number' || obj instanceof Number;\n};\n\n/**\n * @internal\n */\nexport const isPlainObject = (obj: unknown): obj is Record<any, unknown> => {\n  return typeof obj === 'object' && obj?.constructor === Object;\n};\n\n/**\n * @internal\n */\nexport const isRegExp = (obj: unknown): obj is RegExp => {\n  return typeof obj === 'object' && obj?.constructor === RegExp;\n};\n\n/**\n * @internal\n */\nexport const isDate = (obj: unknown): obj is Date => {\n  return typeof obj === 'object' && obj?.constructor === Date;\n};\n\n/**\n * @internal\n */\nexport async function waitForEvent<T>(\n  emitter: CommonEventEmitter,\n  eventName: string | symbol,\n  predicate: (event: T) => Promise<boolean> | boolean,\n  timeout: number,\n  abortPromise: Promise<Error> | Deferred<Error>\n): Promise<T> {\n  const deferred = Deferred.create<T>({\n    message: `Timeout exceeded while waiting for event ${String(eventName)}`,\n    timeout,\n  });\n  const listener = addEventListener(emitter, eventName, async event => {\n    if (await predicate(event)) {\n      deferred.resolve(event);\n    }\n  });\n  return Deferred.race<T | Error>([deferred, abortPromise]).then(\n    r => {\n      removeEventListeners([listener]);\n      if (isErrorLike(r)) {\n        throw r;\n      }\n      return r;\n    },\n    error => {\n      removeEventListeners([listener]);\n      throw error;\n    }\n  );\n}\n\n/**\n * @internal\n */\nexport function createJSHandle(\n  context: ExecutionContext,\n  remoteObject: Protocol.Runtime.RemoteObject\n): JSHandle | ElementHandle<Node> {\n  if (remoteObject.subtype === 'node' && context._world) {\n    return new CDPElementHandle(context, remoteObject, context._world.frame());\n  }\n  return new CDPJSHandle(context, remoteObject);\n}\n\n/**\n * @internal\n */\nexport function evaluationString(\n  fun: Function | string,\n  ...args: unknown[]\n): string {\n  if (isString(fun)) {\n    assert(args.length === 0, 'Cannot evaluate a string with arguments');\n    return fun;\n  }\n\n  function serializeArgument(arg: unknown): string {\n    if (Object.is(arg, undefined)) {\n      return 'undefined';\n    }\n    return JSON.stringify(arg);\n  }\n\n  return `(${fun})(${args.map(serializeArgument).join(',')})`;\n}\n\n/**\n * @internal\n */\nexport function addPageBinding(type: string, name: string): void {\n  // This is the CDP binding.\n  // @ts-expect-error: In a different context.\n  const callCDP = globalThis[name];\n\n  // We replace the CDP binding with a Puppeteer binding.\n  Object.assign(globalThis, {\n    [name](...args: unknown[]): Promise<unknown> {\n      // This is the Puppeteer binding.\n      // @ts-expect-error: In a different context.\n      const callPuppeteer = globalThis[name];\n      callPuppeteer.args ??= new Map();\n      callPuppeteer.callbacks ??= new Map();\n\n      const seq = (callPuppeteer.lastSeq ?? 0) + 1;\n      callPuppeteer.lastSeq = seq;\n      callPuppeteer.args.set(seq, args);\n\n      callCDP(\n        JSON.stringify({\n          type,\n          name,\n          seq,\n          args,\n          isTrivial: !args.some(value => {\n            return value instanceof Node;\n          }),\n        })\n      );\n\n      return new Promise((resolve, reject) => {\n        callPuppeteer.callbacks.set(seq, {\n          resolve(value: unknown) {\n            callPuppeteer.args.delete(seq);\n            resolve(value);\n          },\n          reject(value?: unknown) {\n            callPuppeteer.args.delete(seq);\n            reject(value);\n          },\n        });\n      });\n    },\n  });\n}\n\n/**\n * @internal\n */\nexport function pageBindingInitString(type: string, name: string): string {\n  return evaluationString(addPageBinding, type, name);\n}\n\n/**\n * @internal\n */\nexport async function waitWithTimeout<T>(\n  promise: Promise<T>,\n  taskName: string,\n  timeout: number\n): Promise<T> {\n  const deferred = Deferred.create<never>({\n    message: `waiting for ${taskName} failed: timeout ${timeout}ms exceeded`,\n    timeout,\n  });\n\n  return await Deferred.race([promise, deferred]).finally(() => {\n    deferred.reject(new Error('Cleared'));\n  });\n}\n\n/**\n * @internal\n */\nlet fs: typeof import('fs/promises') | null = null;\n/**\n * @internal\n */\nexport async function importFSPromises(): Promise<\n  typeof import('fs/promises')\n> {\n  if (!fs) {\n    try {\n      fs = await import('fs/promises');\n    } catch (error) {\n      if (error instanceof TypeError) {\n        throw new Error(\n          'Cannot write to a path outside of a Node-like environment.'\n        );\n      }\n      throw error;\n    }\n  }\n  return fs;\n}\n\n/**\n * @internal\n */\nexport async function getReadableAsBuffer(\n  readable: Readable,\n  path?: string\n): Promise<Buffer | null> {\n  const buffers = [];\n  if (path) {\n    const fs = await importFSPromises();\n    const fileHandle = await fs.open(path, 'w+');\n    try {\n      for await (const chunk of readable) {\n        buffers.push(chunk);\n        await fileHandle.writeFile(chunk);\n      }\n    } finally {\n      await fileHandle.close();\n    }\n  } else {\n    for await (const chunk of readable) {\n      buffers.push(chunk);\n    }\n  }\n  try {\n    return Buffer.concat(buffers);\n  } catch (error) {\n    return null;\n  }\n}\n\n/**\n * @internal\n */\nexport async function getReadableFromProtocolStream(\n  client: CDPSession,\n  handle: string\n): Promise<Readable> {\n  // TODO: Once Node 18 becomes the lowest supported version, we can migrate to\n  // ReadableStream.\n  if (!isNode) {\n    throw new Error('Cannot create a stream outside of Node.js environment.');\n  }\n\n  const {Readable} = await import('stream');\n\n  let eof = false;\n  return new Readable({\n    async read(size: number) {\n      if (eof) {\n        return;\n      }\n\n      try {\n        const response = await client.send('IO.read', {handle, size});\n        this.push(response.data, response.base64Encoded ? 'base64' : undefined);\n        if (response.eof) {\n          eof = true;\n          await client.send('IO.close', {handle});\n          this.push(null);\n        }\n      } catch (error) {\n        if (isErrorLike(error)) {\n          this.destroy(error);\n          return;\n        }\n        throw error;\n      }\n    },\n  });\n}\n\n/**\n * @internal\n */\nexport async function setPageContent(\n  page: Pick<Page, 'evaluate'>,\n  content: string\n): Promise<void> {\n  // We rely upon the fact that document.open() will reset frame lifecycle with \"init\"\n  // lifecycle event. @see https://crrev.com/608658\n  return page.evaluate(html => {\n    document.open();\n    document.write(html);\n    document.close();\n  }, content);\n}\n\n/**\n * @internal\n */\nexport function getPageContent(): string {\n  let content = '';\n  for (const node of document.childNodes) {\n    switch (node) {\n      case document.documentElement:\n        content += document.documentElement.outerHTML;\n        break;\n      default:\n        content += new XMLSerializer().serializeToString(node);\n        break;\n    }\n  }\n\n  return content;\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {Frame} from '../api/Frame.js';\nimport {CDPSession} from '../common/Connection.js';\nimport {ExecutionContext} from '../common/ExecutionContext.js';\nimport {getQueryHandlerAndSelector} from '../common/GetQueryHandler.js';\nimport {WaitForSelectorOptions} from '../common/IsolatedWorld.js';\nimport {LazyArg} from '../common/LazyArg.js';\nimport {\n  ElementFor,\n  EvaluateFuncWith,\n  HandleFor,\n  HandleOr,\n  NodeFor,\n} from '../common/types.js';\nimport {KeyInput} from '../common/USKeyboardLayout.js';\nimport {isString, withSourcePuppeteerURLIfNone} from '../common/util.js';\nimport {assert} from '../util/assert.js';\nimport {AsyncIterableUtil} from '../util/AsyncIterableUtil.js';\n\nimport {\n  KeyPressOptions,\n  MouseClickOptions,\n  KeyboardTypeOptions,\n} from './Input.js';\nimport {JSHandle} from './JSHandle.js';\nimport {ScreenshotOptions} from './Page.js';\n\n/**\n * @public\n */\nexport interface BoxModel {\n  content: Point[];\n  padding: Point[];\n  border: Point[];\n  margin: Point[];\n  width: number;\n  height: number;\n}\n\n/**\n * @public\n */\nexport interface BoundingBox extends Point {\n  /**\n   * the width of the element in pixels.\n   */\n  width: number;\n  /**\n   * the height of the element in pixels.\n   */\n  height: number;\n}\n\n/**\n * @public\n */\nexport interface Offset {\n  /**\n   * x-offset for the clickable point relative to the top-left corner of the border box.\n   */\n  x: number;\n  /**\n   * y-offset for the clickable point relative to the top-left corner of the border box.\n   */\n  y: number;\n}\n\n/**\n * @public\n */\nexport interface ClickOptions extends MouseClickOptions {\n  /**\n   * Offset for the clickable point relative to the top-left corner of the border box.\n   */\n  offset?: Offset;\n}\n\n/**\n * @public\n */\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * ElementHandle represents an in-page DOM element.\n *\n * @remarks\n * ElementHandles can be created with the {@link Page.$} method.\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   const hrefElement = await page.$('a');\n *   await hrefElement.click();\n *   // ...\n * })();\n * ```\n *\n * ElementHandle prevents the DOM element from being garbage-collected unless the\n * handle is {@link JSHandle.dispose | disposed}. ElementHandles are auto-disposed\n * when their origin frame gets navigated.\n *\n * ElementHandle instances can be used as arguments in {@link Page.$eval} and\n * {@link Page.evaluate} methods.\n *\n * If you're using TypeScript, ElementHandle takes a generic argument that\n * denotes the type of element the handle is holding within. For example, if you\n * have a handle to a `<select>` element, you can type it as\n * `ElementHandle<HTMLSelectElement>` and you get some nicer type checks.\n *\n * @public\n */\n\nexport class ElementHandle<\n  ElementType extends Node = Element\n> extends JSHandle<ElementType> {\n  /**\n   * @internal\n   */\n  protected handle;\n\n  /**\n   * @internal\n   */\n  constructor(handle: JSHandle<ElementType>) {\n    super();\n    this.handle = handle;\n  }\n\n  /**\n   * @internal\n   */\n  override get id(): string | undefined {\n    return this.handle.id;\n  }\n\n  /**\n   * @internal\n   */\n  override get disposed(): boolean {\n    return this.handle.disposed;\n  }\n\n  /**\n   * @internal\n   */\n  override async getProperty<K extends keyof ElementType>(\n    propertyName: HandleOr<K>\n  ): Promise<HandleFor<ElementType[K]>>;\n  /**\n   * @internal\n   */\n  override async getProperty(propertyName: string): Promise<JSHandle<unknown>>;\n  override async getProperty<K extends keyof ElementType>(\n    propertyName: HandleOr<K>\n  ): Promise<HandleFor<ElementType[K]>> {\n    return this.handle.getProperty(propertyName);\n  }\n\n  /**\n   * @internal\n   */\n  override async getProperties(): Promise<Map<string, JSHandle>> {\n    return this.handle.getProperties();\n  }\n\n  /**\n   * @internal\n   */\n  override async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<ElementType, Params> = EvaluateFuncWith<\n      ElementType,\n      Params\n    >\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    return this.handle.evaluate(pageFunction, ...args);\n  }\n\n  /**\n   * @internal\n   */\n  override evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<ElementType, Params> = EvaluateFuncWith<\n      ElementType,\n      Params\n    >\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    return this.handle.evaluateHandle(pageFunction, ...args);\n  }\n\n  /**\n   * @internal\n   */\n  override async jsonValue(): Promise<ElementType> {\n    return this.handle.jsonValue();\n  }\n\n  /**\n   * @internal\n   */\n  override toString(): string {\n    return this.handle.toString();\n  }\n\n  /**\n   * @internal\n   */\n  override async dispose(): Promise<void> {\n    return await this.handle.dispose();\n  }\n\n  override asElement(): ElementHandle<ElementType> {\n    return this;\n  }\n\n  /**\n   * @internal\n   */\n  override executionContext(): ExecutionContext {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  override get client(): CDPSession {\n    throw new Error('Not implemented');\n  }\n\n  get frame(): Frame {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Queries the current element for an element matching the given selector.\n   *\n   * @param selector - The selector to query for.\n   * @returns A {@link ElementHandle | element handle} to the first element\n   * matching the given selector. Otherwise, `null`.\n   */\n  async $<Selector extends string>(\n    selector: Selector\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    const {updatedSelector, QueryHandler} =\n      getQueryHandlerAndSelector(selector);\n    return (await QueryHandler.queryOne(\n      this,\n      updatedSelector\n    )) as ElementHandle<NodeFor<Selector>> | null;\n  }\n\n  /**\n   * Queries the current element for all elements matching the given selector.\n   *\n   * @param selector - The selector to query for.\n   * @returns An array of {@link ElementHandle | element handles} that point to\n   * elements matching the given selector.\n   */\n  async $$<Selector extends string>(\n    selector: Selector\n  ): Promise<Array<ElementHandle<NodeFor<Selector>>>> {\n    const {updatedSelector, QueryHandler} =\n      getQueryHandlerAndSelector(selector);\n    return AsyncIterableUtil.collect(\n      QueryHandler.queryAll(this, updatedSelector)\n    ) as Promise<Array<ElementHandle<NodeFor<Selector>>>>;\n  }\n\n  /**\n   * Runs the given function on the first element matching the given selector in\n   * the current element.\n   *\n   * If the given function returns a promise, then this method will wait till\n   * the promise resolves.\n   *\n   * @example\n   *\n   * ```ts\n   * const tweetHandle = await page.$('.tweet');\n   * expect(await tweetHandle.$eval('.like', node => node.innerText)).toBe(\n   *   '100'\n   * );\n   * expect(await tweetHandle.$eval('.retweets', node => node.innerText)).toBe(\n   *   '10'\n   * );\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param pageFunction - The function to be evaluated in this element's page's\n   * context. The first element matching the selector will be passed in as the\n   * first argument.\n   * @param args - Additional arguments to pass to `pageFunction`.\n   * @returns A promise to the result of the function.\n   */\n  async $eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<NodeFor<Selector>, Params> = EvaluateFuncWith<\n      NodeFor<Selector>,\n      Params\n    >\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$eval.name, pageFunction);\n    const elementHandle = await this.$(selector);\n    if (!elementHandle) {\n      throw new Error(\n        `Error: failed to find element matching selector \"${selector}\"`\n      );\n    }\n    const result = await elementHandle.evaluate(pageFunction, ...args);\n    await elementHandle.dispose();\n    return result;\n  }\n\n  /**\n   * Runs the given function on an array of elements matching the given selector\n   * in the current element.\n   *\n   * If the given function returns a promise, then this method will wait till\n   * the promise resolves.\n   *\n   * @example\n   * HTML:\n   *\n   * ```html\n   * <div class=\"feed\">\n   *   <div class=\"tweet\">Hello!</div>\n   *   <div class=\"tweet\">Hi!</div>\n   * </div>\n   * ```\n   *\n   * JavaScript:\n   *\n   * ```js\n   * const feedHandle = await page.$('.feed');\n   * expect(\n   *   await feedHandle.$$eval('.tweet', nodes => nodes.map(n => n.innerText))\n   * ).toEqual(['Hello!', 'Hi!']);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param pageFunction - The function to be evaluated in the element's page's\n   * context. An array of elements matching the given selector will be passed to\n   * the function as its first argument.\n   * @param args - Additional arguments to pass to `pageFunction`.\n   * @returns A promise to the result of the function.\n   */\n  async $$eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<\n      Array<NodeFor<Selector>>,\n      Params\n    > = EvaluateFuncWith<Array<NodeFor<Selector>>, Params>\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$$eval.name, pageFunction);\n    const results = await this.$$(selector);\n    const elements = await this.evaluateHandle((_, ...elements) => {\n      return elements;\n    }, ...results);\n    const [result] = await Promise.all([\n      elements.evaluate(pageFunction, ...args),\n      ...results.map(results => {\n        return results.dispose();\n      }),\n    ]);\n    await elements.dispose();\n    return result;\n  }\n\n  /**\n   * @deprecated Use {@link ElementHandle.$$} with the `xpath` prefix.\n   *\n   * Example: `await elementHandle.$$('xpath/' + xpathExpression)`\n   *\n   * The method evaluates the XPath expression relative to the elementHandle.\n   * If `xpath` starts with `//` instead of `.//`, the dot will be appended\n   * automatically.\n   *\n   * If there are no such elements, the method will resolve to an empty array.\n   * @param expression - Expression to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate | evaluate}\n   */\n  async $x(expression: string): Promise<Array<ElementHandle<Node>>> {\n    if (expression.startsWith('//')) {\n      expression = `.${expression}`;\n    }\n    return this.$$(`xpath/${expression}`);\n  }\n\n  /**\n   * Wait for an element matching the given selector to appear in the current\n   * element.\n   *\n   * Unlike {@link Frame.waitForSelector}, this method does not work across\n   * navigations or if the element is detached from DOM.\n   *\n   * @example\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   let currentURL;\n   *   page\n   *     .mainFrame()\n   *     .waitForSelector('img')\n   *     .then(() => console.log('First URL with image: ' + currentURL));\n   *\n   *   for (currentURL of [\n   *     'https://example.com',\n   *     'https://google.com',\n   *     'https://bbc.com',\n   *   ]) {\n   *     await page.goto(currentURL);\n   *   }\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param selector - The selector to query and wait for.\n   * @param options - Options for customizing waiting behavior.\n   * @returns An element matching the given selector.\n   * @throws Throws if an element matching the given selector doesn't appear.\n   */\n  async waitForSelector<Selector extends string>(\n    selector: Selector,\n    options: WaitForSelectorOptions = {}\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    const {updatedSelector, QueryHandler} =\n      getQueryHandlerAndSelector(selector);\n    return (await QueryHandler.waitFor(\n      this,\n      updatedSelector,\n      options\n    )) as ElementHandle<NodeFor<Selector>> | null;\n  }\n\n  async #checkVisibility(visibility: boolean): Promise<boolean> {\n    const element = await this.frame.isolatedRealm().adoptHandle(this);\n    try {\n      return await this.frame.isolatedRealm().evaluate(\n        async (PuppeteerUtil, element, visibility) => {\n          return Boolean(PuppeteerUtil.checkVisibility(element, visibility));\n        },\n        LazyArg.create(context => {\n          return context.puppeteerUtil;\n        }),\n        element,\n        visibility\n      );\n    } finally {\n      await element.dispose();\n    }\n  }\n\n  /**\n   * Checks if an element is visible using the same mechanism as\n   * {@link ElementHandle.waitForSelector}.\n   */\n  async isVisible(): Promise<boolean> {\n    return this.#checkVisibility(true);\n  }\n\n  /**\n   * Checks if an element is hidden using the same mechanism as\n   * {@link ElementHandle.waitForSelector}.\n   */\n  async isHidden(): Promise<boolean> {\n    return this.#checkVisibility(false);\n  }\n\n  /**\n   * @deprecated Use {@link ElementHandle.waitForSelector} with the `xpath`\n   * prefix.\n   *\n   * Example: `await elementHandle.waitForSelector('xpath/' + xpathExpression)`\n   *\n   * The method evaluates the XPath expression relative to the elementHandle.\n   *\n   * Wait for the `xpath` within the element. If at the moment of calling the\n   * method the `xpath` already exists, the method will return immediately. If\n   * the `xpath` doesn't appear after the `timeout` milliseconds of waiting, the\n   * function will throw.\n   *\n   * If `xpath` starts with `//` instead of `.//`, the dot will be appended\n   * automatically.\n   *\n   * @example\n   * This method works across navigation.\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   let currentURL;\n   *   page\n   *     .waitForXPath('//img')\n   *     .then(() => console.log('First URL with image: ' + currentURL));\n   *   for (currentURL of [\n   *     'https://example.com',\n   *     'https://google.com',\n   *     'https://bbc.com',\n   *   ]) {\n   *     await page.goto(currentURL);\n   *   }\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param xpath - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/XPath | xpath} of an\n   * element to wait for\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves when element specified by xpath string is\n   * added to DOM. Resolves to `null` if waiting for `hidden: true` and xpath is\n   * not found in DOM, otherwise resolves to `ElementHandle`.\n   * @remarks\n   * The optional Argument `options` have properties:\n   *\n   * - `visible`: A boolean to wait for element to be present in DOM and to be\n   *   visible, i.e. to not have `display: none` or `visibility: hidden` CSS\n   *   properties. Defaults to `false`.\n   *\n   * - `hidden`: A boolean wait for element to not be found in the DOM or to be\n   *   hidden, i.e. have `display: none` or `visibility: hidden` CSS properties.\n   *   Defaults to `false`.\n   *\n   * - `timeout`: A number which is maximum time to wait for in milliseconds.\n   *   Defaults to `30000` (30 seconds). Pass `0` to disable timeout. The\n   *   default value can be changed by using the {@link Page.setDefaultTimeout}\n   *   method.\n   */\n  async waitForXPath(\n    xpath: string,\n    options: {\n      visible?: boolean;\n      hidden?: boolean;\n      timeout?: number;\n    } = {}\n  ): Promise<ElementHandle<Node> | null> {\n    if (xpath.startsWith('//')) {\n      xpath = `.${xpath}`;\n    }\n    return this.waitForSelector(`xpath/${xpath}`, options);\n  }\n\n  /**\n   * Converts the current handle to the given element type.\n   *\n   * @example\n   *\n   * ```ts\n   * const element: ElementHandle<Element> = await page.$(\n   *   '.class-name-of-anchor'\n   * );\n   * // DO NOT DISPOSE `element`, this will be always be the same handle.\n   * const anchor: ElementHandle<HTMLAnchorElement> = await element.toElement(\n   *   'a'\n   * );\n   * ```\n   *\n   * @param tagName - The tag name of the desired element type.\n   * @throws An error if the handle does not match. **The handle will not be\n   * automatically disposed.**\n   */\n  async toElement<\n    K extends keyof HTMLElementTagNameMap | keyof SVGElementTagNameMap\n  >(tagName: K): Promise<HandleFor<ElementFor<K>>> {\n    const isMatchingTagName = await this.evaluate((node, tagName) => {\n      return node.nodeName === tagName.toUpperCase();\n    }, tagName);\n    if (!isMatchingTagName) {\n      throw new Error(`Element is not a(n) \\`${tagName}\\` element`);\n    }\n    return this as unknown as HandleFor<ElementFor<K>>;\n  }\n\n  /**\n   * Resolves to the content frame for element handles referencing\n   * iframe nodes, or null otherwise\n   */\n  async contentFrame(): Promise<Frame | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Returns the middle point within an element unless a specific offset is provided.\n   */\n  async clickablePoint(offset?: Offset): Promise<Point>;\n  async clickablePoint(): Promise<Point> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page} to hover over the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async hover(this: ElementHandle<Element>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page | Page.mouse} to click in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async click(\n    this: ElementHandle<Element>,\n    options?: ClickOptions\n  ): Promise<void>;\n  async click(this: ElementHandle<Element>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method creates and captures a dragevent from the element.\n   */\n  async drag(\n    this: ElementHandle<Element>,\n    target: Point\n  ): Promise<Protocol.Input.DragData>;\n  async drag(this: ElementHandle<Element>): Promise<Protocol.Input.DragData> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method creates a `dragenter` event on the element.\n   */\n  async dragEnter(\n    this: ElementHandle<Element>,\n    data?: Protocol.Input.DragData\n  ): Promise<void>;\n  async dragEnter(this: ElementHandle<Element>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method creates a `dragover` event on the element.\n   */\n  async dragOver(\n    this: ElementHandle<Element>,\n    data?: Protocol.Input.DragData\n  ): Promise<void>;\n  async dragOver(this: ElementHandle<Element>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method triggers a drop on the element.\n   */\n  async drop(\n    this: ElementHandle<Element>,\n    data?: Protocol.Input.DragData\n  ): Promise<void>;\n  async drop(this: ElementHandle<Element>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method triggers a dragenter, dragover, and drop on the element.\n   */\n  async dragAndDrop(\n    this: ElementHandle<Element>,\n    target: ElementHandle<Node>,\n    options?: {delay: number}\n  ): Promise<void>;\n  async dragAndDrop(this: ElementHandle<Element>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Triggers a `change` and `input` event once all the provided options have been\n   * selected. If there's no `<select>` element matching `selector`, the method\n   * throws an error.\n   *\n   * @example\n   *\n   * ```ts\n   * handle.select('blue'); // single selection\n   * handle.select('red', 'green', 'blue'); // multiple selections\n   * ```\n   *\n   * @param values - Values of options to select. If the `<select>` has the\n   * `multiple` attribute, all values are considered, otherwise only the first\n   * one is taken into account.\n   */\n  async select(...values: string[]): Promise<string[]> {\n    for (const value of values) {\n      assert(\n        isString(value),\n        'Values must be strings. Found value \"' +\n          value +\n          '\" of type \"' +\n          typeof value +\n          '\"'\n      );\n    }\n\n    return this.evaluate((element, vals): string[] => {\n      const values = new Set(vals);\n      if (!(element instanceof HTMLSelectElement)) {\n        throw new Error('Element is not a <select> element.');\n      }\n\n      const selectedValues = new Set<string>();\n      if (!element.multiple) {\n        for (const option of element.options) {\n          option.selected = false;\n        }\n        for (const option of element.options) {\n          if (values.has(option.value)) {\n            option.selected = true;\n            selectedValues.add(option.value);\n            break;\n          }\n        }\n      } else {\n        for (const option of element.options) {\n          option.selected = values.has(option.value);\n          if (option.selected) {\n            selectedValues.add(option.value);\n          }\n        }\n      }\n      element.dispatchEvent(new Event('input', {bubbles: true}));\n      element.dispatchEvent(new Event('change', {bubbles: true}));\n      return [...selectedValues.values()];\n    }, values);\n  }\n\n  /**\n   * Sets the value of an\n   * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input | input element}\n   * to the given file paths.\n   *\n   * @remarks This will not validate whether the file paths exists. Also, if a\n   * path is relative, then it is resolved against the\n   * {@link https://nodejs.org/api/process.html#process_process_cwd | current working directory}.\n   * For locals script connecting to remote chrome environments, paths must be\n   * absolute.\n   */\n  async uploadFile(\n    this: ElementHandle<HTMLInputElement>,\n    ...paths: string[]\n  ): Promise<void>;\n  async uploadFile(this: ElementHandle<HTMLInputElement>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method scrolls element into view if needed, and then uses\n   * {@link Touchscreen.tap} to tap in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async tap(this: ElementHandle<Element>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  async touchStart(this: ElementHandle<Element>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  async touchMove(this: ElementHandle<Element>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  async touchEnd(this: ElementHandle<Element>): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Calls {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus | focus} on the element.\n   */\n  async focus(): Promise<void> {\n    await this.evaluate(element => {\n      if (!(element instanceof HTMLElement)) {\n        throw new Error('Cannot focus non-HTMLElement');\n      }\n      return element.focus();\n    });\n  }\n\n  /**\n   * Focuses the element, and then sends a `keydown`, `keypress`/`input`, and\n   * `keyup` event for each character in the text.\n   *\n   * To press a special key, like `Control` or `ArrowDown`,\n   * use {@link ElementHandle.press}.\n   *\n   * @example\n   *\n   * ```ts\n   * await elementHandle.type('Hello'); // Types instantly\n   * await elementHandle.type('World', {delay: 100}); // Types slower, like a user\n   * ```\n   *\n   * @example\n   * An example of typing into a text field and then submitting the form:\n   *\n   * ```ts\n   * const elementHandle = await page.$('input');\n   * await elementHandle.type('some text');\n   * await elementHandle.press('Enter');\n   * ```\n   *\n   * @param options - Delay in milliseconds. Defaults to 0.\n   */\n  async type(\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void>;\n  async type(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Focuses the element, and then uses {@link Keyboard.down} and {@link Keyboard.up}.\n   *\n   * @remarks\n   * If `key` is a single character and no modifier keys besides `Shift`\n   * are being held down, a `keypress`/`input` event will also be generated.\n   * The `text` option can be specified to force an input event to be generated.\n   *\n   * **NOTE** Modifier keys DO affect `elementHandle.press`. Holding down `Shift`\n   * will type the text in upper case.\n   *\n   * @param key - Name of key to press, such as `ArrowLeft`.\n   * See {@link KeyInput} for a list of all key names.\n   */\n  async press(\n    key: KeyInput,\n    options?: Readonly<KeyPressOptions>\n  ): Promise<void>;\n  async press(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method returns the bounding box of the element (relative to the main frame),\n   * or `null` if the element is not visible.\n   */\n  async boundingBox(): Promise<BoundingBox | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method returns boxes of the element, or `null` if the element is not visible.\n   *\n   * @remarks\n   *\n   * Boxes are represented as an array of points;\n   * Each Point is an object `{x, y}`. Box points are sorted clock-wise.\n   */\n  async boxModel(): Promise<BoxModel | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method scrolls element into view if needed, and then uses\n   * {@link Page.(screenshot:3) } to take a screenshot of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async screenshot(\n    this: ElementHandle<Element>,\n    options?: ScreenshotOptions\n  ): Promise<string | Buffer>;\n  async screenshot(this: ElementHandle<Element>): Promise<string | Buffer> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  protected async assertConnectedElement(): Promise<void> {\n    const error = await this.evaluate(\n      async (element): Promise<string | undefined> => {\n        if (!element.isConnected) {\n          return 'Node is detached from document';\n        }\n        if (element.nodeType !== Node.ELEMENT_NODE) {\n          return 'Node is not of type HTMLElement';\n        }\n        return;\n      }\n    );\n\n    if (error) {\n      throw new Error(error);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  protected async scrollIntoViewIfNeeded(\n    this: ElementHandle<Element>\n  ): Promise<void> {\n    if (\n      await this.isIntersectingViewport({\n        threshold: 1,\n      })\n    ) {\n      return;\n    }\n    await this.scrollIntoView();\n  }\n\n  /**\n   * Resolves to true if the element is visible in the current viewport. If an\n   * element is an SVG, we check if the svg owner element is in the viewport\n   * instead. See https://crbug.com/963246.\n   *\n   * @param options - Threshold for the intersection between 0 (no intersection) and 1\n   * (full intersection). Defaults to 1.\n   */\n  async isIntersectingViewport(\n    this: ElementHandle<Element>,\n    options?: {\n      threshold?: number;\n    }\n  ): Promise<boolean> {\n    await this.assertConnectedElement();\n\n    const {threshold = 0} = options ?? {};\n    const svgHandle = await this.#asSVGElementHandle(this);\n    const intersectionTarget: ElementHandle<Element> = svgHandle\n      ? await this.#getOwnerSVGElement(svgHandle)\n      : this;\n\n    try {\n      return await intersectionTarget.evaluate(async (element, threshold) => {\n        const visibleRatio = await new Promise<number>(resolve => {\n          const observer = new IntersectionObserver(entries => {\n            resolve(entries[0]!.intersectionRatio);\n            observer.disconnect();\n          });\n          observer.observe(element);\n        });\n        return threshold === 1 ? visibleRatio === 1 : visibleRatio > threshold;\n      }, threshold);\n    } finally {\n      if (intersectionTarget !== this) {\n        await intersectionTarget.dispose();\n      }\n    }\n  }\n\n  /**\n   * Scrolls the element into view using either the automation protocol client\n   * or by calling element.scrollIntoView.\n   */\n  async scrollIntoView(this: ElementHandle<Element>): Promise<void> {\n    await this.assertConnectedElement();\n    await this.evaluate(async (element): Promise<void> => {\n      element.scrollIntoView({\n        block: 'center',\n        inline: 'center',\n        behavior: 'instant',\n      });\n    });\n  }\n\n  /**\n   * Returns true if an element is an SVGElement (included svg, path, rect\n   * etc.).\n   */\n  async #asSVGElementHandle(\n    handle: ElementHandle<Element>\n  ): Promise<ElementHandle<SVGElement> | null> {\n    if (\n      await handle.evaluate(element => {\n        return element instanceof SVGElement;\n      })\n    ) {\n      return handle as ElementHandle<SVGElement>;\n    } else {\n      return null;\n    }\n  }\n\n  async #getOwnerSVGElement(\n    handle: ElementHandle<SVGElement>\n  ): Promise<ElementHandle<SVGSVGElement>> {\n    // SVGSVGElement.ownerSVGElement === null.\n    return await handle.evaluateHandle(element => {\n      if (element instanceof SVGSVGElement) {\n        return element;\n      }\n      return element.ownerSVGElement!;\n    });\n  }\n\n  /**\n   * @internal\n   */\n  assertElementHasWorld(): asserts this {\n    assert(this.executionContext()._world);\n  }\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {JSHandle} from '../api/JSHandle.js';\n\nimport {AwaitableIterable, HandleFor} from './types.js';\n\nconst DEFAULT_BATCH_SIZE = 20;\n\n/**\n * This will transpose an iterator JSHandle into a fast, Puppeteer-side iterator\n * of JSHandles.\n *\n * @param size - The number of elements to transpose. This should be something\n * reasonable.\n */\nasync function* fastTransposeIteratorHandle<T>(\n  iterator: JSHandle<AwaitableIterator<T>>,\n  size: number\n) {\n  const array = await iterator.evaluateHandle(async (iterator, size) => {\n    const results = [];\n    while (results.length < size) {\n      const result = await iterator.next();\n      if (result.done) {\n        break;\n      }\n      results.push(result.value);\n    }\n    return results;\n  }, size);\n  const properties = (await array.getProperties()) as Map<string, HandleFor<T>>;\n  await array.dispose();\n  yield* properties.values();\n  return properties.size === 0;\n}\n\n/**\n * This will transpose an iterator JSHandle in batches based on the default size\n * of {@link fastTransposeIteratorHandle}.\n */\n\nasync function* transposeIteratorHandle<T>(\n  iterator: JSHandle<AwaitableIterator<T>>\n) {\n  let size = DEFAULT_BATCH_SIZE;\n  try {\n    while (!(yield* fastTransposeIteratorHandle(iterator, size))) {\n      size <<= 1;\n    }\n  } finally {\n    await iterator.dispose();\n  }\n}\n\ntype AwaitableIterator<T> = Iterator<T> | AsyncIterator<T>;\n\n/**\n * @internal\n */\nexport async function* transposeIterableHandle<T>(\n  handle: JSHandle<AwaitableIterable<T>>\n): AsyncIterableIterator<HandleFor<T>> {\n  yield* transposeIteratorHandle(\n    await handle.evaluateHandle(iterable => {\n      return (async function* () {\n        yield* iterable;\n      })();\n    })\n  );\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ElementHandle} from '../api/ElementHandle.js';\nimport type {Frame} from '../api/Frame.js';\nimport type PuppeteerUtil from '../injected/injected.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\nimport {interpolateFunction, stringifyFunction} from '../util/Function.js';\n\nimport {transposeIterableHandle} from './HandleIterator.js';\nimport type {WaitForSelectorOptions} from './IsolatedWorld.js';\nimport {LazyArg} from './LazyArg.js';\nimport type {Awaitable, AwaitableIterable} from './types.js';\n\n/**\n * @internal\n */\nexport type QuerySelectorAll = (\n  node: Node,\n  selector: string,\n  PuppeteerUtil: PuppeteerUtil\n) => AwaitableIterable<Node>;\n\n/**\n * @internal\n */\nexport type QuerySelector = (\n  node: Node,\n  selector: string,\n  PuppeteerUtil: PuppeteerUtil\n) => Awaitable<Node | null>;\n\n/**\n * @internal\n */\nexport class QueryHandler {\n  // Either one of these may be implemented, but at least one must be.\n  static querySelectorAll?: QuerySelectorAll;\n  static querySelector?: QuerySelector;\n\n  static get _querySelector(): QuerySelector {\n    if (this.querySelector) {\n      return this.querySelector;\n    }\n    if (!this.querySelectorAll) {\n      throw new Error('Cannot create default `querySelector`.');\n    }\n\n    return (this.querySelector = interpolateFunction(\n      async (node, selector, PuppeteerUtil) => {\n        const querySelectorAll: QuerySelectorAll =\n          PLACEHOLDER('querySelectorAll');\n        const results = querySelectorAll(node, selector, PuppeteerUtil);\n        for await (const result of results) {\n          return result;\n        }\n        return null;\n      },\n      {\n        querySelectorAll: stringifyFunction(this.querySelectorAll),\n      }\n    ));\n  }\n\n  static get _querySelectorAll(): QuerySelectorAll {\n    if (this.querySelectorAll) {\n      return this.querySelectorAll;\n    }\n    if (!this.querySelector) {\n      throw new Error('Cannot create default `querySelectorAll`.');\n    }\n\n    return (this.querySelectorAll = interpolateFunction(\n      async function* (node, selector, PuppeteerUtil) {\n        const querySelector: QuerySelector = PLACEHOLDER('querySelector');\n        const result = await querySelector(node, selector, PuppeteerUtil);\n        if (result) {\n          yield result;\n        }\n      },\n      {\n        querySelector: stringifyFunction(this.querySelector),\n      }\n    ));\n  }\n\n  /**\n   * Queries for multiple nodes given a selector and {@link ElementHandle}.\n   *\n   * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll | Document.querySelectorAll()}.\n   */\n  static async *queryAll(\n    element: ElementHandle<Node>,\n    selector: string\n  ): AwaitableIterable<ElementHandle<Node>> {\n    element.assertElementHasWorld();\n    const handle = await element.evaluateHandle(\n      this._querySelectorAll,\n      selector,\n      LazyArg.create(context => {\n        return context.puppeteerUtil;\n      })\n    );\n    yield* transposeIterableHandle(handle);\n  }\n\n  /**\n   * Queries for a single node given a selector and {@link ElementHandle}.\n   *\n   * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector}.\n   */\n  static async queryOne(\n    element: ElementHandle<Node>,\n    selector: string\n  ): Promise<ElementHandle<Node> | null> {\n    element.assertElementHasWorld();\n    const result = await element.evaluateHandle(\n      this._querySelector,\n      selector,\n      LazyArg.create(context => {\n        return context.puppeteerUtil;\n      })\n    );\n    if (!(result instanceof ElementHandle)) {\n      await result.dispose();\n      return null;\n    }\n    return result;\n  }\n\n  /**\n   * Waits until a single node appears for a given selector and\n   * {@link ElementHandle}.\n   *\n   * This will always query the handle in the Puppeteer world and migrate the\n   * result to the main world.\n   */\n  static async waitFor(\n    elementOrFrame: ElementHandle<Node> | Frame,\n    selector: string,\n    options: WaitForSelectorOptions\n  ): Promise<ElementHandle<Node> | null> {\n    let frame: Frame;\n    let element: ElementHandle<Node> | undefined;\n    if (!(elementOrFrame instanceof ElementHandle)) {\n      frame = elementOrFrame;\n    } else {\n      frame = elementOrFrame.frame;\n      element = await frame.isolatedRealm().adoptHandle(elementOrFrame);\n    }\n\n    const {visible = false, hidden = false, timeout, signal} = options;\n\n    try {\n      signal?.throwIfAborted();\n\n      const handle = await frame.isolatedRealm().waitForFunction(\n        async (PuppeteerUtil, query, selector, root, visible) => {\n          const querySelector = PuppeteerUtil.createFunction(\n            query\n          ) as QuerySelector;\n          const node = await querySelector(\n            root ?? document,\n            selector,\n            PuppeteerUtil\n          );\n          return PuppeteerUtil.checkVisibility(node, visible);\n        },\n        {\n          polling: visible || hidden ? 'raf' : 'mutation',\n          root: element,\n          timeout,\n          signal,\n        },\n        LazyArg.create(context => {\n          return context.puppeteerUtil;\n        }),\n        stringifyFunction(this._querySelector),\n        selector,\n        element,\n        visible ? true : hidden ? false : undefined\n      );\n\n      if (signal?.aborted) {\n        await handle.dispose();\n        throw signal.reason;\n      }\n\n      if (!(handle instanceof ElementHandle)) {\n        await handle.dispose();\n        return null;\n      }\n      return frame.mainRealm().transferHandle(handle);\n    } catch (error) {\n      if (!isErrorLike(error)) {\n        throw error;\n      }\n      if (error.name === 'AbortError') {\n        throw error;\n      }\n      error.message = `Waiting for selector \\`${selector}\\` failed: ${error.message}`;\n      throw error;\n    } finally {\n      if (element) {\n        await element.dispose();\n      }\n    }\n  }\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Protocol from 'devtools-protocol';\n\nimport {SecurityDetails} from '../common/SecurityDetails.js';\n\nimport {Frame} from './Frame.js';\nimport {HTTPRequest} from './HTTPRequest.js';\n\n/**\n * @public\n */\nexport interface RemoteAddress {\n  ip?: string;\n  port?: number;\n}\n\n/**\n * The HTTPResponse class represents responses which are received by the\n * {@link Page} class.\n *\n * @public\n */\nexport class HTTPResponse {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * @internal\n   */\n  _resolveBody(_err: Error | null): void {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The IP address and port number used to connect to the remote\n   * server.\n   */\n  remoteAddress(): RemoteAddress {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The URL of the response.\n   */\n  url(): string {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * True if the response was successful (status in the range 200-299).\n   */\n  ok(): boolean {\n    // TODO: document === 0 case?\n    const status = this.status();\n    return status === 0 || (status >= 200 && status <= 299);\n  }\n\n  /**\n   * The status code of the response (e.g., 200 for a success).\n   */\n  status(): number {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The status text of the response (e.g. usually an \"OK\" for a\n   * success).\n   */\n  statusText(): string {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * An object with HTTP headers associated with the response. All\n   * header names are lower-case.\n   */\n  headers(): Record<string, string> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * {@link SecurityDetails} if the response was received over the\n   * secure connection, or `null` otherwise.\n   */\n  securityDetails(): SecurityDetails | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Timing information related to the response.\n   */\n  timing(): Protocol.Network.ResourceTiming | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Promise which resolves to a buffer with response body.\n   */\n  buffer(): Promise<Buffer> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Promise which resolves to a text representation of response body.\n   */\n  async text(): Promise<string> {\n    const content = await this.buffer();\n    return content.toString('utf8');\n  }\n\n  /**\n   * Promise which resolves to a JSON representation of response body.\n   *\n   * @remarks\n   *\n   * This method will throw if the response body is not parsable via\n   * `JSON.parse`.\n   */\n  async json(): Promise<any> {\n    const content = await this.text();\n    return JSON.parse(content);\n  }\n\n  /**\n   * A matching {@link HTTPRequest} object.\n   */\n  request(): HTTPRequest {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * True if the response was served from either the browser's disk\n   * cache or memory cache.\n   */\n  fromCache(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * True if the response was served by a service worker.\n   */\n  fromServiceWorker(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * A {@link Frame} that initiated this response, or `null` if\n   * navigating to error pages.\n   */\n  frame(): Frame | null {\n    throw new Error('Not implemented');\n  }\n}\n", "/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\n/**\n * The SecurityDetails class represents the security details of a\n * response that was received over a secure connection.\n *\n * @public\n */\nexport class SecurityDetails {\n  #subjectName: string;\n  #issuer: string;\n  #validFrom: number;\n  #validTo: number;\n  #protocol: string;\n  #sanList: string[];\n\n  /**\n   * @internal\n   */\n  constructor(securityPayload: Protocol.Network.SecurityDetails) {\n    this.#subjectName = securityPayload.subjectName;\n    this.#issuer = securityPayload.issuer;\n    this.#validFrom = securityPayload.validFrom;\n    this.#validTo = securityPayload.validTo;\n    this.#protocol = securityPayload.protocol;\n    this.#sanList = securityPayload.sanList;\n  }\n\n  /**\n   * The name of the issuer of the certificate.\n   */\n  issuer(): string {\n    return this.#issuer;\n  }\n\n  /**\n   * {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the start of the certificate's validity.\n   */\n  validFrom(): number {\n    return this.#validFrom;\n  }\n\n  /**\n   * {@link https://en.wikipedia.org/wiki/Unix_time | Unix timestamp}\n   * marking the end of the certificate's validity.\n   */\n  validTo(): number {\n    return this.#validTo;\n  }\n\n  /**\n   * The security protocol being used, e.g. \"TLS 1.2\".\n   */\n  protocol(): string {\n    return this.#protocol;\n  }\n\n  /**\n   * The name of the subject to which the certificate was issued.\n   */\n  subjectName(): string {\n    return this.#subjectName;\n  }\n\n  /**\n   * The list of {@link https://en.wikipedia.org/wiki/Subject_Alternative_Name | subject alternative names (SANs)} of the certificate.\n   */\n  subjectAlternativeNames(): string[] {\n    return this.#sanList;\n  }\n}\n", "/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {HTTPRequest} from './HTTPRequest.js';\n\n/**\n * @internal\n */\nexport type QueuedEventGroup = {\n  responseReceivedEvent: Protocol.Network.ResponseReceivedEvent;\n  loadingFinishedEvent?: Protocol.Network.LoadingFinishedEvent;\n  loadingFailedEvent?: Protocol.Network.LoadingFailedEvent;\n};\n\n/**\n * @internal\n */\nexport type FetchRequestId = string;\n\n/**\n * @internal\n */\nexport type RedirectInfo = {\n  event: Protocol.Network.RequestWillBeSentEvent;\n  fetchRequestId?: FetchRequestId;\n};\ntype RedirectInfoList = RedirectInfo[];\n\n/**\n * @internal\n */\nexport type NetworkRequestId = string;\n\n/**\n * Helper class to track network events by request ID\n *\n * @internal\n */\nexport class NetworkEventManager {\n  /**\n   * There are four possible orders of events:\n   * A. `_onRequestWillBeSent`\n   * B. `_onRequestWillBeSent`, `_onRequestPaused`\n   * C. `_onRequestPaused`, `_onRequestWillBeSent`\n   * D. `_onRequestPaused`, `_onRequestWillBeSent`, `_onRequestPaused`,\n   * `_onRequestWillBeSent`, `_onRequestPaused`, `_onRequestPaused`\n   * (see crbug.com/1196004)\n   *\n   * For `_onRequest` we need the event from `_onRequestWillBeSent` and\n   * optionally the `interceptionId` from `_onRequestPaused`.\n   *\n   * If request interception is disabled, call `_onRequest` once per call to\n   * `_onRequestWillBeSent`.\n   * If request interception is enabled, call `_onRequest` once per call to\n   * `_onRequestPaused` (once per `interceptionId`).\n   *\n   * Events are stored to allow for subsequent events to call `_onRequest`.\n   *\n   * Note that (chains of) redirect requests have the same `requestId` (!) as\n   * the original request. We have to anticipate series of events like these:\n   * A. `_onRequestWillBeSent`,\n   * `_onRequestWillBeSent`, ...\n   * B. `_onRequestWillBeSent`, `_onRequestPaused`,\n   * `_onRequestWillBeSent`, `_onRequestPaused`, ...\n   * C. `_onRequestWillBeSent`, `_onRequestPaused`,\n   * `_onRequestPaused`, `_onRequestWillBeSent`, ...\n   * D. `_onRequestPaused`, `_onRequestWillBeSent`,\n   * `_onRequestPaused`, `_onRequestWillBeSent`, `_onRequestPaused`,\n   * `_onRequestWillBeSent`, `_onRequestPaused`, `_onRequestPaused`, ...\n   * (see crbug.com/1196004)\n   */\n  #requestWillBeSentMap = new Map<\n    NetworkRequestId,\n    Protocol.Network.RequestWillBeSentEvent\n  >();\n  #requestPausedMap = new Map<\n    NetworkRequestId,\n    Protocol.Fetch.RequestPausedEvent\n  >();\n  #httpRequestsMap = new Map<NetworkRequestId, HTTPRequest>();\n\n  /*\n   * The below maps are used to reconcile Network.responseReceivedExtraInfo\n   * events with their corresponding request. Each response and redirect\n   * response gets an ExtraInfo event, and we don't know which will come first.\n   * This means that we have to store a Response or an ExtraInfo for each\n   * response, and emit the event when we get both of them. In addition, to\n   * handle redirects, we have to make them Arrays to represent the chain of\n   * events.\n   */\n  #responseReceivedExtraInfoMap = new Map<\n    NetworkRequestId,\n    Protocol.Network.ResponseReceivedExtraInfoEvent[]\n  >();\n  #queuedRedirectInfoMap = new Map<NetworkRequestId, RedirectInfoList>();\n  #queuedEventGroupMap = new Map<NetworkRequestId, QueuedEventGroup>();\n\n  forget(networkRequestId: NetworkRequestId): void {\n    this.#requestWillBeSentMap.delete(networkRequestId);\n    this.#requestPausedMap.delete(networkRequestId);\n    this.#queuedEventGroupMap.delete(networkRequestId);\n    this.#queuedRedirectInfoMap.delete(networkRequestId);\n    this.#responseReceivedExtraInfoMap.delete(networkRequestId);\n  }\n\n  responseExtraInfo(\n    networkRequestId: NetworkRequestId\n  ): Protocol.Network.ResponseReceivedExtraInfoEvent[] {\n    if (!this.#responseReceivedExtraInfoMap.has(networkRequestId)) {\n      this.#responseReceivedExtraInfoMap.set(networkRequestId, []);\n    }\n    return this.#responseReceivedExtraInfoMap.get(\n      networkRequestId\n    ) as Protocol.Network.ResponseReceivedExtraInfoEvent[];\n  }\n\n  private queuedRedirectInfo(fetchRequestId: FetchRequestId): RedirectInfoList {\n    if (!this.#queuedRedirectInfoMap.has(fetchRequestId)) {\n      this.#queuedRedirectInfoMap.set(fetchRequestId, []);\n    }\n    return this.#queuedRedirectInfoMap.get(fetchRequestId) as RedirectInfoList;\n  }\n\n  queueRedirectInfo(\n    fetchRequestId: FetchRequestId,\n    redirectInfo: RedirectInfo\n  ): void {\n    this.queuedRedirectInfo(fetchRequestId).push(redirectInfo);\n  }\n\n  takeQueuedRedirectInfo(\n    fetchRequestId: FetchRequestId\n  ): RedirectInfo | undefined {\n    return this.queuedRedirectInfo(fetchRequestId).shift();\n  }\n\n  inFlightRequestsCount(): number {\n    let inFlightRequestCounter = 0;\n    for (const request of this.#httpRequestsMap.values()) {\n      if (!request.response()) {\n        inFlightRequestCounter++;\n      }\n    }\n    return inFlightRequestCounter;\n  }\n\n  storeRequestWillBeSent(\n    networkRequestId: NetworkRequestId,\n    event: Protocol.Network.RequestWillBeSentEvent\n  ): void {\n    this.#requestWillBeSentMap.set(networkRequestId, event);\n  }\n\n  getRequestWillBeSent(\n    networkRequestId: NetworkRequestId\n  ): Protocol.Network.RequestWillBeSentEvent | undefined {\n    return this.#requestWillBeSentMap.get(networkRequestId);\n  }\n\n  forgetRequestWillBeSent(networkRequestId: NetworkRequestId): void {\n    this.#requestWillBeSentMap.delete(networkRequestId);\n  }\n\n  getRequestPaused(\n    networkRequestId: NetworkRequestId\n  ): Protocol.Fetch.RequestPausedEvent | undefined {\n    return this.#requestPausedMap.get(networkRequestId);\n  }\n\n  forgetRequestPaused(networkRequestId: NetworkRequestId): void {\n    this.#requestPausedMap.delete(networkRequestId);\n  }\n\n  storeRequestPaused(\n    networkRequestId: NetworkRequestId,\n    event: Protocol.Fetch.RequestPausedEvent\n  ): void {\n    this.#requestPausedMap.set(networkRequestId, event);\n  }\n\n  getRequest(networkRequestId: NetworkRequestId): HTTPRequest | undefined {\n    return this.#httpRequestsMap.get(networkRequestId);\n  }\n\n  storeRequest(networkRequestId: NetworkRequestId, request: HTTPRequest): void {\n    this.#httpRequestsMap.set(networkRequestId, request);\n  }\n\n  forgetRequest(networkRequestId: NetworkRequestId): void {\n    this.#httpRequestsMap.delete(networkRequestId);\n  }\n\n  getQueuedEventGroup(\n    networkRequestId: NetworkRequestId\n  ): QueuedEventGroup | undefined {\n    return this.#queuedEventGroupMap.get(networkRequestId);\n  }\n\n  queueEventGroup(\n    networkRequestId: NetworkRequestId,\n    event: QueuedEventGroup\n  ): void {\n    this.#queuedEventGroupMap.set(networkRequestId, event);\n  }\n\n  forgetQueuedEventGroup(networkRequestId: NetworkRequestId): void {\n    this.#queuedEventGroupMap.delete(networkRequestId);\n  }\n}\n", "/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Protocol} from 'devtools-protocol';\n\nimport {Frame} from '../api/Frame.js';\nimport {\n  ContinueRequestOverrides,\n  ErrorCode,\n  headersArray,\n  HTTPRequest as BaseHTTPRequest,\n  InterceptResolutionAction,\n  InterceptResolutionState,\n  ResourceType,\n  ResponseForRequest,\n  STATUS_TEXTS,\n} from '../api/HTTPRequest.js';\nimport {HTTPResponse} from '../api/HTTPResponse.js';\nimport {assert} from '../util/assert.js';\n\nimport {CDPSession} from './Connection.js';\nimport {ProtocolError} from './Errors.js';\nimport {debugError, isString} from './util.js';\n\n/**\n * @internal\n */\nexport class HTTPRequest extends BaseHTTPRequest {\n  override _requestId: string;\n  override _interceptionId: string | undefined;\n  override _failureText: string | null = null;\n  override _response: HTTPResponse | null = null;\n  override _fromMemoryCache = false;\n  override _redirectChain: HTTPRequest[];\n\n  #client: CDPSession;\n  #isNavigationRequest: boolean;\n  #allowInterception: boolean;\n  #interceptionHandled = false;\n  #url: string;\n  #resourceType: ResourceType;\n\n  #method: string;\n  #postData?: string;\n  #headers: Record<string, string> = {};\n  #frame: Frame | null;\n  #continueRequestOverrides: ContinueRequestOverrides;\n  #responseForRequest: Partial<ResponseForRequest> | null = null;\n  #abortErrorReason: Protocol.Network.ErrorReason | null = null;\n  #interceptResolutionState: InterceptResolutionState = {\n    action: InterceptResolutionAction.None,\n  };\n  #interceptHandlers: Array<() => void | PromiseLike<any>>;\n  #initiator?: Protocol.Network.Initiator;\n\n  override get client(): CDPSession {\n    return this.#client;\n  }\n\n  constructor(\n    client: CDPSession,\n    frame: Frame | null,\n    interceptionId: string | undefined,\n    allowInterception: boolean,\n    data: {\n      /**\n       * Request identifier.\n       */\n      requestId: Protocol.Network.RequestId;\n      /**\n       * Loader identifier. Empty string if the request is fetched from worker.\n       */\n      loaderId?: Protocol.Network.LoaderId;\n      /**\n       * URL of the document this request is loaded for.\n       */\n      documentURL?: string;\n      /**\n       * Request data.\n       */\n      request: Protocol.Network.Request;\n      /**\n       * Request initiator.\n       */\n      initiator?: Protocol.Network.Initiator;\n      /**\n       * Type of this resource.\n       */\n      type?: Protocol.Network.ResourceType;\n    },\n    redirectChain: HTTPRequest[]\n  ) {\n    super();\n    this.#client = client;\n    this._requestId = data.requestId;\n    this.#isNavigationRequest =\n      data.requestId === data.loaderId && data.type === 'Document';\n    this._interceptionId = interceptionId;\n    this.#allowInterception = allowInterception;\n    this.#url = data.request.url;\n    this.#resourceType = (data.type || 'other').toLowerCase() as ResourceType;\n    this.#method = data.request.method;\n    this.#postData = data.request.postData;\n    this.#frame = frame;\n    this._redirectChain = redirectChain;\n    this.#continueRequestOverrides = {};\n    this.#interceptHandlers = [];\n    this.#initiator = data.initiator;\n\n    for (const [key, value] of Object.entries(data.request.headers)) {\n      this.#headers[key.toLowerCase()] = value;\n    }\n  }\n\n  override url(): string {\n    return this.#url;\n  }\n\n  override continueRequestOverrides(): ContinueRequestOverrides {\n    assert(this.#allowInterception, 'Request Interception is not enabled!');\n    return this.#continueRequestOverrides;\n  }\n\n  override responseForRequest(): Partial<ResponseForRequest> | null {\n    assert(this.#allowInterception, 'Request Interception is not enabled!');\n    return this.#responseForRequest;\n  }\n\n  override abortErrorReason(): Protocol.Network.ErrorReason | null {\n    assert(this.#allowInterception, 'Request Interception is not enabled!');\n    return this.#abortErrorReason;\n  }\n\n  override interceptResolutionState(): InterceptResolutionState {\n    if (!this.#allowInterception) {\n      return {action: InterceptResolutionAction.Disabled};\n    }\n    if (this.#interceptionHandled) {\n      return {action: InterceptResolutionAction.AlreadyHandled};\n    }\n    return {...this.#interceptResolutionState};\n  }\n\n  override isInterceptResolutionHandled(): boolean {\n    return this.#interceptionHandled;\n  }\n\n  override enqueueInterceptAction(\n    pendingHandler: () => void | PromiseLike<unknown>\n  ): void {\n    this.#interceptHandlers.push(pendingHandler);\n  }\n\n  override async finalizeInterceptions(): Promise<void> {\n    await this.#interceptHandlers.reduce((promiseChain, interceptAction) => {\n      return promiseChain.then(interceptAction);\n    }, Promise.resolve());\n    const {action} = this.interceptResolutionState();\n    switch (action) {\n      case 'abort':\n        return this.#abort(this.#abortErrorReason);\n      case 'respond':\n        if (this.#responseForRequest === null) {\n          throw new Error('Response is missing for the interception');\n        }\n        return this.#respond(this.#responseForRequest);\n      case 'continue':\n        return this.#continue(this.#continueRequestOverrides);\n    }\n  }\n\n  override resourceType(): ResourceType {\n    return this.#resourceType;\n  }\n\n  override method(): string {\n    return this.#method;\n  }\n\n  override postData(): string | undefined {\n    return this.#postData;\n  }\n\n  override headers(): Record<string, string> {\n    return this.#headers;\n  }\n\n  override response(): HTTPResponse | null {\n    return this._response;\n  }\n\n  override frame(): Frame | null {\n    return this.#frame;\n  }\n\n  override isNavigationRequest(): boolean {\n    return this.#isNavigationRequest;\n  }\n\n  override initiator(): Protocol.Network.Initiator | undefined {\n    return this.#initiator;\n  }\n\n  override redirectChain(): HTTPRequest[] {\n    return this._redirectChain.slice();\n  }\n\n  override failure(): {errorText: string} | null {\n    if (!this._failureText) {\n      return null;\n    }\n    return {\n      errorText: this._failureText,\n    };\n  }\n\n  override async continue(\n    overrides: ContinueRequestOverrides = {},\n    priority?: number\n  ): Promise<void> {\n    // Request interception is not supported for data: urls.\n    if (this.#url.startsWith('data:')) {\n      return;\n    }\n    assert(this.#allowInterception, 'Request Interception is not enabled!');\n    assert(!this.#interceptionHandled, 'Request is already handled!');\n    if (priority === undefined) {\n      return this.#continue(overrides);\n    }\n    this.#continueRequestOverrides = overrides;\n    if (\n      this.#interceptResolutionState.priority === undefined ||\n      priority > this.#interceptResolutionState.priority\n    ) {\n      this.#interceptResolutionState = {\n        action: InterceptResolutionAction.Continue,\n        priority,\n      };\n      return;\n    }\n    if (priority === this.#interceptResolutionState.priority) {\n      if (\n        this.#interceptResolutionState.action === 'abort' ||\n        this.#interceptResolutionState.action === 'respond'\n      ) {\n        return;\n      }\n      this.#interceptResolutionState.action =\n        InterceptResolutionAction.Continue;\n    }\n    return;\n  }\n\n  async #continue(overrides: ContinueRequestOverrides = {}): Promise<void> {\n    const {url, method, postData, headers} = overrides;\n    this.#interceptionHandled = true;\n\n    const postDataBinaryBase64 = postData\n      ? Buffer.from(postData).toString('base64')\n      : undefined;\n\n    if (this._interceptionId === undefined) {\n      throw new Error(\n        'HTTPRequest is missing _interceptionId needed for Fetch.continueRequest'\n      );\n    }\n    await this.#client\n      .send('Fetch.continueRequest', {\n        requestId: this._interceptionId,\n        url,\n        method,\n        postData: postDataBinaryBase64,\n        headers: headers ? headersArray(headers) : undefined,\n      })\n      .catch(error => {\n        this.#interceptionHandled = false;\n        return handleError(error);\n      });\n  }\n\n  override async respond(\n    response: Partial<ResponseForRequest>,\n    priority?: number\n  ): Promise<void> {\n    // Mocking responses for dataURL requests is not currently supported.\n    if (this.#url.startsWith('data:')) {\n      return;\n    }\n    assert(this.#allowInterception, 'Request Interception is not enabled!');\n    assert(!this.#interceptionHandled, 'Request is already handled!');\n    if (priority === undefined) {\n      return this.#respond(response);\n    }\n    this.#responseForRequest = response;\n    if (\n      this.#interceptResolutionState.priority === undefined ||\n      priority > this.#interceptResolutionState.priority\n    ) {\n      this.#interceptResolutionState = {\n        action: InterceptResolutionAction.Respond,\n        priority,\n      };\n      return;\n    }\n    if (priority === this.#interceptResolutionState.priority) {\n      if (this.#interceptResolutionState.action === 'abort') {\n        return;\n      }\n      this.#interceptResolutionState.action = InterceptResolutionAction.Respond;\n    }\n  }\n\n  async #respond(response: Partial<ResponseForRequest>): Promise<void> {\n    this.#interceptionHandled = true;\n\n    const responseBody: Buffer | null =\n      response.body && isString(response.body)\n        ? Buffer.from(response.body)\n        : (response.body as Buffer) || null;\n\n    const responseHeaders: Record<string, string | string[]> = {};\n    if (response.headers) {\n      for (const header of Object.keys(response.headers)) {\n        const value = response.headers[header];\n\n        responseHeaders[header.toLowerCase()] = Array.isArray(value)\n          ? value.map(item => {\n              return String(item);\n            })\n          : String(value);\n      }\n    }\n    if (response.contentType) {\n      responseHeaders['content-type'] = response.contentType;\n    }\n    if (responseBody && !('content-length' in responseHeaders)) {\n      responseHeaders['content-length'] = String(\n        Buffer.byteLength(responseBody)\n      );\n    }\n\n    const status = response.status || 200;\n    if (this._interceptionId === undefined) {\n      throw new Error(\n        'HTTPRequest is missing _interceptionId needed for Fetch.fulfillRequest'\n      );\n    }\n    await this.#client\n      .send('Fetch.fulfillRequest', {\n        requestId: this._interceptionId,\n        responseCode: status,\n        responsePhrase: STATUS_TEXTS[status],\n        responseHeaders: headersArray(responseHeaders),\n        body: responseBody ? responseBody.toString('base64') : undefined,\n      })\n      .catch(error => {\n        this.#interceptionHandled = false;\n        return handleError(error);\n      });\n  }\n\n  override async abort(\n    errorCode: ErrorCode = 'failed',\n    priority?: number\n  ): Promise<void> {\n    // Request interception is not supported for data: urls.\n    if (this.#url.startsWith('data:')) {\n      return;\n    }\n    const errorReason = errorReasons[errorCode];\n    assert(errorReason, 'Unknown error code: ' + errorCode);\n    assert(this.#allowInterception, 'Request Interception is not enabled!');\n    assert(!this.#interceptionHandled, 'Request is already handled!');\n    if (priority === undefined) {\n      return this.#abort(errorReason);\n    }\n    this.#abortErrorReason = errorReason;\n    if (\n      this.#interceptResolutionState.priority === undefined ||\n      priority >= this.#interceptResolutionState.priority\n    ) {\n      this.#interceptResolutionState = {\n        action: InterceptResolutionAction.Abort,\n        priority,\n      };\n      return;\n    }\n  }\n\n  async #abort(\n    errorReason: Protocol.Network.ErrorReason | null\n  ): Promise<void> {\n    this.#interceptionHandled = true;\n    if (this._interceptionId === undefined) {\n      throw new Error(\n        'HTTPRequest is missing _interceptionId needed for Fetch.failRequest'\n      );\n    }\n    await this.#client\n      .send('Fetch.failRequest', {\n        requestId: this._interceptionId,\n        errorReason: errorReason || 'Failed',\n      })\n      .catch(handleError);\n  }\n}\n\nconst errorReasons: Record<ErrorCode, Protocol.Network.ErrorReason> = {\n  aborted: 'Aborted',\n  accessdenied: 'AccessDenied',\n  addressunreachable: 'AddressUnreachable',\n  blockedbyclient: 'BlockedByClient',\n  blockedbyresponse: 'BlockedByResponse',\n  connectionaborted: 'ConnectionAborted',\n  connectionclosed: 'ConnectionClosed',\n  connectionfailed: 'ConnectionFailed',\n  connectionrefused: 'ConnectionRefused',\n  connectionreset: 'ConnectionReset',\n  internetdisconnected: 'InternetDisconnected',\n  namenotresolved: 'NameNotResolved',\n  timedout: 'TimedOut',\n  failed: 'Failed',\n} as const;\n\nasync function handleError(error: ProtocolError) {\n  if (['Invalid header'].includes(error.originalMessage)) {\n    throw error;\n  }\n  // In certain cases, protocol will return error if the request was\n  // already canceled or the page was closed. We should tolerate these\n  // errors.\n  debugError(error);\n}\n", "/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Protocol} from 'devtools-protocol';\n\nimport {Frame} from '../api/Frame.js';\nimport {\n  HTTPResponse as BaseHTTPResponse,\n  RemoteAddress,\n} from '../api/HTTPResponse.js';\nimport {Deferred} from '../util/Deferred.js';\n\nimport {CDPSession} from './Connection.js';\nimport {ProtocolError} from './Errors.js';\nimport {HTTPRequest} from './HTTPRequest.js';\nimport {SecurityDetails} from './SecurityDetails.js';\n\n/**\n * @internal\n */\nexport class HTTPResponse extends BaseHTTPResponse {\n  #client: CDPSession;\n  #request: HTTPRequest;\n  #contentPromise: Promise<Buffer> | null = null;\n  #bodyLoadedDeferred = Deferred.create<Error | void>();\n  #remoteAddress: RemoteAddress;\n  #status: number;\n  #statusText: string;\n  #url: string;\n  #fromDiskCache: boolean;\n  #fromServiceWorker: boolean;\n  #headers: Record<string, string> = {};\n  #securityDetails: SecurityDetails | null;\n  #timing: Protocol.Network.ResourceTiming | null;\n\n  constructor(\n    client: CDPSession,\n    request: HTTPRequest,\n    responsePayload: Protocol.Network.Response,\n    extraInfo: Protocol.Network.ResponseReceivedExtraInfoEvent | null\n  ) {\n    super();\n    this.#client = client;\n    this.#request = request;\n\n    this.#remoteAddress = {\n      ip: responsePayload.remoteIPAddress,\n      port: responsePayload.remotePort,\n    };\n    this.#statusText =\n      this.#parseStatusTextFromExtrInfo(extraInfo) ||\n      responsePayload.statusText;\n    this.#url = request.url();\n    this.#fromDiskCache = !!responsePayload.fromDiskCache;\n    this.#fromServiceWorker = !!responsePayload.fromServiceWorker;\n\n    this.#status = extraInfo ? extraInfo.statusCode : responsePayload.status;\n    const headers = extraInfo ? extraInfo.headers : responsePayload.headers;\n    for (const [key, value] of Object.entries(headers)) {\n      this.#headers[key.toLowerCase()] = value;\n    }\n\n    this.#securityDetails = responsePayload.securityDetails\n      ? new SecurityDetails(responsePayload.securityDetails)\n      : null;\n    this.#timing = responsePayload.timing || null;\n  }\n\n  #parseStatusTextFromExtrInfo(\n    extraInfo: Protocol.Network.ResponseReceivedExtraInfoEvent | null\n  ): string | undefined {\n    if (!extraInfo || !extraInfo.headersText) {\n      return;\n    }\n    const firstLine = extraInfo.headersText.split('\\r', 1)[0];\n    if (!firstLine) {\n      return;\n    }\n    const match = firstLine.match(/[^ ]* [^ ]* (.*)/);\n    if (!match) {\n      return;\n    }\n    const statusText = match[1];\n    if (!statusText) {\n      return;\n    }\n    return statusText;\n  }\n\n  override _resolveBody(err: Error | null): void {\n    if (err) {\n      return this.#bodyLoadedDeferred.resolve(err);\n    }\n    return this.#bodyLoadedDeferred.resolve();\n  }\n\n  override remoteAddress(): RemoteAddress {\n    return this.#remoteAddress;\n  }\n\n  override url(): string {\n    return this.#url;\n  }\n\n  override status(): number {\n    return this.#status;\n  }\n\n  override statusText(): string {\n    return this.#statusText;\n  }\n\n  override headers(): Record<string, string> {\n    return this.#headers;\n  }\n\n  override securityDetails(): SecurityDetails | null {\n    return this.#securityDetails;\n  }\n\n  override timing(): Protocol.Network.ResourceTiming | null {\n    return this.#timing;\n  }\n\n  override buffer(): Promise<Buffer> {\n    if (!this.#contentPromise) {\n      this.#contentPromise = this.#bodyLoadedDeferred\n        .valueOrThrow()\n        .then(async error => {\n          if (error) {\n            throw error;\n          }\n          try {\n            const response = await this.#client.send(\n              'Network.getResponseBody',\n              {\n                requestId: this.#request._requestId,\n              }\n            );\n            return Buffer.from(\n              response.body,\n              response.base64Encoded ? 'base64' : 'utf8'\n            );\n          } catch (error) {\n            if (\n              error instanceof ProtocolError &&\n              error.originalMessage ===\n                'No resource with given identifier found'\n            ) {\n              throw new ProtocolError(\n                'Could not load body for this request. This might happen if the request is a preflight request.'\n              );\n            }\n\n            throw error;\n          }\n        });\n    }\n    return this.#contentPromise;\n  }\n\n  override request(): HTTPRequest {\n    return this.#request;\n  }\n\n  override fromCache(): boolean {\n    return this.#fromDiskCache || this.#request._fromMemoryCache;\n  }\n\n  override fromServiceWorker(): boolean {\n    return this.#fromServiceWorker;\n  }\n\n  override frame(): Frame | null {\n    return this.#request.frame();\n  }\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {assert} from '../util/assert.js';\nimport {createDebuggableDeferred} from '../util/DebuggableDeferred.js';\nimport {Deferred} from '../util/Deferred.js';\n\nimport {CDPSession} from './Connection.js';\nimport {EventEmitter} from './EventEmitter.js';\nimport {FrameManager} from './FrameManager.js';\nimport {HTTPRequest} from './HTTPRequest.js';\nimport {HTTPResponse} from './HTTPResponse.js';\nimport {FetchRequestId, NetworkEventManager} from './NetworkEventManager.js';\nimport {debugError, isString} from './util.js';\n\n/**\n * @public\n */\nexport interface Credentials {\n  username: string;\n  password: string;\n}\n\n/**\n * @public\n */\nexport interface NetworkConditions {\n  // Download speed (bytes/s)\n  download: number;\n  // Upload speed (bytes/s)\n  upload: number;\n  // Latency (ms)\n  latency: number;\n}\n/**\n * @public\n */\nexport interface InternalNetworkConditions extends NetworkConditions {\n  offline: boolean;\n}\n\n/**\n * We use symbols to prevent any external parties listening to these events.\n * They are internal to Puppeteer.\n *\n * @internal\n */\nexport const NetworkManagerEmittedEvents = {\n  Request: Symbol('NetworkManager.Request'),\n  RequestServedFromCache: Symbol('NetworkManager.RequestServedFromCache'),\n  Response: Symbol('NetworkManager.Response'),\n  RequestFailed: Symbol('NetworkManager.RequestFailed'),\n  RequestFinished: Symbol('NetworkManager.RequestFinished'),\n} as const;\n\n/**\n * @internal\n */\nexport class NetworkManager extends EventEmitter {\n  #client: CDPSession;\n  #ignoreHTTPSErrors: boolean;\n  #frameManager: Pick<FrameManager, 'frame'>;\n  #networkEventManager = new NetworkEventManager();\n  #extraHTTPHeaders: Record<string, string> = {};\n  #credentials?: Credentials;\n  #attemptedAuthentications = new Set<string>();\n  #userRequestInterceptionEnabled = false;\n  #protocolRequestInterceptionEnabled = false;\n  #userCacheDisabled = false;\n  #emulatedNetworkConditions: InternalNetworkConditions = {\n    offline: false,\n    upload: -1,\n    download: -1,\n    latency: 0,\n  };\n  #deferredInit?: Deferred<void>;\n\n  constructor(\n    client: CDPSession,\n    ignoreHTTPSErrors: boolean,\n    frameManager: Pick<FrameManager, 'frame'>\n  ) {\n    super();\n    this.#client = client;\n    this.#ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this.#frameManager = frameManager;\n\n    this.#client.on('Fetch.requestPaused', this.#onRequestPaused.bind(this));\n    this.#client.on('Fetch.authRequired', this.#onAuthRequired.bind(this));\n    this.#client.on(\n      'Network.requestWillBeSent',\n      this.#onRequestWillBeSent.bind(this)\n    );\n    this.#client.on(\n      'Network.requestServedFromCache',\n      this.#onRequestServedFromCache.bind(this)\n    );\n    this.#client.on(\n      'Network.responseReceived',\n      this.#onResponseReceived.bind(this)\n    );\n    this.#client.on(\n      'Network.loadingFinished',\n      this.#onLoadingFinished.bind(this)\n    );\n    this.#client.on('Network.loadingFailed', this.#onLoadingFailed.bind(this));\n    this.#client.on(\n      'Network.responseReceivedExtraInfo',\n      this.#onResponseReceivedExtraInfo.bind(this)\n    );\n  }\n\n  /**\n   * Initialize calls should avoid async dependencies between CDP calls as those\n   * might not resolve until after the target is resumed causing a deadlock.\n   */\n  initialize(): Promise<void> {\n    if (this.#deferredInit) {\n      return this.#deferredInit.valueOrThrow();\n    }\n    this.#deferredInit = createDebuggableDeferred(\n      'NetworkManager initialization timed out'\n    );\n    const init = Promise.all([\n      this.#ignoreHTTPSErrors\n        ? this.#client.send('Security.setIgnoreCertificateErrors', {\n            ignore: true,\n          })\n        : null,\n      this.#client.send('Network.enable'),\n    ]);\n    const deferredInitPromise = this.#deferredInit;\n    init\n      .then(() => {\n        deferredInitPromise.resolve();\n      })\n      .catch(err => {\n        deferredInitPromise.reject(err);\n      });\n    return this.#deferredInit.valueOrThrow();\n  }\n\n  async authenticate(credentials?: Credentials): Promise<void> {\n    this.#credentials = credentials;\n    await this.#updateProtocolRequestInterception();\n  }\n\n  async setExtraHTTPHeaders(\n    extraHTTPHeaders: Record<string, string>\n  ): Promise<void> {\n    this.#extraHTTPHeaders = {};\n    for (const key of Object.keys(extraHTTPHeaders)) {\n      const value = extraHTTPHeaders[key];\n      assert(\n        isString(value),\n        `Expected value of header \"${key}\" to be String, but \"${typeof value}\" is found.`\n      );\n      this.#extraHTTPHeaders[key.toLowerCase()] = value;\n    }\n    await this.#client.send('Network.setExtraHTTPHeaders', {\n      headers: this.#extraHTTPHeaders,\n    });\n  }\n\n  extraHTTPHeaders(): Record<string, string> {\n    return Object.assign({}, this.#extraHTTPHeaders);\n  }\n\n  inFlightRequestsCount(): number {\n    return this.#networkEventManager.inFlightRequestsCount();\n  }\n\n  async setOfflineMode(value: boolean): Promise<void> {\n    this.#emulatedNetworkConditions.offline = value;\n    await this.#updateNetworkConditions();\n  }\n\n  async emulateNetworkConditions(\n    networkConditions: NetworkConditions | null\n  ): Promise<void> {\n    this.#emulatedNetworkConditions.upload = networkConditions\n      ? networkConditions.upload\n      : -1;\n    this.#emulatedNetworkConditions.download = networkConditions\n      ? networkConditions.download\n      : -1;\n    this.#emulatedNetworkConditions.latency = networkConditions\n      ? networkConditions.latency\n      : 0;\n\n    await this.#updateNetworkConditions();\n  }\n\n  async #updateNetworkConditions(): Promise<void> {\n    await this.#client.send('Network.emulateNetworkConditions', {\n      offline: this.#emulatedNetworkConditions.offline,\n      latency: this.#emulatedNetworkConditions.latency,\n      uploadThroughput: this.#emulatedNetworkConditions.upload,\n      downloadThroughput: this.#emulatedNetworkConditions.download,\n    });\n  }\n\n  async setUserAgent(\n    userAgent: string,\n    userAgentMetadata?: Protocol.Emulation.UserAgentMetadata\n  ): Promise<void> {\n    await this.#client.send('Network.setUserAgentOverride', {\n      userAgent: userAgent,\n      userAgentMetadata: userAgentMetadata,\n    });\n  }\n\n  async setCacheEnabled(enabled: boolean): Promise<void> {\n    this.#userCacheDisabled = !enabled;\n    await this.#updateProtocolCacheDisabled();\n  }\n\n  async setRequestInterception(value: boolean): Promise<void> {\n    this.#userRequestInterceptionEnabled = value;\n    await this.#updateProtocolRequestInterception();\n  }\n\n  async #updateProtocolRequestInterception(): Promise<void> {\n    const enabled = this.#userRequestInterceptionEnabled || !!this.#credentials;\n    if (enabled === this.#protocolRequestInterceptionEnabled) {\n      return;\n    }\n    this.#protocolRequestInterceptionEnabled = enabled;\n    if (enabled) {\n      await Promise.all([\n        this.#updateProtocolCacheDisabled(),\n        this.#client.send('Fetch.enable', {\n          handleAuthRequests: true,\n          patterns: [{urlPattern: '*'}],\n        }),\n      ]);\n    } else {\n      await Promise.all([\n        this.#updateProtocolCacheDisabled(),\n        this.#client.send('Fetch.disable'),\n      ]);\n    }\n  }\n\n  #cacheDisabled(): boolean {\n    return this.#userCacheDisabled;\n  }\n\n  async #updateProtocolCacheDisabled(): Promise<void> {\n    await this.#client.send('Network.setCacheDisabled', {\n      cacheDisabled: this.#cacheDisabled(),\n    });\n  }\n\n  #onRequestWillBeSent(event: Protocol.Network.RequestWillBeSentEvent): void {\n    // Request interception doesn't happen for data URLs with Network Service.\n    if (\n      this.#userRequestInterceptionEnabled &&\n      !event.request.url.startsWith('data:')\n    ) {\n      const {requestId: networkRequestId} = event;\n\n      this.#networkEventManager.storeRequestWillBeSent(networkRequestId, event);\n\n      /**\n       * CDP may have sent a Fetch.requestPaused event already. Check for it.\n       */\n      const requestPausedEvent =\n        this.#networkEventManager.getRequestPaused(networkRequestId);\n      if (requestPausedEvent) {\n        const {requestId: fetchRequestId} = requestPausedEvent;\n        this.#patchRequestEventHeaders(event, requestPausedEvent);\n        this.#onRequest(event, fetchRequestId);\n        this.#networkEventManager.forgetRequestPaused(networkRequestId);\n      }\n\n      return;\n    }\n    this.#onRequest(event, undefined);\n  }\n\n  #onAuthRequired(event: Protocol.Fetch.AuthRequiredEvent): void {\n    let response: Protocol.Fetch.AuthChallengeResponse['response'] = 'Default';\n    if (this.#attemptedAuthentications.has(event.requestId)) {\n      response = 'CancelAuth';\n    } else if (this.#credentials) {\n      response = 'ProvideCredentials';\n      this.#attemptedAuthentications.add(event.requestId);\n    }\n    const {username, password} = this.#credentials || {\n      username: undefined,\n      password: undefined,\n    };\n    this.#client\n      .send('Fetch.continueWithAuth', {\n        requestId: event.requestId,\n        authChallengeResponse: {response, username, password},\n      })\n      .catch(debugError);\n  }\n\n  /**\n   * CDP may send a Fetch.requestPaused without or before a\n   * Network.requestWillBeSent\n   *\n   * CDP may send multiple Fetch.requestPaused\n   * for the same Network.requestWillBeSent.\n   */\n  #onRequestPaused(event: Protocol.Fetch.RequestPausedEvent): void {\n    if (\n      !this.#userRequestInterceptionEnabled &&\n      this.#protocolRequestInterceptionEnabled\n    ) {\n      this.#client\n        .send('Fetch.continueRequest', {\n          requestId: event.requestId,\n        })\n        .catch(debugError);\n    }\n\n    const {networkId: networkRequestId, requestId: fetchRequestId} = event;\n\n    if (!networkRequestId) {\n      this.#onRequestWithoutNetworkInstrumentation(event);\n      return;\n    }\n\n    const requestWillBeSentEvent = (() => {\n      const requestWillBeSentEvent =\n        this.#networkEventManager.getRequestWillBeSent(networkRequestId);\n\n      // redirect requests have the same `requestId`,\n      if (\n        requestWillBeSentEvent &&\n        (requestWillBeSentEvent.request.url !== event.request.url ||\n          requestWillBeSentEvent.request.method !== event.request.method)\n      ) {\n        this.#networkEventManager.forgetRequestWillBeSent(networkRequestId);\n        return;\n      }\n      return requestWillBeSentEvent;\n    })();\n\n    if (requestWillBeSentEvent) {\n      this.#patchRequestEventHeaders(requestWillBeSentEvent, event);\n      this.#onRequest(requestWillBeSentEvent, fetchRequestId);\n    } else {\n      this.#networkEventManager.storeRequestPaused(networkRequestId, event);\n    }\n  }\n\n  #patchRequestEventHeaders(\n    requestWillBeSentEvent: Protocol.Network.RequestWillBeSentEvent,\n    requestPausedEvent: Protocol.Fetch.RequestPausedEvent\n  ): void {\n    requestWillBeSentEvent.request.headers = {\n      ...requestWillBeSentEvent.request.headers,\n      // includes extra headers, like: Accept, Origin\n      ...requestPausedEvent.request.headers,\n    };\n  }\n\n  #onRequestWithoutNetworkInstrumentation(\n    event: Protocol.Fetch.RequestPausedEvent\n  ): void {\n    // If an event has no networkId it should not have any network events. We\n    // still want to dispatch it for the interception by the user.\n    const frame = event.frameId\n      ? this.#frameManager.frame(event.frameId)\n      : null;\n\n    const request = new HTTPRequest(\n      this.#client,\n      frame,\n      event.requestId,\n      this.#userRequestInterceptionEnabled,\n      event,\n      []\n    );\n    this.emit(NetworkManagerEmittedEvents.Request, request);\n    void request.finalizeInterceptions();\n  }\n\n  #onRequest(\n    event: Protocol.Network.RequestWillBeSentEvent,\n    fetchRequestId?: FetchRequestId\n  ): void {\n    let redirectChain: HTTPRequest[] = [];\n    if (event.redirectResponse) {\n      // We want to emit a response and requestfinished for the\n      // redirectResponse, but we can't do so unless we have a\n      // responseExtraInfo ready to pair it up with. If we don't have any\n      // responseExtraInfos saved in our queue, they we have to wait until\n      // the next one to emit response and requestfinished, *and* we should\n      // also wait to emit this Request too because it should come after the\n      // response/requestfinished.\n      let redirectResponseExtraInfo = null;\n      if (event.redirectHasExtraInfo) {\n        redirectResponseExtraInfo = this.#networkEventManager\n          .responseExtraInfo(event.requestId)\n          .shift();\n        if (!redirectResponseExtraInfo) {\n          this.#networkEventManager.queueRedirectInfo(event.requestId, {\n            event,\n            fetchRequestId,\n          });\n          return;\n        }\n      }\n\n      const request = this.#networkEventManager.getRequest(event.requestId);\n      // If we connect late to the target, we could have missed the\n      // requestWillBeSent event.\n      if (request) {\n        this.#handleRequestRedirect(\n          request,\n          event.redirectResponse,\n          redirectResponseExtraInfo\n        );\n        redirectChain = request._redirectChain;\n      }\n    }\n    const frame = event.frameId\n      ? this.#frameManager.frame(event.frameId)\n      : null;\n\n    const request = new HTTPRequest(\n      this.#client,\n      frame,\n      fetchRequestId,\n      this.#userRequestInterceptionEnabled,\n      event,\n      redirectChain\n    );\n    this.#networkEventManager.storeRequest(event.requestId, request);\n    this.emit(NetworkManagerEmittedEvents.Request, request);\n    void request.finalizeInterceptions();\n  }\n\n  #onRequestServedFromCache(\n    event: Protocol.Network.RequestServedFromCacheEvent\n  ): void {\n    const request = this.#networkEventManager.getRequest(event.requestId);\n    if (request) {\n      request._fromMemoryCache = true;\n    }\n    this.emit(NetworkManagerEmittedEvents.RequestServedFromCache, request);\n  }\n\n  #handleRequestRedirect(\n    request: HTTPRequest,\n    responsePayload: Protocol.Network.Response,\n    extraInfo: Protocol.Network.ResponseReceivedExtraInfoEvent | null\n  ): void {\n    const response = new HTTPResponse(\n      this.#client,\n      request,\n      responsePayload,\n      extraInfo\n    );\n    request._response = response;\n    request._redirectChain.push(request);\n    response._resolveBody(\n      new Error('Response body is unavailable for redirect responses')\n    );\n    this.#forgetRequest(request, false);\n    this.emit(NetworkManagerEmittedEvents.Response, response);\n    this.emit(NetworkManagerEmittedEvents.RequestFinished, request);\n  }\n\n  #emitResponseEvent(\n    responseReceived: Protocol.Network.ResponseReceivedEvent,\n    extraInfo: Protocol.Network.ResponseReceivedExtraInfoEvent | null\n  ): void {\n    const request = this.#networkEventManager.getRequest(\n      responseReceived.requestId\n    );\n    // FileUpload sends a response without a matching request.\n    if (!request) {\n      return;\n    }\n\n    const extraInfos = this.#networkEventManager.responseExtraInfo(\n      responseReceived.requestId\n    );\n    if (extraInfos.length) {\n      debugError(\n        new Error(\n          'Unexpected extraInfo events for request ' +\n            responseReceived.requestId\n        )\n      );\n    }\n\n    // Chromium sends wrong extraInfo events for responses served from cache.\n    // See https://github.com/puppeteer/puppeteer/issues/9965 and\n    // https://crbug.com/1340398.\n    if (responseReceived.response.fromDiskCache) {\n      extraInfo = null;\n    }\n\n    const response = new HTTPResponse(\n      this.#client,\n      request,\n      responseReceived.response,\n      extraInfo\n    );\n    request._response = response;\n    this.emit(NetworkManagerEmittedEvents.Response, response);\n  }\n\n  #onResponseReceived(event: Protocol.Network.ResponseReceivedEvent): void {\n    const request = this.#networkEventManager.getRequest(event.requestId);\n    let extraInfo = null;\n    if (request && !request._fromMemoryCache && event.hasExtraInfo) {\n      extraInfo = this.#networkEventManager\n        .responseExtraInfo(event.requestId)\n        .shift();\n      if (!extraInfo) {\n        // Wait until we get the corresponding ExtraInfo event.\n        this.#networkEventManager.queueEventGroup(event.requestId, {\n          responseReceivedEvent: event,\n        });\n        return;\n      }\n    }\n    this.#emitResponseEvent(event, extraInfo);\n  }\n\n  #onResponseReceivedExtraInfo(\n    event: Protocol.Network.ResponseReceivedExtraInfoEvent\n  ): void {\n    // We may have skipped a redirect response/request pair due to waiting for\n    // this ExtraInfo event. If so, continue that work now that we have the\n    // request.\n    const redirectInfo = this.#networkEventManager.takeQueuedRedirectInfo(\n      event.requestId\n    );\n    if (redirectInfo) {\n      this.#networkEventManager.responseExtraInfo(event.requestId).push(event);\n      this.#onRequest(redirectInfo.event, redirectInfo.fetchRequestId);\n      return;\n    }\n\n    // We may have skipped response and loading events because we didn't have\n    // this ExtraInfo event yet. If so, emit those events now.\n    const queuedEvents = this.#networkEventManager.getQueuedEventGroup(\n      event.requestId\n    );\n    if (queuedEvents) {\n      this.#networkEventManager.forgetQueuedEventGroup(event.requestId);\n      this.#emitResponseEvent(queuedEvents.responseReceivedEvent, event);\n      if (queuedEvents.loadingFinishedEvent) {\n        this.#emitLoadingFinished(queuedEvents.loadingFinishedEvent);\n      }\n      if (queuedEvents.loadingFailedEvent) {\n        this.#emitLoadingFailed(queuedEvents.loadingFailedEvent);\n      }\n      return;\n    }\n\n    // Wait until we get another event that can use this ExtraInfo event.\n    this.#networkEventManager.responseExtraInfo(event.requestId).push(event);\n  }\n\n  #forgetRequest(request: HTTPRequest, events: boolean): void {\n    const requestId = request._requestId;\n    const interceptionId = request._interceptionId;\n\n    this.#networkEventManager.forgetRequest(requestId);\n    interceptionId !== undefined &&\n      this.#attemptedAuthentications.delete(interceptionId);\n\n    if (events) {\n      this.#networkEventManager.forget(requestId);\n    }\n  }\n\n  #onLoadingFinished(event: Protocol.Network.LoadingFinishedEvent): void {\n    // If the response event for this request is still waiting on a\n    // corresponding ExtraInfo event, then wait to emit this event too.\n    const queuedEvents = this.#networkEventManager.getQueuedEventGroup(\n      event.requestId\n    );\n    if (queuedEvents) {\n      queuedEvents.loadingFinishedEvent = event;\n    } else {\n      this.#emitLoadingFinished(event);\n    }\n  }\n\n  #emitLoadingFinished(event: Protocol.Network.LoadingFinishedEvent): void {\n    const request = this.#networkEventManager.getRequest(event.requestId);\n    // For certain requestIds we never receive requestWillBeSent event.\n    // @see https://crbug.com/750469\n    if (!request) {\n      return;\n    }\n\n    // Under certain conditions we never get the Network.responseReceived\n    // event from protocol. @see https://crbug.com/883475\n    if (request.response()) {\n      request.response()?._resolveBody(null);\n    }\n    this.#forgetRequest(request, true);\n    this.emit(NetworkManagerEmittedEvents.RequestFinished, request);\n  }\n\n  #onLoadingFailed(event: Protocol.Network.LoadingFailedEvent): void {\n    // If the response event for this request is still waiting on a\n    // corresponding ExtraInfo event, then wait to emit this event too.\n    const queuedEvents = this.#networkEventManager.getQueuedEventGroup(\n      event.requestId\n    );\n    if (queuedEvents) {\n      queuedEvents.loadingFailedEvent = event;\n    } else {\n      this.#emitLoadingFailed(event);\n    }\n  }\n\n  #emitLoadingFailed(event: Protocol.Network.LoadingFailedEvent): void {\n    const request = this.#networkEventManager.getRequest(event.requestId);\n    // For certain requestIds we never receive requestWillBeSent event.\n    // @see https://crbug.com/750469\n    if (!request) {\n      return;\n    }\n    request._failureText = event.errorText;\n    const response = request.response();\n    if (response) {\n      response._resolveBody(null);\n    }\n    this.#forgetRequest(request, true);\n    this.emit(NetworkManagerEmittedEvents.RequestFailed, request);\n  }\n}\n", "/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @public\n */\nexport interface PDFMargin {\n  top?: string | number;\n  bottom?: string | number;\n  left?: string | number;\n  right?: string | number;\n}\n\n/**\n * @public\n */\nexport type LowerCasePaperFormat =\n  | 'letter'\n  | 'legal'\n  | 'tabloid'\n  | 'ledger'\n  | 'a0'\n  | 'a1'\n  | 'a2'\n  | 'a3'\n  | 'a4'\n  | 'a5'\n  | 'a6';\n\n/**\n * All the valid paper format types when printing a PDF.\n *\n * @remarks\n *\n * The sizes of each format are as follows:\n *\n * - `Letter`: 8.5in x 11in\n *\n * - `Legal`: 8.5in x 14in\n *\n * - `Tabloid`: 11in x 17in\n *\n * - `Ledger`: 17in x 11in\n *\n * - `A0`: 33.1in x 46.8in\n *\n * - `A1`: 23.4in x 33.1in\n *\n * - `A2`: 16.54in x 23.4in\n *\n * - `A3`: 11.7in x 16.54in\n *\n * - `A4`: 8.27in x 11.7in\n *\n * - `A5`: 5.83in x 8.27in\n *\n * - `A6`: 4.13in x 5.83in\n *\n * @public\n */\nexport type PaperFormat =\n  | Uppercase<LowerCasePaperFormat>\n  | Capitalize<LowerCasePaperFormat>\n  | LowerCasePaperFormat;\n\n/**\n * Valid options to configure PDF generation via {@link Page.pdf}.\n * @public\n */\nexport interface PDFOptions {\n  /**\n   * Scales the rendering of the web page. Amount must be between `0.1` and `2`.\n   * @defaultValue `1`\n   */\n  scale?: number;\n  /**\n   * Whether to show the header and footer.\n   * @defaultValue `false`\n   */\n  displayHeaderFooter?: boolean;\n  /**\n   * HTML template for the print header. Should be valid HTML with the following\n   * classes used to inject values into them:\n   *\n   * - `date` formatted print date\n   *\n   * - `title` document title\n   *\n   * - `url` document location\n   *\n   * - `pageNumber` current page number\n   *\n   * - `totalPages` total pages in the document\n   */\n  headerTemplate?: string;\n  /**\n   * HTML template for the print footer. Has the same constraints and support\n   * for special classes as {@link PDFOptions | PDFOptions.headerTemplate}.\n   */\n  footerTemplate?: string;\n  /**\n   * Set to `true` to print background graphics.\n   * @defaultValue `false`\n   */\n  printBackground?: boolean;\n  /**\n   * Whether to print in landscape orientation.\n   * @defaultValue `false`\n   */\n  landscape?: boolean;\n  /**\n   * Paper ranges to print, e.g. `1-5, 8, 11-13`.\n   * @defaultValue The empty string, which means all pages are printed.\n   */\n  pageRanges?: string;\n  /**\n   * @remarks\n   * If set, this takes priority over the `width` and `height` options.\n   * @defaultValue `letter`.\n   */\n  format?: PaperFormat;\n  /**\n   * Sets the width of paper. You can pass in a number or a string with a unit.\n   */\n  width?: string | number;\n  /**\n   * Sets the height of paper. You can pass in a number or a string with a unit.\n   */\n  height?: string | number;\n  /**\n   * Give any CSS `@page` size declared in the page priority over what is\n   * declared in the `width` or `height` or `format` option.\n   * @defaultValue `false`, which will scale the content to fit the paper size.\n   */\n  preferCSSPageSize?: boolean;\n  /**\n   * Set the PDF margins.\n   * @defaultValue `undefined` no margins are set.\n   */\n  margin?: PDFMargin;\n  /**\n   * The path to save the file to.\n   *\n   * @remarks\n   *\n   * If the path is relative, it's resolved relative to the current working directory.\n   *\n   * @defaultValue `undefined`, which means the PDF will not be written to disk.\n   */\n  path?: string;\n  /**\n   * Hides default white background and allows generating pdfs with transparency.\n   * @defaultValue `false`\n   */\n  omitBackground?: boolean;\n  /**\n   * Timeout in milliseconds. Pass `0` to disable timeout.\n   * @defaultValue `30_000`\n   */\n  timeout?: number;\n}\n\n/**\n * @internal\n */\nexport interface PaperFormatDimensions {\n  width: number;\n  height: number;\n}\n\n/**\n * @internal\n */\nexport interface ParsedPDFOptionsInterface {\n  width: number;\n  height: number;\n  margin: {\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n  };\n}\n\n/**\n * @internal\n */\nexport type ParsedPDFOptions = Required<\n  Omit<PDFOptions, 'path' | 'format'> & ParsedPDFOptionsInterface\n>;\n\n/**\n * @internal\n */\nexport const paperFormats: Record<LowerCasePaperFormat, PaperFormatDimensions> =\n  {\n    letter: {width: 8.5, height: 11},\n    legal: {width: 8.5, height: 14},\n    tabloid: {width: 11, height: 17},\n    ledger: {width: 17, height: 11},\n    a0: {width: 33.1, height: 46.8},\n    a1: {width: 23.4, height: 33.1},\n    a2: {width: 16.54, height: 23.4},\n    a3: {width: 11.7, height: 16.54},\n    a4: {width: 8.27, height: 11.7},\n    a5: {width: 5.83, height: 8.27},\n    a6: {width: 4.13, height: 5.83},\n  } as const;\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {TimeoutError} from '../common/Errors.js';\nimport {EventEmitter} from '../common/EventEmitter.js';\nimport {debugError} from '../common/util.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {ElementHandle, BoundingBox, ClickOptions} from './ElementHandle.js';\nimport type {Frame} from './Frame.js';\nimport type {Page} from './Page.js';\n\n/**\n * @public\n */\nexport type VisibilityOption = 'hidden' | 'visible' | null;\n\n/**\n * @public\n */\nexport interface LocatorOptions {\n  /**\n   * Whether to wait for the element to be `visible` or `hidden`. `null` to\n   * disable visibility checks.\n   */\n  visibility: VisibilityOption;\n  /**\n   * Total timeout for the entire locator operation.\n   *\n   * Pass `0` to disable timeout.\n   *\n   * @defaultValue `Page.getDefaultTimeout()`\n   */\n  timeout: number;\n  /**\n   * Whether to scroll the element into viewport if not in the viewprot already.\n   * @defaultValue `true`\n   */\n  ensureElementIsInTheViewport: boolean;\n  /**\n   * Whether to wait for input elements to become enabled before the action.\n   * Applicable to `click` and `fill` actions.\n   * @defaultValue `true`\n   */\n  waitForEnabled: boolean;\n  /**\n   * Whether to wait for the element's bounding box to be same between two\n   * animation frames.\n   * @defaultValue `true`\n   */\n  waitForStableBoundingBox: boolean;\n}\n\n/**\n * Timeout for individual operations inside the locator. On errors the\n * operation is retried as long as {@link Locator.setTimeout} is not\n * exceeded. This timeout should be generally much lower as locating an\n * element means multiple asynchronious operations.\n */\nconst CONDITION_TIMEOUT = 1_000;\nconst WAIT_FOR_FUNCTION_DELAY = 100;\n\n/**\n * @public\n */\nexport type ActionCondition = (\n  element: ElementHandle,\n  signal: AbortSignal\n) => Promise<void>;\n\n/**\n * @public\n */\nexport interface ActionOptions {\n  signal?: AbortSignal;\n  conditions: ActionCondition[];\n}\n\n/**\n * All the events that a locator instance may emit.\n *\n * @public\n */\nexport enum LocatorEmittedEvents {\n  /**\n   * Emitted every time before the locator performs an action on the located element(s).\n   */\n  Action = 'action',\n}\n\n/**\n * @public\n */\nexport interface LocatorEventObject {\n  [LocatorEmittedEvents.Action]: never;\n}\n\n/**\n * Locators describe a strategy of locating elements and performing an action on\n * them. If the action fails because the element is not ready for the action,\n * the whole operation is retried. Various preconditions for a successful action\n * are checked automatically.\n *\n * @public\n */\nexport abstract class Locator extends EventEmitter {\n  /**\n   * @internal\n   */\n  static create(pageOrFrame: Page | Frame, selector: string): Locator {\n    return new LocatorImpl(pageOrFrame, selector).setTimeout(\n      'getDefaultTimeout' in pageOrFrame\n        ? pageOrFrame.getDefaultTimeout()\n        : pageOrFrame.page().getDefaultTimeout()\n    );\n  }\n\n  /**\n   * Creates a race between multiple locators but ensures that only a single one\n   * acts.\n   */\n  static race(locators: Locator[]): Locator {\n    return new RaceLocatorImpl(locators);\n  }\n\n  override on<K extends keyof LocatorEventObject>(\n    eventName: K,\n    handler: (event: LocatorEventObject[K]) => void\n  ): this {\n    return super.on(eventName, handler);\n  }\n\n  override once<K extends keyof LocatorEventObject>(\n    eventName: K,\n    handler: (event: LocatorEventObject[K]) => void\n  ): this {\n    return super.once(eventName, handler);\n  }\n\n  override off<K extends keyof LocatorEventObject>(\n    eventName: K,\n    handler: (event: LocatorEventObject[K]) => void\n  ): this {\n    return super.off(eventName, handler);\n  }\n\n  abstract setVisibility(visibility: VisibilityOption): this;\n\n  abstract setTimeout(timeout: number): this;\n\n  abstract setEnsureElementIsInTheViewport(value: boolean): this;\n\n  abstract setWaitForEnabled(value: boolean): this;\n\n  abstract setWaitForStableBoundingBox(value: boolean): this;\n\n  abstract click(\n    clickOptions?: ClickOptions & {\n      signal?: AbortSignal;\n    }\n  ): Promise<void>;\n\n  /**\n   * Fills out the input identified by the locator using the provided value. The\n   * type of the input is determined at runtime and the appropriate fill-out\n   * method is chosen based on the type. contenteditable, selector, inputs are\n   * supported.\n   */\n  abstract fill(\n    value: string,\n    fillOptions?: {signal?: AbortSignal}\n  ): Promise<void>;\n\n  abstract hover(hoverOptions?: {signal?: AbortSignal}): Promise<void>;\n\n  abstract scroll(scrollOptions?: {\n    scrollTop?: number;\n    scrollLeft?: number;\n    signal?: AbortSignal;\n  }): Promise<void>;\n}\n\n/**\n * @internal\n */\nexport class LocatorImpl extends Locator {\n  #pageOrFrame: Page | Frame;\n  #selector: string;\n  #visibility: VisibilityOption = 'visible';\n  #timeout = 30_000;\n  #ensureElementIsInTheViewport = true;\n  #waitForEnabled = true;\n  #waitForStableBoundingBox = true;\n\n  constructor(pageOrFrame: Page | Frame, selector: string) {\n    super();\n    this.#pageOrFrame = pageOrFrame;\n    this.#selector = selector;\n  }\n\n  setVisibility(visibility: VisibilityOption): this {\n    this.#visibility = visibility;\n    return this;\n  }\n\n  setTimeout(timeout: number): this {\n    this.#timeout = timeout;\n    return this;\n  }\n\n  setEnsureElementIsInTheViewport(value: boolean): this {\n    this.#ensureElementIsInTheViewport = value;\n    return this;\n  }\n\n  setWaitForEnabled(value: boolean): this {\n    this.#waitForEnabled = value;\n    return this;\n  }\n\n  setWaitForStableBoundingBox(value: boolean): this {\n    this.#waitForStableBoundingBox = value;\n    return this;\n  }\n\n  /**\n   * Retries the `fn` until a truthy result is returned.\n   */\n  async #waitForFunction(\n    fn: (signal: AbortSignal) => unknown,\n    signal?: AbortSignal,\n    timeout = CONDITION_TIMEOUT\n  ): Promise<void> {\n    let isActive = true;\n    let controller: AbortController;\n    // If the loop times out, we abort only the last iteration's controller.\n    const timeoutId = timeout\n      ? setTimeout(() => {\n          isActive = false;\n          controller?.abort();\n        }, timeout)\n      : 0;\n    // If the user's signal aborts, we abort the last iteration and the loop.\n    signal?.addEventListener(\n      'abort',\n      () => {\n        controller?.abort();\n        isActive = false;\n        clearTimeout(timeoutId);\n      },\n      {once: true}\n    );\n    while (isActive) {\n      controller = new AbortController();\n      try {\n        const result = await fn(controller.signal);\n        if (result) {\n          clearTimeout(timeoutId);\n          return;\n        }\n      } catch (err) {\n        if (isErrorLike(err)) {\n          debugError(err);\n          // Retry on all timeouts.\n          if (err instanceof TimeoutError) {\n            continue;\n          }\n          // Abort error are ignored as they only affect one iteration.\n          if (err.name === 'AbortError') {\n            continue;\n          }\n        }\n        throw err;\n      } finally {\n        // We abort any operations that might have been started by `fn`, because\n        // the iteration is now over.\n        controller.abort();\n      }\n      await new Promise(resolve => {\n        return setTimeout(resolve, WAIT_FOR_FUNCTION_DELAY);\n      });\n    }\n    signal?.throwIfAborted();\n    throw new TimeoutError(\n      `waitForFunction timed out. The timeout is ${timeout}ms.`\n    );\n  }\n\n  /**\n   * Checks if the element is in the viewport and auto-scrolls it if it is not.\n   */\n  #ensureElementIsInTheViewportIfNeeded = async (\n    element: ElementHandle,\n    signal?: AbortSignal\n  ): Promise<void> => {\n    if (!this.#ensureElementIsInTheViewport) {\n      return;\n    }\n    // Side-effect: this also checks if it is connected.\n    const isIntersectingViewport = await element.isIntersectingViewport({\n      threshold: 0,\n    });\n    signal?.throwIfAborted();\n    if (!isIntersectingViewport) {\n      await element.scrollIntoView();\n      signal?.throwIfAborted();\n      await this.#waitForFunction(async () => {\n        return await element.isIntersectingViewport({\n          threshold: 0,\n        });\n      }, signal);\n      signal?.throwIfAborted();\n    }\n  };\n\n  /**\n   * Waits for the element to become visible or hidden. visibility === 'visible'\n   * means that the element has a computed style, the visibility property other\n   * than 'hidden' or 'collapse' and non-empty bounding box. visibility ===\n   * 'hidden' means the opposite of that.\n   */\n  #waitForVisibilityIfNeeded = async (\n    element: ElementHandle,\n    signal?: AbortSignal\n  ): Promise<void> => {\n    if (this.#visibility === null) {\n      return;\n    }\n    if (this.#visibility === 'hidden') {\n      await this.#waitForFunction(async () => {\n        return element.isHidden();\n      }, signal);\n    }\n    await this.#waitForFunction(async () => {\n      return element.isVisible();\n    }, signal);\n  };\n\n  /**\n   * If the element is a button, textarea, input or select, wait till the\n   * element becomes enabled.\n   */\n  #waitForEnabledIfNeeded = async (\n    element: ElementHandle,\n    signal?: AbortSignal\n  ): Promise<void> => {\n    if (!this.#waitForEnabled) {\n      return;\n    }\n    await this.#pageOrFrame.waitForFunction(\n      el => {\n        if (['button', 'textarea', 'input', 'select'].includes(el.tagName)) {\n          return !(el as HTMLInputElement).disabled;\n        }\n        return true;\n      },\n      {\n        timeout: CONDITION_TIMEOUT,\n        signal,\n      },\n      element\n    );\n  };\n\n  /**\n   * Compares the bounding box of the element for two consecutive animation\n   * frames and waits till they are the same.\n   */\n  #waitForStableBoundingBoxIfNeeded = async (\n    element: ElementHandle,\n    signal?: AbortSignal\n  ): Promise<void> => {\n    if (!this.#waitForStableBoundingBox) {\n      return;\n    }\n    function getClientRect() {\n      return element.evaluate(el => {\n        return new Promise<[BoundingBox, BoundingBox]>(resolve => {\n          window.requestAnimationFrame(() => {\n            const rect1 = el.getBoundingClientRect();\n            window.requestAnimationFrame(() => {\n              const rect2 = el.getBoundingClientRect();\n              resolve([\n                {\n                  x: rect1.x,\n                  y: rect1.y,\n                  width: rect1.width,\n                  height: rect1.height,\n                },\n                {\n                  x: rect2.x,\n                  y: rect2.y,\n                  width: rect2.width,\n                  height: rect2.height,\n                },\n              ]);\n            });\n          });\n        });\n      });\n    }\n    await this.#waitForFunction(async () => {\n      const [rect1, rect2] = await getClientRect();\n      return (\n        rect1.x === rect2.x &&\n        rect1.y === rect2.y &&\n        rect1.width === rect2.width &&\n        rect1.height === rect2.height\n      );\n    }, signal);\n  };\n\n  async #run(\n    action: (el: ElementHandle) => Promise<void>,\n    options?: ActionOptions\n  ) {\n    await this.#waitForFunction(\n      async signal => {\n        // 1. Select the element without visibility checks.\n        const element = await this.#pageOrFrame.waitForSelector(\n          this.#selector,\n          {\n            visible: false,\n            timeout: this.#timeout,\n            signal,\n          }\n        );\n        // Retry if no element is found.\n        if (!element) {\n          return false;\n        }\n        try {\n          signal?.throwIfAborted();\n          // 2. Perform action specific checks.\n          await Promise.all(\n            options?.conditions.map(check => {\n              return check(element, signal);\n            }) || []\n          );\n          signal?.throwIfAborted();\n          // 3. Perform the action\n          this.emit(LocatorEmittedEvents.Action);\n          await action(element);\n          return true;\n        } finally {\n          void element.dispose().catch(debugError);\n        }\n      },\n      options?.signal,\n      this.#timeout\n    );\n  }\n\n  async click(\n    clickOptions?: ClickOptions & {\n      signal?: AbortSignal;\n    }\n  ): Promise<void> {\n    return await this.#run(\n      async element => {\n        await element.click(clickOptions);\n      },\n      {\n        signal: clickOptions?.signal,\n        conditions: [\n          this.#ensureElementIsInTheViewportIfNeeded,\n          this.#waitForVisibilityIfNeeded,\n          this.#waitForEnabledIfNeeded,\n          this.#waitForStableBoundingBoxIfNeeded,\n        ],\n      }\n    );\n  }\n\n  /**\n   * Fills out the input identified by the locator using the provided value. The\n   * type of the input is determined at runtime and the appropriate fill-out\n   * method is chosen based on the type. contenteditable, selector, inputs are\n   * supported.\n   */\n  async fill(\n    value: string,\n    fillOptions?: {signal?: AbortSignal}\n  ): Promise<void> {\n    return await this.#run(\n      async element => {\n        const input = element as ElementHandle<HTMLElement>;\n        const inputType = await input.evaluate(el => {\n          if (el instanceof HTMLSelectElement) {\n            return 'select';\n          }\n          if (el instanceof HTMLInputElement) {\n            if (\n              new Set([\n                'textarea',\n                'text',\n                'url',\n                'tel',\n                'search',\n                'password',\n                'number',\n                'email',\n              ]).has(el.type)\n            ) {\n              return 'typeable-input';\n            } else {\n              return 'other-input';\n            }\n          }\n\n          if (el.isContentEditable) {\n            return 'contenteditable';\n          }\n\n          return 'unknown';\n        });\n\n        switch (inputType) {\n          case 'select':\n            await input.select(value);\n            break;\n          case 'contenteditable':\n          case 'typeable-input':\n            const textToType = await (\n              input as ElementHandle<HTMLInputElement>\n            ).evaluate((input, newValue) => {\n              const currentValue = input.isContentEditable\n                ? input.innerText\n                : input.value;\n\n              // Clear the input if the current value does not match the filled\n              // out value.\n              if (\n                newValue.length <= currentValue.length ||\n                !newValue.startsWith(input.value)\n              ) {\n                if (input.isContentEditable) {\n                  input.innerText = '';\n                } else {\n                  input.value = '';\n                }\n                return newValue;\n              }\n              const originalValue = input.isContentEditable\n                ? input.innerText\n                : input.value;\n\n              // If the value is partially filled out, only type the rest. Move\n              // cursor to the end of the common prefix.\n              if (input.isContentEditable) {\n                input.innerText = '';\n                input.innerText = originalValue;\n              } else {\n                input.value = '';\n                input.value = originalValue;\n              }\n              return newValue.substring(originalValue.length);\n            }, value);\n            await input.type(textToType);\n            break;\n          case 'other-input':\n            await input.focus();\n            await input.evaluate((input, value) => {\n              (input as HTMLInputElement).value = value;\n              input.dispatchEvent(new Event('input', {bubbles: true}));\n              input.dispatchEvent(new Event('change', {bubbles: true}));\n            }, value);\n            break;\n          case 'unknown':\n            throw new Error(`Element cannot be filled out.`);\n        }\n      },\n      {\n        signal: fillOptions?.signal,\n        conditions: [\n          this.#ensureElementIsInTheViewportIfNeeded,\n          this.#waitForVisibilityIfNeeded,\n          this.#waitForEnabledIfNeeded,\n          this.#waitForStableBoundingBoxIfNeeded,\n        ],\n      }\n    );\n  }\n\n  async hover(hoverOptions?: {signal?: AbortSignal}): Promise<void> {\n    return await this.#run(\n      async element => {\n        await element.hover();\n      },\n      {\n        signal: hoverOptions?.signal,\n        conditions: [\n          this.#ensureElementIsInTheViewportIfNeeded,\n          this.#waitForVisibilityIfNeeded,\n          this.#waitForStableBoundingBoxIfNeeded,\n        ],\n      }\n    );\n  }\n\n  async scroll(scrollOptions?: {\n    scrollTop?: number;\n    scrollLeft?: number;\n    signal?: AbortSignal;\n  }): Promise<void> {\n    return await this.#run(\n      async element => {\n        await element.evaluate(\n          (el, scrollTop, scrollLeft) => {\n            if (scrollTop !== undefined) {\n              el.scrollTop = scrollTop;\n            }\n            if (scrollLeft !== undefined) {\n              el.scrollLeft = scrollLeft;\n            }\n          },\n          scrollOptions?.scrollTop,\n          scrollOptions?.scrollLeft\n        );\n      },\n      {\n        signal: scrollOptions?.signal,\n        conditions: [\n          this.#ensureElementIsInTheViewportIfNeeded,\n          this.#waitForVisibilityIfNeeded,\n          this.#waitForStableBoundingBoxIfNeeded,\n        ],\n      }\n    );\n  }\n}\n\n/**\n * @internal\n */\nclass RaceLocatorImpl extends Locator {\n  #locators: Locator[];\n\n  constructor(locators: Locator[]) {\n    super();\n    this.#locators = locators;\n  }\n\n  override setVisibility(visibility: VisibilityOption): this {\n    for (const locator of this.#locators) {\n      locator.setVisibility(visibility);\n    }\n    return this;\n  }\n\n  override setTimeout(timeout: number): this {\n    for (const locator of this.#locators) {\n      locator.setTimeout(timeout);\n    }\n    return this;\n  }\n\n  override setEnsureElementIsInTheViewport(value: boolean): this {\n    for (const locator of this.#locators) {\n      locator.setEnsureElementIsInTheViewport(value);\n    }\n    return this;\n  }\n\n  override setWaitForEnabled(value: boolean): this {\n    for (const locator of this.#locators) {\n      locator.setWaitForEnabled(value);\n    }\n    return this;\n  }\n\n  override setWaitForStableBoundingBox(value: boolean): this {\n    for (const locator of this.#locators) {\n      locator.setWaitForStableBoundingBox(value);\n    }\n    return this;\n  }\n\n  async #runRace(\n    action: (el: Locator, abortSignal: AbortSignal) => Promise<void>,\n    options: {\n      signal?: AbortSignal;\n    }\n  ) {\n    const abortControllers = new WeakMap<Locator, AbortController>();\n\n    // Abort all locators if the user-provided signal aborts.\n    options.signal?.addEventListener('abort', () => {\n      for (const locator of this.#locators) {\n        abortControllers.get(locator)?.abort();\n      }\n    });\n\n    const handleLocatorAction = (locator: Locator): (() => void) => {\n      return () => {\n        // When one locator is ready to act, we will abort other locators.\n        for (const other of this.#locators) {\n          if (other !== locator) {\n            abortControllers.get(other)?.abort();\n          }\n        }\n        this.emit(LocatorEmittedEvents.Action);\n      };\n    };\n\n    const createAbortController = (locator: Locator): AbortController => {\n      const abortController = new AbortController();\n      abortControllers.set(locator, abortController);\n      return abortController;\n    };\n\n    await Promise.allSettled(\n      this.#locators.map(locator => {\n        return action(\n          locator.on(LocatorEmittedEvents.Action, handleLocatorAction(locator)),\n          createAbortController(locator).signal\n        );\n      })\n    );\n\n    options.signal?.throwIfAborted();\n  }\n\n  override async click(\n    clickOptions?: ClickOptions & {\n      signal?: AbortSignal;\n    }\n  ): Promise<void> {\n    return await this.#runRace(\n      (locator, abortSignal) => {\n        return locator.click({\n          ...clickOptions,\n          signal: abortSignal,\n        });\n      },\n      {\n        signal: clickOptions?.signal,\n      }\n    );\n  }\n\n  override async fill(\n    value: string,\n    fillOptions?: {signal?: AbortSignal}\n  ): Promise<void> {\n    return await this.#runRace(\n      (locator, abortSignal) => {\n        return locator.fill(value, {\n          ...fillOptions,\n          signal: abortSignal,\n        });\n      },\n      {\n        signal: fillOptions?.signal,\n      }\n    );\n  }\n\n  override async hover(hoverOptions?: {signal?: AbortSignal}): Promise<void> {\n    return await this.#runRace(\n      (locator, abortSignal) => {\n        return locator.hover({\n          ...hoverOptions,\n          signal: abortSignal,\n        });\n      },\n      {\n        signal: hoverOptions?.signal,\n      }\n    );\n  }\n\n  override async scroll(scrollOptions?: {\n    scrollTop?: number;\n    scrollLeft?: number;\n    signal?: AbortSignal;\n  }): Promise<void> {\n    return await this.#runRace(\n      (locator, abortSignal) => {\n        return locator.scroll({\n          ...scrollOptions,\n          signal: abortSignal,\n        });\n      },\n      {\n        signal: scrollOptions?.signal,\n      }\n    );\n  }\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {Readable} from 'stream';\n\nimport {Protocol} from 'devtools-protocol';\n\nimport type {HTTPRequest} from '../api/HTTPRequest.js';\nimport type {HTTPResponse} from '../api/HTTPResponse.js';\nimport type {Accessibility} from '../common/Accessibility.js';\nimport type {ConsoleMessage} from '../common/ConsoleMessage.js';\nimport type {Coverage} from '../common/Coverage.js';\nimport {Device} from '../common/Device.js';\nimport {DeviceRequestPrompt} from '../common/DeviceRequestPrompt.js';\nimport type {Dialog} from '../common/Dialog.js';\nimport {TargetCloseError} from '../common/Errors.js';\nimport {EventEmitter, Handler} from '../common/EventEmitter.js';\nimport type {FileChooser} from '../common/FileChooser.js';\nimport type {WaitForSelectorOptions} from '../common/IsolatedWorld.js';\nimport type {PuppeteerLifeCycleEvent} from '../common/LifecycleWatcher.js';\nimport {\n  Credentials,\n  NetworkConditions,\n  NetworkManagerEmittedEvents,\n} from '../common/NetworkManager.js';\nimport {\n  LowerCasePaperFormat,\n  paperFormats,\n  ParsedPDFOptions,\n  PDFOptions,\n} from '../common/PDFOptions.js';\nimport type {Viewport} from '../common/PuppeteerViewport.js';\nimport type {Target} from '../common/Target.js';\nimport type {Tracing} from '../common/Tracing.js';\nimport type {\n  EvaluateFunc,\n  EvaluateFuncWith,\n  HandleFor,\n  NodeFor,\n} from '../common/types.js';\nimport {\n  importFSPromises,\n  isNumber,\n  isString,\n  waitForEvent,\n  withSourcePuppeteerURLIfNone,\n} from '../common/util.js';\nimport type {WebWorker} from '../common/WebWorker.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\n\nimport type {Browser} from './Browser.js';\nimport type {BrowserContext} from './BrowserContext.js';\nimport type {ClickOptions, ElementHandle} from './ElementHandle.js';\nimport type {\n  Frame,\n  FrameAddScriptTagOptions,\n  FrameAddStyleTagOptions,\n  FrameWaitForFunctionOptions,\n} from './Frame.js';\nimport {Keyboard, Mouse, Touchscreen, KeyboardTypeOptions} from './Input.js';\nimport type {JSHandle} from './JSHandle.js';\nimport {Locator} from './Locator.js';\n\n/**\n * @public\n */\nexport interface Metrics {\n  Timestamp?: number;\n  Documents?: number;\n  Frames?: number;\n  JSEventListeners?: number;\n  Nodes?: number;\n  LayoutCount?: number;\n  RecalcStyleCount?: number;\n  LayoutDuration?: number;\n  RecalcStyleDuration?: number;\n  ScriptDuration?: number;\n  TaskDuration?: number;\n  JSHeapUsedSize?: number;\n  JSHeapTotalSize?: number;\n}\n\n/**\n * @public\n */\nexport interface WaitTimeoutOptions {\n  /**\n   * Maximum wait time in milliseconds. Pass 0 to disable the timeout.\n   *\n   * The default value can be changed by using the\n   * {@link Page.setDefaultTimeout} method.\n   *\n   * @defaultValue `30000`\n   */\n  timeout?: number;\n}\n\n/**\n * @public\n */\nexport interface WaitForOptions {\n  /**\n   * Maximum wait time in milliseconds. Pass 0 to disable the timeout.\n   *\n   * The default value can be changed by using the\n   * {@link Page.setDefaultTimeout} or {@link Page.setDefaultNavigationTimeout}\n   * methods.\n   *\n   * @defaultValue `30000`\n   */\n  timeout?: number;\n  waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n}\n\n/**\n * @public\n */\nexport interface GeolocationOptions {\n  /**\n   * Latitude between `-90` and `90`.\n   */\n  longitude: number;\n  /**\n   * Longitude between `-180` and `180`.\n   */\n  latitude: number;\n  /**\n   * Optional non-negative accuracy value.\n   */\n  accuracy?: number;\n}\n\n/**\n * @public\n */\nexport interface MediaFeature {\n  name: string;\n  value: string;\n}\n\n/**\n * @public\n */\nexport interface ScreenshotClip {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  /**\n   * @defaultValue `1`\n   */\n  scale?: number;\n}\n\n/**\n * @public\n */\nexport interface ScreenshotOptions {\n  /**\n   * @defaultValue `png`\n   */\n  type?: 'png' | 'jpeg' | 'webp';\n  /**\n   * The file path to save the image to. The screenshot type will be inferred\n   * from file extension. If path is a relative path, then it is resolved\n   * relative to current working directory. If no path is provided, the image\n   * won't be saved to the disk.\n   */\n  path?: string;\n  /**\n   * When `true`, takes a screenshot of the full page.\n   * @defaultValue `false`\n   */\n  fullPage?: boolean;\n  /**\n   * An object which specifies the clipping region of the page.\n   */\n  clip?: ScreenshotClip;\n  /**\n   * Quality of the image, between 0-100. Not applicable to `png` images.\n   */\n  quality?: number;\n  /**\n   * Hides default white background and allows capturing screenshots with transparency.\n   * @defaultValue `false`\n   */\n  omitBackground?: boolean;\n  /**\n   * Encoding of the image.\n   * @defaultValue `binary`\n   */\n  encoding?: 'base64' | 'binary';\n  /**\n   * Capture the screenshot beyond the viewport.\n   * @defaultValue `true`\n   */\n  captureBeyondViewport?: boolean;\n  /**\n   * Capture the screenshot from the surface, rather than the view.\n   * @defaultValue `true`\n   */\n  fromSurface?: boolean;\n}\n\n/**\n * All the events that a page instance may emit.\n *\n * @public\n */\nexport const enum PageEmittedEvents {\n  /**\n   * Emitted when the page closes.\n   */\n  Close = 'close',\n  /**\n   * Emitted when JavaScript within the page calls one of console API methods,\n   * e.g. `console.log` or `console.dir`. Also emitted if the page throws an\n   * error or a warning.\n   *\n   * @remarks\n   * A `console` event provides a {@link ConsoleMessage} representing the\n   * console message that was logged.\n   *\n   * @example\n   * An example of handling `console` event:\n   *\n   * ```ts\n   * page.on('console', msg => {\n   *   for (let i = 0; i < msg.args().length; ++i)\n   *     console.log(`${i}: ${msg.args()[i]}`);\n   * });\n   * page.evaluate(() => console.log('hello', 5, {foo: 'bar'}));\n   * ```\n   */\n  Console = 'console',\n  /**\n   * Emitted when a JavaScript dialog appears, such as `alert`, `prompt`,\n   * `confirm` or `beforeunload`. Puppeteer can respond to the dialog via\n   * {@link Dialog.accept} or {@link Dialog.dismiss}.\n   */\n  Dialog = 'dialog',\n  /**\n   * Emitted when the JavaScript\n   * {@link https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded | DOMContentLoaded }\n   * event is dispatched.\n   */\n  DOMContentLoaded = 'domcontentloaded',\n  /**\n   * Emitted when the page crashes. Will contain an `Error`.\n   */\n  Error = 'error',\n  /** Emitted when a frame is attached. Will contain a {@link Frame}. */\n  FrameAttached = 'frameattached',\n  /** Emitted when a frame is detached. Will contain a {@link Frame}. */\n  FrameDetached = 'framedetached',\n  /**\n   * Emitted when a frame is navigated to a new URL. Will contain a\n   * {@link Frame}.\n   */\n  FrameNavigated = 'framenavigated',\n  /**\n   * Emitted when the JavaScript\n   * {@link https://developer.mozilla.org/en-US/docs/Web/Events/load | load}\n   * event is dispatched.\n   */\n  Load = 'load',\n  /**\n   * Emitted when the JavaScript code makes a call to `console.timeStamp`. For\n   * the list of metrics see {@link Page.metrics | page.metrics}.\n   *\n   * @remarks\n   * Contains an object with two properties:\n   *\n   * - `title`: the title passed to `console.timeStamp`\n   * - `metrics`: object containing metrics as key/value pairs. The values will\n   *   be `number`s.\n   */\n  Metrics = 'metrics',\n  /**\n   * Emitted when an uncaught exception happens within the page. Contains an\n   * `Error`.\n   */\n  PageError = 'pageerror',\n  /**\n   * Emitted when the page opens a new tab or window.\n   *\n   * Contains a {@link Page} corresponding to the popup window.\n   *\n   * @example\n   *\n   * ```ts\n   * const [popup] = await Promise.all([\n   *   new Promise(resolve => page.once('popup', resolve)),\n   *   page.click('a[target=_blank]'),\n   * ]);\n   * ```\n   *\n   * ```ts\n   * const [popup] = await Promise.all([\n   *   new Promise(resolve => page.once('popup', resolve)),\n   *   page.evaluate(() => window.open('https://example.com')),\n   * ]);\n   * ```\n   */\n  Popup = 'popup',\n  /**\n   * Emitted when a page issues a request and contains a {@link HTTPRequest}.\n   *\n   * @remarks\n   * The object is readonly. See {@link Page.setRequestInterception} for\n   * intercepting and mutating requests.\n   */\n  Request = 'request',\n  /**\n   * Emitted when a request ended up loading from cache. Contains a\n   * {@link HTTPRequest}.\n   *\n   * @remarks\n   * For certain requests, might contain undefined.\n   * {@link https://crbug.com/750469}\n   */\n  RequestServedFromCache = 'requestservedfromcache',\n  /**\n   * Emitted when a request fails, for example by timing out.\n   *\n   * Contains a {@link HTTPRequest}.\n   *\n   * @remarks\n   * HTTP Error responses, such as 404 or 503, are still successful responses\n   * from HTTP standpoint, so request will complete with `requestfinished` event\n   * and not with `requestfailed`.\n   */\n  RequestFailed = 'requestfailed',\n  /**\n   * Emitted when a request finishes successfully. Contains a\n   * {@link HTTPRequest}.\n   */\n  RequestFinished = 'requestfinished',\n  /**\n   * Emitted when a response is received. Contains a {@link HTTPResponse}.\n   */\n  Response = 'response',\n  /**\n   * Emitted when a dedicated\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API | WebWorker}\n   * is spawned by the page.\n   */\n  WorkerCreated = 'workercreated',\n  /**\n   * Emitted when a dedicated\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API | WebWorker}\n   * is destroyed by the page.\n   */\n  WorkerDestroyed = 'workerdestroyed',\n}\n\n/**\n * Denotes the objects received by callback functions for page events.\n *\n * See {@link PageEmittedEvents} for more detail on the events and when they are\n * emitted.\n *\n * @public\n */\nexport interface PageEventObject {\n  close: never;\n  console: ConsoleMessage;\n  dialog: Dialog;\n  domcontentloaded: never;\n  error: Error;\n  frameattached: Frame;\n  framedetached: Frame;\n  framenavigated: Frame;\n  load: never;\n  metrics: {title: string; metrics: Metrics};\n  pageerror: Error;\n  popup: Page;\n  request: HTTPRequest;\n  response: HTTPResponse;\n  requestfailed: HTTPRequest;\n  requestfinished: HTTPRequest;\n  requestservedfromcache: HTTPRequest;\n  workercreated: WebWorker;\n  workerdestroyed: WebWorker;\n}\n\n/**\n * @public\n */\nexport interface NewDocumentScriptEvaluation {\n  identifier: string;\n}\n\n/**\n * Page provides methods to interact with a single tab or\n * {@link https://developer.chrome.com/extensions/background_pages | extension background page}\n * in the browser.\n *\n * :::note\n *\n * One Browser instance might have multiple Page instances.\n *\n * :::\n *\n * @example\n * This example creates a page, navigates it to a URL, and then saves a screenshot:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await page.screenshot({path: 'screenshot.png'});\n *   await browser.close();\n * })();\n * ```\n *\n * The Page class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link PageEmittedEvents} enum.\n *\n * @example\n * This example logs a message for a single page `load` event:\n *\n * ```ts\n * page.once('load', () => console.log('Page loaded!'));\n * ```\n *\n * To unsubscribe from events use the {@link Page.off} method:\n *\n * ```ts\n * function logRequest(interceptedRequest) {\n *   console.log('A request was made:', interceptedRequest.url());\n * }\n * page.on('request', logRequest);\n * // Sometime later...\n * page.off('request', logRequest);\n * ```\n *\n * @public\n */\nexport class Page extends EventEmitter {\n  #handlerMap = new WeakMap<Handler<any>, Handler<any>>();\n\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * `true` if the service worker are being bypassed, `false` otherwise.\n   */\n  isServiceWorkerBypassed(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * `true` if drag events are being intercepted, `false` otherwise.\n   */\n  isDragInterceptionEnabled(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * `true` if the page has JavaScript enabled, `false` otherwise.\n   */\n  isJavaScriptEnabled(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Listen to page events.\n   *\n   * :::note\n   *\n   * This method exists to define event typings and handle proper wireup of\n   * cooperative request interception. Actual event listening and dispatching is\n   * delegated to {@link EventEmitter}.\n   *\n   * :::\n   */\n  override on<K extends keyof PageEventObject>(\n    eventName: K,\n    handler: (event: PageEventObject[K]) => void\n  ): this {\n    if (eventName === 'request') {\n      const wrap =\n        this.#handlerMap.get(handler) ||\n        ((event: HTTPRequest) => {\n          event.enqueueInterceptAction(() => {\n            return handler(event as PageEventObject[K]);\n          });\n        });\n\n      this.#handlerMap.set(handler, wrap);\n\n      return super.on(eventName, wrap);\n    }\n    return super.on(eventName, handler);\n  }\n\n  override once<K extends keyof PageEventObject>(\n    eventName: K,\n    handler: (event: PageEventObject[K]) => void\n  ): this {\n    // Note: this method only exists to define the types; we delegate the impl\n    // to EventEmitter.\n    return super.once(eventName, handler);\n  }\n\n  override off<K extends keyof PageEventObject>(\n    eventName: K,\n    handler: (event: PageEventObject[K]) => void\n  ): this {\n    if (eventName === 'request') {\n      handler = this.#handlerMap.get(handler) || handler;\n    }\n\n    return super.off(eventName, handler);\n  }\n\n  /**\n   * This method is typically coupled with an action that triggers file\n   * choosing.\n   *\n   * :::caution\n   *\n   * This must be called before the file chooser is launched. It will not return\n   * a currently active file chooser.\n   *\n   * :::\n   *\n   * @remarks\n   * In the \"headful\" browser, this method results in the native file picker\n   * dialog `not showing up` for the user.\n   *\n   * @example\n   * The following example clicks a button that issues a file chooser\n   * and then responds with `/tmp/myfile.pdf` as if a user has selected this file.\n   *\n   * ```ts\n   * const [fileChooser] = await Promise.all([\n   *   page.waitForFileChooser(),\n   *   page.click('#upload-file-button'),\n   *   // some button that triggers file selection\n   * ]);\n   * await fileChooser.accept(['/tmp/myfile.pdf']);\n   * ```\n   */\n  waitForFileChooser(options?: WaitTimeoutOptions): Promise<FileChooser>;\n  waitForFileChooser(): Promise<FileChooser> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Sets the page's geolocation.\n   *\n   * @remarks\n   * Consider using {@link BrowserContext.overridePermissions} to grant\n   * permissions for the page to read its geolocation.\n   *\n   * @example\n   *\n   * ```ts\n   * await page.setGeolocation({latitude: 59.95, longitude: 30.31667});\n   * ```\n   */\n  async setGeolocation(options: GeolocationOptions): Promise<void>;\n  async setGeolocation(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * A target this page was created from.\n   */\n  target(): Target {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Get the browser the page belongs to.\n   */\n  browser(): Browser {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Get the browser context that the page belongs to.\n   */\n  browserContext(): BrowserContext {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The page's main frame.\n   *\n   * @remarks\n   * Page is guaranteed to have a main frame which persists during navigations.\n   */\n  mainFrame(): Frame {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * {@inheritDoc Keyboard}\n   */\n  get keyboard(): Keyboard {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * {@inheritDoc Touchscreen}\n   */\n  get touchscreen(): Touchscreen {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * {@inheritDoc Coverage}\n   */\n  get coverage(): Coverage {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * {@inheritDoc Tracing}\n   */\n  get tracing(): Tracing {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * {@inheritDoc Accessibility}\n   */\n  get accessibility(): Accessibility {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * An array of all frames attached to the page.\n   */\n  frames(): Frame[] {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * All of the dedicated {@link\n   * https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API |\n   * WebWorkers} associated with the page.\n   *\n   * @remarks\n   * This does not contain ServiceWorkers\n   */\n  workers(): WebWorker[] {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Activating request interception enables {@link HTTPRequest.abort},\n   * {@link HTTPRequest.continue} and {@link HTTPRequest.respond} methods. This\n   * provides the capability to modify network requests that are made by a page.\n   *\n   * Once request interception is enabled, every request will stall unless it's\n   * continued, responded or aborted; or completed using the browser cache.\n   *\n   * See the\n   * {@link https://pptr.dev/next/guides/request-interception|Request interception guide}\n   * for more details.\n   *\n   * @example\n   * An example of a na\u00EFve request interceptor that aborts all image requests:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.setRequestInterception(true);\n   *   page.on('request', interceptedRequest => {\n   *     if (\n   *       interceptedRequest.url().endsWith('.png') ||\n   *       interceptedRequest.url().endsWith('.jpg')\n   *     )\n   *       interceptedRequest.abort();\n   *     else interceptedRequest.continue();\n   *   });\n   *   await page.goto('https://example.com');\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param value - Whether to enable request interception.\n   */\n  async setRequestInterception(value: boolean): Promise<void>;\n  async setRequestInterception(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Toggles ignoring of service worker for each request.\n   *\n   * @param bypass - Whether to bypass service worker and load from network.\n   */\n  async setBypassServiceWorker(bypass: boolean): Promise<void>;\n  async setBypassServiceWorker(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param enabled - Whether to enable drag interception.\n   *\n   * @remarks\n   * Activating drag interception enables the `Input.drag`,\n   * methods This provides the capability to capture drag events emitted\n   * on the page, which can then be used to simulate drag-and-drop.\n   */\n  async setDragInterception(enabled: boolean): Promise<void>;\n  async setDragInterception(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Sets the network connection to offline.\n   *\n   * It does not change the parameters used in {@link Page.emulateNetworkConditions}\n   *\n   * @param enabled - When `true`, enables offline mode for the page.\n   */\n  setOfflineMode(enabled: boolean): Promise<void>;\n  setOfflineMode(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This does not affect WebSockets and WebRTC PeerConnections (see\n   * https://crbug.com/563644). To set the page offline, you can use\n   * {@link Page.setOfflineMode}.\n   *\n   * A list of predefined network conditions can be used by importing\n   * {@link PredefinedNetworkConditions}.\n   *\n   * @example\n   *\n   * ```ts\n   * import {PredefinedNetworkConditions} from 'puppeteer';\n   * const slow3G = PredefinedNetworkConditions['Slow 3G'];\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.emulateNetworkConditions(slow3G);\n   *   await page.goto('https://www.google.com');\n   *   // other actions...\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param networkConditions - Passing `null` disables network condition\n   * emulation.\n   */\n  emulateNetworkConditions(\n    networkConditions: NetworkConditions | null\n  ): Promise<void>;\n  emulateNetworkConditions(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This setting will change the default maximum navigation time for the\n   * following methods and related shortcuts:\n   *\n   * - {@link Page.goBack | page.goBack(options)}\n   *\n   * - {@link Page.goForward | page.goForward(options)}\n   *\n   * - {@link Page.goto | page.goto(url,options)}\n   *\n   * - {@link Page.reload | page.reload(options)}\n   *\n   * - {@link Page.setContent | page.setContent(html,options)}\n   *\n   * - {@link Page.waitForNavigation | page.waitForNavigation(options)}\n   *   @param timeout - Maximum navigation time in milliseconds.\n   */\n  setDefaultNavigationTimeout(timeout: number): void;\n  setDefaultNavigationTimeout(): void {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param timeout - Maximum time in milliseconds.\n   */\n  setDefaultTimeout(timeout: number): void;\n  setDefaultTimeout(): void {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Maximum time in milliseconds.\n   */\n  getDefaultTimeout(): number {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Creates a locator for the provided `selector`. See {@link Locator} for\n   * details and supported actions.\n   *\n   * @remarks\n   * Locators API is experimental and we will not follow semver for breaking\n   * change in the Locators API.\n   */\n  locator(selector: string): Locator {\n    return Locator.create(this, selector);\n  }\n\n  /**\n   * Runs `document.querySelector` within the page. If no element matches the\n   * selector, the return value resolves to `null`.\n   *\n   * @param selector - A `selector` to query page for\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to query page for.\n   */\n  async $<Selector extends string>(\n    selector: Selector\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    return this.mainFrame().$(selector);\n  }\n\n  /**\n   * The method runs `document.querySelectorAll` within the page. If no elements\n   * match the selector, the return value resolves to `[]`.\n   * @remarks\n   * Shortcut for {@link Frame.$$ | Page.mainFrame().$$(selector) }.\n   * @param selector - A `selector` to query page for\n   */\n  async $$<Selector extends string>(\n    selector: Selector\n  ): Promise<Array<ElementHandle<NodeFor<Selector>>>> {\n    return this.mainFrame().$$(selector);\n  }\n\n  /**\n   * @remarks\n   *\n   * The only difference between {@link Page.evaluate | page.evaluate} and\n   * `page.evaluateHandle` is that `evaluateHandle` will return the value\n   * wrapped in an in-page object.\n   *\n   * If the function passed to `page.evaluateHandle` returns a Promise, the\n   * function will wait for the promise to resolve and return its value.\n   *\n   * You can pass a string instead of a function (although functions are\n   * recommended as they are easier to debug and use with TypeScript):\n   *\n   * @example\n   *\n   * ```ts\n   * const aHandle = await page.evaluateHandle('document');\n   * ```\n   *\n   * @example\n   * {@link JSHandle} instances can be passed as arguments to the `pageFunction`:\n   *\n   * ```ts\n   * const aHandle = await page.evaluateHandle(() => document.body);\n   * const resultHandle = await page.evaluateHandle(\n   *   body => body.innerHTML,\n   *   aHandle\n   * );\n   * console.log(await resultHandle.jsonValue());\n   * await resultHandle.dispose();\n   * ```\n   *\n   * Most of the time this function returns a {@link JSHandle},\n   * but if `pageFunction` returns a reference to an element,\n   * you instead get an {@link ElementHandle} back:\n   *\n   * @example\n   *\n   * ```ts\n   * const button = await page.evaluateHandle(() =>\n   *   document.querySelector('button')\n   * );\n   * // can call `click` because `button` is an `ElementHandle`\n   * await button.click();\n   * ```\n   *\n   * The TypeScript definitions assume that `evaluateHandle` returns\n   * a `JSHandle`, but if you know it's going to return an\n   * `ElementHandle`, pass it as the generic argument:\n   *\n   * ```ts\n   * const button = await page.evaluateHandle<ElementHandle>(...);\n   * ```\n   *\n   * @param pageFunction - a function that is run within the page\n   * @param args - arguments to be passed to the pageFunction\n   */\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>>;\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method iterates the JavaScript heap and finds all objects with the\n   * given prototype.\n   *\n   * @example\n   *\n   * ```ts\n   * // Create a Map object\n   * await page.evaluate(() => (window.map = new Map()));\n   * // Get a handle to the Map object prototype\n   * const mapPrototype = await page.evaluateHandle(() => Map.prototype);\n   * // Query all map instances into an array\n   * const mapInstances = await page.queryObjects(mapPrototype);\n   * // Count amount of map objects in heap\n   * const count = await page.evaluate(maps => maps.length, mapInstances);\n   * await mapInstances.dispose();\n   * await mapPrototype.dispose();\n   * ```\n   *\n   * @param prototypeHandle - a handle to the object prototype.\n   * @returns Promise which resolves to a handle to an array of objects with\n   * this prototype.\n   */\n  async queryObjects<Prototype>(\n    prototypeHandle: JSHandle<Prototype>\n  ): Promise<JSHandle<Prototype[]>>;\n  async queryObjects<Prototype>(): Promise<JSHandle<Prototype[]>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method runs `document.querySelector` within the page and passes the\n   * result as the first argument to the `pageFunction`.\n   *\n   * @remarks\n   *\n   * If no element is found matching `selector`, the method will throw an error.\n   *\n   * If `pageFunction` returns a promise `$eval` will wait for the promise to\n   * resolve and then return its value.\n   *\n   * @example\n   *\n   * ```ts\n   * const searchValue = await page.$eval('#search', el => el.value);\n   * const preloadHref = await page.$eval('link[rel=preload]', el => el.href);\n   * const html = await page.$eval('.main-container', el => el.outerHTML);\n   * ```\n   *\n   * If you are using TypeScript, you may have to provide an explicit type to the\n   * first argument of the `pageFunction`.\n   * By default it is typed as `Element`, but you may need to provide a more\n   * specific sub-type:\n   *\n   * @example\n   *\n   * ```ts\n   * // if you don't provide HTMLInputElement here, TS will error\n   * // as `value` is not on `Element`\n   * const searchValue = await page.$eval(\n   *   '#search',\n   *   (el: HTMLInputElement) => el.value\n   * );\n   * ```\n   *\n   * The compiler should be able to infer the return type\n   * from the `pageFunction` you provide. If it is unable to, you can use the generic\n   * type to tell the compiler what return type you expect from `$eval`:\n   *\n   * @example\n   *\n   * ```ts\n   * // The compiler can infer the return type in this case, but if it can't\n   * // or if you want to be more explicit, provide it as the generic type.\n   * const searchValue = await page.$eval<string>(\n   *   '#search',\n   *   (el: HTMLInputElement) => el.value\n   * );\n   * ```\n   *\n   * @param selector - the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to query for\n   * @param pageFunction - the function to be evaluated in the page context.\n   * Will be passed the result of `document.querySelector(selector)` as its\n   * first argument.\n   * @param args - any additional arguments to pass through to `pageFunction`.\n   *\n   * @returns The result of calling `pageFunction`. If it returns an element it\n   * is wrapped in an {@link ElementHandle}, else the raw value itself is\n   * returned.\n   */\n  async $eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<NodeFor<Selector>, Params> = EvaluateFuncWith<\n      NodeFor<Selector>,\n      Params\n    >\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$eval.name, pageFunction);\n    return this.mainFrame().$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * This method runs `Array.from(document.querySelectorAll(selector))` within\n   * the page and passes the result as the first argument to the `pageFunction`.\n   *\n   * @remarks\n   * If `pageFunction` returns a promise `$$eval` will wait for the promise to\n   * resolve and then return its value.\n   *\n   * @example\n   *\n   * ```ts\n   * // get the amount of divs on the page\n   * const divCount = await page.$$eval('div', divs => divs.length);\n   *\n   * // get the text content of all the `.options` elements:\n   * const options = await page.$$eval('div > span.options', options => {\n   *   return options.map(option => option.textContent);\n   * });\n   * ```\n   *\n   * If you are using TypeScript, you may have to provide an explicit type to the\n   * first argument of the `pageFunction`.\n   * By default it is typed as `Element[]`, but you may need to provide a more\n   * specific sub-type:\n   *\n   * @example\n   *\n   * ```ts\n   * // if you don't provide HTMLInputElement here, TS will error\n   * // as `value` is not on `Element`\n   * await page.$$eval('input', (elements: HTMLInputElement[]) => {\n   *   return elements.map(e => e.value);\n   * });\n   * ```\n   *\n   * The compiler should be able to infer the return type\n   * from the `pageFunction` you provide. If it is unable to, you can use the generic\n   * type to tell the compiler what return type you expect from `$$eval`:\n   *\n   * @example\n   *\n   * ```ts\n   * // The compiler can infer the return type in this case, but if it can't\n   * // or if you want to be more explicit, provide it as the generic type.\n   * const allInputValues = await page.$$eval<string[]>(\n   *   'input',\n   *   (elements: HTMLInputElement[]) => elements.map(e => e.textContent)\n   * );\n   * ```\n   *\n   * @param selector - the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to query for\n   * @param pageFunction - the function to be evaluated in the page context.\n   * Will be passed the result of\n   * `Array.from(document.querySelectorAll(selector))` as its first argument.\n   * @param args - any additional arguments to pass through to `pageFunction`.\n   *\n   * @returns The result of calling `pageFunction`. If it returns an element it\n   * is wrapped in an {@link ElementHandle}, else the raw value itself is\n   * returned.\n   */\n  async $$eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<\n      Array<NodeFor<Selector>>,\n      Params\n    > = EvaluateFuncWith<Array<NodeFor<Selector>>, Params>\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$$eval.name, pageFunction);\n    return this.mainFrame().$$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * The method evaluates the XPath expression relative to the page document as\n   * its context node. If there are no such elements, the method resolves to an\n   * empty array.\n   *\n   * @remarks\n   * Shortcut for {@link Frame.$x | Page.mainFrame().$x(expression) }.\n   *\n   * @param expression - Expression to evaluate\n   */\n  async $x(expression: string): Promise<Array<ElementHandle<Node>>> {\n    return this.mainFrame().$x(expression);\n  }\n\n  /**\n   * If no URLs are specified, this method returns cookies for the current page\n   * URL. If URLs are specified, only cookies for those URLs are returned.\n   */\n  async cookies(...urls: string[]): Promise<Protocol.Network.Cookie[]>;\n  async cookies(): Promise<Protocol.Network.Cookie[]> {\n    throw new Error('Not implemented');\n  }\n\n  async deleteCookie(\n    ...cookies: Protocol.Network.DeleteCookiesRequest[]\n  ): Promise<void>;\n  async deleteCookie(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @example\n   *\n   * ```ts\n   * await page.setCookie(cookieObject1, cookieObject2);\n   * ```\n   */\n  async setCookie(...cookies: Protocol.Network.CookieParam[]): Promise<void>;\n  async setCookie(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Adds a `<script>` tag into the page with the desired URL or content.\n   *\n   * @remarks\n   * Shortcut for\n   * {@link Frame.addScriptTag | page.mainFrame().addScriptTag(options)}.\n   *\n   * @param options - Options for the script.\n   * @returns An {@link ElementHandle | element handle} to the injected\n   * `<script>` element.\n   */\n  async addScriptTag(\n    options: FrameAddScriptTagOptions\n  ): Promise<ElementHandle<HTMLScriptElement>>;\n  async addScriptTag(): Promise<ElementHandle<HTMLScriptElement>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Adds a `<link rel=\"stylesheet\">` tag into the page with the desired URL or\n   * a `<style type=\"text/css\">` tag with the content.\n   *\n   * Shortcut for\n   * {@link Frame.(addStyleTag:2) | page.mainFrame().addStyleTag(options)}.\n   *\n   * @returns An {@link ElementHandle | element handle} to the injected `<link>`\n   * or `<style>` element.\n   */\n  async addStyleTag(\n    options: Omit<FrameAddStyleTagOptions, 'url'>\n  ): Promise<ElementHandle<HTMLStyleElement>>;\n  async addStyleTag(\n    options: FrameAddStyleTagOptions\n  ): Promise<ElementHandle<HTMLLinkElement>>;\n  async addStyleTag(\n    options: FrameAddStyleTagOptions\n  ): Promise<ElementHandle<HTMLStyleElement | HTMLLinkElement>>;\n  async addStyleTag(): Promise<\n    ElementHandle<HTMLStyleElement | HTMLLinkElement>\n  > {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The method adds a function called `name` on the page's `window` object.\n   * When called, the function executes `puppeteerFunction` in node.js and\n   * returns a `Promise` which resolves to the return value of\n   * `puppeteerFunction`.\n   *\n   * If the puppeteerFunction returns a `Promise`, it will be awaited.\n   *\n   * :::note\n   *\n   * Functions installed via `page.exposeFunction` survive navigations.\n   *\n   * :::note\n   *\n   * @example\n   * An example of adding an `md5` function into the page:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * import crypto from 'crypto';\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   page.on('console', msg => console.log(msg.text()));\n   *   await page.exposeFunction('md5', text =>\n   *     crypto.createHash('md5').update(text).digest('hex')\n   *   );\n   *   await page.evaluate(async () => {\n   *     // use window.md5 to compute hashes\n   *     const myString = 'PUPPETEER';\n   *     const myHash = await window.md5(myString);\n   *     console.log(`md5 of ${myString} is ${myHash}`);\n   *   });\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @example\n   * An example of adding a `window.readfile` function into the page:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * import fs from 'fs';\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   page.on('console', msg => console.log(msg.text()));\n   *   await page.exposeFunction('readfile', async filePath => {\n   *     return new Promise((resolve, reject) => {\n   *       fs.readFile(filePath, 'utf8', (err, text) => {\n   *         if (err) reject(err);\n   *         else resolve(text);\n   *       });\n   *     });\n   *   });\n   *   await page.evaluate(async () => {\n   *     // use window.readfile to read contents of a file\n   *     const content = await window.readfile('/etc/hosts');\n   *     console.log(content);\n   *   });\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param name - Name of the function on the window object\n   * @param pptrFunction - Callback function which will be called in Puppeteer's\n   * context.\n   */\n  async exposeFunction(\n    name: string,\n    pptrFunction: Function | {default: Function}\n  ): Promise<void>;\n  async exposeFunction(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The method removes a previously added function via ${@link Page.exposeFunction}\n   * called `name` from the page's `window` object.\n   */\n  async removeExposedFunction(name: string): Promise<void>;\n  async removeExposedFunction(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Provide credentials for `HTTP authentication`.\n   *\n   * @remarks\n   * To disable authentication, pass `null`.\n   */\n  async authenticate(credentials: Credentials): Promise<void>;\n  async authenticate(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The extra HTTP headers will be sent with every request the page initiates.\n   *\n   * :::tip\n   *\n   * All HTTP header names are lowercased. (HTTP headers are\n   * case-insensitive, so this shouldn\u2019t impact your server code.)\n   *\n   * :::\n   *\n   * :::note\n   *\n   * page.setExtraHTTPHeaders does not guarantee the order of headers in\n   * the outgoing requests.\n   *\n   * :::\n   *\n   * @param headers - An object containing additional HTTP headers to be sent\n   * with every request. All header values must be strings.\n   */\n  async setExtraHTTPHeaders(headers: Record<string, string>): Promise<void>;\n  async setExtraHTTPHeaders(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param userAgent - Specific user agent to use in this page\n   * @param userAgentData - Specific user agent client hint data to use in this\n   * page\n   * @returns Promise which resolves when the user agent is set.\n   */\n  async setUserAgent(\n    userAgent: string,\n    userAgentMetadata?: Protocol.Emulation.UserAgentMetadata\n  ): Promise<void>;\n  async setUserAgent(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Object containing metrics as key/value pairs.\n   *\n   * @returns\n   *\n   * - `Timestamp` : The timestamp when the metrics sample was taken.\n   *\n   * - `Documents` : Number of documents in the page.\n   *\n   * - `Frames` : Number of frames in the page.\n   *\n   * - `JSEventListeners` : Number of events in the page.\n   *\n   * - `Nodes` : Number of DOM nodes in the page.\n   *\n   * - `LayoutCount` : Total number of full or partial page layout.\n   *\n   * - `RecalcStyleCount` : Total number of page style recalculations.\n   *\n   * - `LayoutDuration` : Combined durations of all page layouts.\n   *\n   * - `RecalcStyleDuration` : Combined duration of all page style\n   *   recalculations.\n   *\n   * - `ScriptDuration` : Combined duration of JavaScript execution.\n   *\n   * - `TaskDuration` : Combined duration of all tasks performed by the browser.\n   *\n   * - `JSHeapUsedSize` : Used JavaScript heap size.\n   *\n   * - `JSHeapTotalSize` : Total JavaScript heap size.\n   *\n   * @remarks\n   * All timestamps are in monotonic time: monotonically increasing time\n   * in seconds since an arbitrary point in the past.\n   */\n  async metrics(): Promise<Metrics> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The page's URL.\n   * @remarks Shortcut for\n   * {@link Frame.url | page.mainFrame().url()}.\n   */\n  url(): string {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The full HTML contents of the page, including the DOCTYPE.\n   */\n  async content(): Promise<string> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Set the content of the page.\n   *\n   * @param html - HTML markup to assign to the page.\n   * @param options - Parameters that has some properties.\n   * @remarks\n   * The parameter `options` might have the following options.\n   *\n   * - `timeout` : Maximum time in milliseconds for resources to load, defaults\n   *   to 30 seconds, pass `0` to disable timeout. The default value can be\n   *   changed by using the {@link Page.setDefaultNavigationTimeout} or\n   *   {@link Page.setDefaultTimeout} methods.\n   *\n   * - `waitUntil`: When to consider setting markup succeeded, defaults to\n   *   `load`. Given an array of event strings, setting content is considered\n   *   to be successful after all events have been fired. Events can be\n   *   either:<br/>\n   * - `load` : consider setting content to be finished when the `load` event\n   *   is fired.<br/>\n   * - `domcontentloaded` : consider setting content to be finished when the\n   *   `DOMContentLoaded` event is fired.<br/>\n   * - `networkidle0` : consider setting content to be finished when there are\n   *   no more than 0 network connections for at least `500` ms.<br/>\n   * - `networkidle2` : consider setting content to be finished when there are\n   *   no more than 2 network connections for at least `500` ms.\n   */\n  async setContent(html: string, options?: WaitForOptions): Promise<void>;\n  async setContent(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param url - URL to navigate page to. The URL should include scheme, e.g.\n   * `https://`\n   * @param options - Navigation Parameter\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect.\n   * @remarks\n   * The argument `options` might have the following properties:\n   *\n   * - `timeout` : Maximum navigation time in milliseconds, defaults to 30\n   *   seconds, pass 0 to disable timeout. The default value can be changed by\n   *   using the {@link Page.setDefaultNavigationTimeout} or\n   *   {@link Page.setDefaultTimeout} methods.\n   *\n   * - `waitUntil`:When to consider navigation succeeded, defaults to `load`.\n   *   Given an array of event strings, navigation is considered to be\n   *   successful after all events have been fired. Events can be either:<br/>\n   * - `load` : consider navigation to be finished when the load event is\n   *   fired.<br/>\n   * - `domcontentloaded` : consider navigation to be finished when the\n   *   DOMContentLoaded event is fired.<br/>\n   * - `networkidle0` : consider navigation to be finished when there are no\n   *   more than 0 network connections for at least `500` ms.<br/>\n   * - `networkidle2` : consider navigation to be finished when there are no\n   *   more than 2 network connections for at least `500` ms.\n   *\n   * - `referer` : Referer header value. If provided it will take preference\n   *   over the referer header value set by\n   *   {@link Page.setExtraHTTPHeaders |page.setExtraHTTPHeaders()}.<br/>\n   * - `referrerPolicy` : ReferrerPolicy. If provided it will take preference\n   *   over the referer-policy header value set by\n   *   {@link Page.setExtraHTTPHeaders |page.setExtraHTTPHeaders()}.\n   *\n   * `page.goto` will throw an error if:\n   *\n   * - there's an SSL error (e.g. in case of self-signed certificates).\n   * - target URL is invalid.\n   * - the timeout is exceeded during navigation.\n   * - the remote server does not respond or is unreachable.\n   * - the main resource failed to load.\n   *\n   * `page.goto` will not throw an error when any valid HTTP status code is\n   * returned by the remote server, including 404 \"Not Found\" and 500\n   * \"Internal Server Error\". The status code for such responses can be\n   * retrieved by calling response.status().\n   *\n   * NOTE: `page.goto` either throws an error or returns a main resource\n   * response. The only exceptions are navigation to about:blank or navigation\n   * to the same URL with a different hash, which would succeed and return null.\n   *\n   * NOTE: Headless mode doesn't support navigation to a PDF document. See the\n   * {@link https://bugs.chromium.org/p/chromium/issues/detail?id=761295 |\n   * upstream issue}.\n   *\n   * Shortcut for {@link Frame.goto | page.mainFrame().goto(url, options)}.\n   */\n  async goto(\n    url: string,\n    options?: WaitForOptions & {referer?: string; referrerPolicy?: string}\n  ): Promise<HTTPResponse | null>;\n  async goto(): Promise<HTTPResponse | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param options - Navigation parameters which might have the following\n   * properties:\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect.\n   * @remarks\n   * The argument `options` might have the following properties:\n   *\n   * - `timeout` : Maximum navigation time in milliseconds, defaults to 30\n   *   seconds, pass 0 to disable timeout. The default value can be changed by\n   *   using the {@link Page.setDefaultNavigationTimeout} or\n   *   {@link Page.setDefaultTimeout} methods.\n   *\n   * - `waitUntil`: When to consider navigation succeeded, defaults to `load`.\n   *   Given an array of event strings, navigation is considered to be\n   *   successful after all events have been fired. Events can be either:<br/>\n   * - `load` : consider navigation to be finished when the load event is\n   *   fired.<br/>\n   * - `domcontentloaded` : consider navigation to be finished when the\n   *   DOMContentLoaded event is fired.<br/>\n   * - `networkidle0` : consider navigation to be finished when there are no\n   *   more than 0 network connections for at least `500` ms.<br/>\n   * - `networkidle2` : consider navigation to be finished when there are no\n   *   more than 2 network connections for at least `500` ms.\n   */\n  async reload(options?: WaitForOptions): Promise<HTTPResponse | null>;\n  async reload(): Promise<HTTPResponse | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Waits for the page to navigate to a new URL or to reload. It is useful when\n   * you run code that will indirectly cause the page to navigate.\n   *\n   * @example\n   *\n   * ```ts\n   * const [response] = await Promise.all([\n   *   page.waitForNavigation(), // The promise resolves after navigation has finished\n   *   page.click('a.my-link'), // Clicking the link will indirectly cause a navigation\n   * ]);\n   * ```\n   *\n   * @remarks\n   * Usage of the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/History_API | History API}\n   * to change the URL is considered a navigation.\n   *\n   * @param options - Navigation parameters which might have the following\n   * properties:\n   * @returns A `Promise` which resolves to the main resource response.\n   *\n   * - In case of multiple redirects, the navigation will resolve with the\n   *   response of the last redirect.\n   * - In case of navigation to a different anchor or navigation due to History\n   *   API usage, the navigation will resolve with `null`.\n   */\n  async waitForNavigation(\n    options?: WaitForOptions\n  ): Promise<HTTPResponse | null>;\n  async waitForNavigation(): Promise<HTTPResponse | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param urlOrPredicate - A URL or predicate to wait for\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves to the matched request\n   * @example\n   *\n   * ```ts\n   * const firstRequest = await page.waitForRequest(\n   *   'https://example.com/resource'\n   * );\n   * const finalRequest = await page.waitForRequest(\n   *   request => request.url() === 'https://example.com'\n   * );\n   * return finalRequest.response()?.ok();\n   * ```\n   *\n   * @remarks\n   * Optional Waiting Parameters have:\n   *\n   * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds, pass\n   *   `0` to disable the timeout. The default value can be changed by using the\n   *   {@link Page.setDefaultTimeout} method.\n   */\n  async waitForRequest(\n    urlOrPredicate: string | ((req: HTTPRequest) => boolean | Promise<boolean>),\n    options?: {timeout?: number}\n  ): Promise<HTTPRequest>;\n  async waitForRequest(): Promise<HTTPRequest> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param urlOrPredicate - A URL or predicate to wait for.\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves to the matched response.\n   * @example\n   *\n   * ```ts\n   * const firstResponse = await page.waitForResponse(\n   *   'https://example.com/resource'\n   * );\n   * const finalResponse = await page.waitForResponse(\n   *   response =>\n   *     response.url() === 'https://example.com' && response.status() === 200\n   * );\n   * const finalResponse = await page.waitForResponse(async response => {\n   *   return (await response.text()).includes('<html>');\n   * });\n   * return finalResponse.ok();\n   * ```\n   *\n   * @remarks\n   * Optional Parameter have:\n   *\n   * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds,\n   *   pass `0` to disable the timeout. The default value can be changed by using\n   *   the {@link Page.setDefaultTimeout} method.\n   */\n  async waitForResponse(\n    urlOrPredicate:\n      | string\n      | ((res: HTTPResponse) => boolean | Promise<boolean>),\n    options?: {timeout?: number}\n  ): Promise<HTTPResponse>;\n  async waitForResponse(): Promise<HTTPResponse> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves when network is idle\n   */\n  async waitForNetworkIdle(options?: {\n    idleTime?: number;\n    timeout?: number;\n  }): Promise<void>;\n  async waitForNetworkIdle(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  protected async _waitForNetworkIdle(\n    networkManager: EventEmitter & {\n      inFlightRequestsCount: () => number;\n    },\n    idleTime: number,\n    timeout: number,\n    closedDeferred: Deferred<TargetCloseError>\n  ): Promise<void> {\n    const idleDeferred = Deferred.create<void>();\n    const abortDeferred = Deferred.create<Error>();\n\n    let idleTimer: NodeJS.Timeout | undefined;\n    const cleanup = () => {\n      clearTimeout(idleTimer);\n      abortDeferred.reject(new Error('abort'));\n    };\n\n    const evaluate = () => {\n      clearTimeout(idleTimer);\n\n      if (networkManager.inFlightRequestsCount() === 0) {\n        idleTimer = setTimeout(() => {\n          return idleDeferred.resolve();\n        }, idleTime);\n      }\n    };\n\n    const listenToEvent = (event: symbol) => {\n      return waitForEvent(\n        networkManager,\n        event,\n        () => {\n          evaluate();\n          return false;\n        },\n        timeout,\n        abortDeferred\n      );\n    };\n\n    const eventPromises = [\n      listenToEvent(NetworkManagerEmittedEvents.Request),\n      listenToEvent(NetworkManagerEmittedEvents.Response),\n      listenToEvent(NetworkManagerEmittedEvents.RequestFailed),\n    ];\n\n    evaluate();\n\n    // We don't want to reject the closed deferred when\n    // the race if finished so we pass the Promise instead\n    const closedPromise = closedDeferred.valueOrThrow();\n\n    await Deferred.race([idleDeferred, ...eventPromises, closedPromise]).then(\n      r => {\n        cleanup();\n        return r;\n      },\n      error => {\n        cleanup();\n        throw error;\n      }\n    );\n  }\n\n  /**\n   * @param urlOrPredicate - A URL or predicate to wait for.\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves to the matched frame.\n   * @example\n   *\n   * ```ts\n   * const frame = await page.waitForFrame(async frame => {\n   *   return frame.name() === 'Test';\n   * });\n   * ```\n   *\n   * @remarks\n   * Optional Parameter have:\n   *\n   * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds,\n   *   pass `0` to disable the timeout. The default value can be changed by using\n   *   the {@link Page.setDefaultTimeout} method.\n   */\n  async waitForFrame(\n    urlOrPredicate: string | ((frame: Frame) => boolean | Promise<boolean>),\n    options?: {timeout?: number}\n  ): Promise<Frame>;\n  async waitForFrame(): Promise<Frame> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method navigate to the previous page in history.\n   * @param options - Navigation parameters\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect. If can not go back, resolves to `null`.\n   * @remarks\n   * The argument `options` might have the following properties:\n   *\n   * - `timeout` : Maximum navigation time in milliseconds, defaults to 30\n   *   seconds, pass 0 to disable timeout. The default value can be changed by\n   *   using the {@link Page.setDefaultNavigationTimeout} or\n   *   {@link Page.setDefaultTimeout} methods.\n   *\n   * - `waitUntil` : When to consider navigation succeeded, defaults to `load`.\n   *   Given an array of event strings, navigation is considered to be\n   *   successful after all events have been fired. Events can be either:<br/>\n   * - `load` : consider navigation to be finished when the load event is\n   *   fired.<br/>\n   * - `domcontentloaded` : consider navigation to be finished when the\n   *   DOMContentLoaded event is fired.<br/>\n   * - `networkidle0` : consider navigation to be finished when there are no\n   *   more than 0 network connections for at least `500` ms.<br/>\n   * - `networkidle2` : consider navigation to be finished when there are no\n   *   more than 2 network connections for at least `500` ms.\n   */\n  async goBack(options?: WaitForOptions): Promise<HTTPResponse | null>;\n  async goBack(): Promise<HTTPResponse | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method navigate to the next page in history.\n   * @param options - Navigation Parameter\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect. If can not go forward, resolves to `null`.\n   * @remarks\n   * The argument `options` might have the following properties:\n   *\n   * - `timeout` : Maximum navigation time in milliseconds, defaults to 30\n   *   seconds, pass 0 to disable timeout. The default value can be changed by\n   *   using the {@link Page.setDefaultNavigationTimeout} or\n   *   {@link Page.setDefaultTimeout} methods.\n   *\n   * - `waitUntil`: When to consider navigation succeeded, defaults to `load`.\n   *   Given an array of event strings, navigation is considered to be\n   *   successful after all events have been fired. Events can be either:<br/>\n   * - `load` : consider navigation to be finished when the load event is\n   *   fired.<br/>\n   * - `domcontentloaded` : consider navigation to be finished when the\n   *   DOMContentLoaded event is fired.<br/>\n   * - `networkidle0` : consider navigation to be finished when there are no\n   *   more than 0 network connections for at least `500` ms.<br/>\n   * - `networkidle2` : consider navigation to be finished when there are no\n   *   more than 2 network connections for at least `500` ms.\n   */\n  async goForward(options?: WaitForOptions): Promise<HTTPResponse | null>;\n  async goForward(): Promise<HTTPResponse | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Brings page to front (activates tab).\n   */\n  async bringToFront(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Emulates a given device's metrics and user agent.\n   *\n   * To aid emulation, Puppeteer provides a list of known devices that can be\n   * via {@link KnownDevices}.\n   *\n   * @remarks\n   * This method is a shortcut for calling two methods:\n   * {@link Page.setUserAgent} and {@link Page.setViewport}.\n   *\n   * @remarks\n   * This method will resize the page. A lot of websites don't expect phones to\n   * change size, so you should emulate before navigating to the page.\n   *\n   * @example\n   *\n   * ```ts\n   * import {KnownDevices} from 'puppeteer';\n   * const iPhone = KnownDevices['iPhone 6'];\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.emulate(iPhone);\n   *   await page.goto('https://www.google.com');\n   *   // other actions...\n   *   await browser.close();\n   * })();\n   * ```\n   */\n  async emulate(device: Device): Promise<void> {\n    await Promise.all([\n      this.setUserAgent(device.userAgent),\n      this.setViewport(device.viewport),\n    ]);\n  }\n\n  /**\n   * @param enabled - Whether or not to enable JavaScript on the page.\n   * @remarks\n   * NOTE: changing this value won't affect scripts that have already been run.\n   * It will take full effect on the next navigation.\n   */\n  async setJavaScriptEnabled(enabled: boolean): Promise<void>;\n  async setJavaScriptEnabled(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Toggles bypassing page's Content-Security-Policy.\n   * @param enabled - sets bypassing of page's Content-Security-Policy.\n   * @remarks\n   * NOTE: CSP bypassing happens at the moment of CSP initialization rather than\n   * evaluation. Usually, this means that `page.setBypassCSP` should be called\n   * before navigating to the domain.\n   */\n  async setBypassCSP(enabled: boolean): Promise<void>;\n  async setBypassCSP(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param type - Changes the CSS media type of the page. The only allowed\n   * values are `screen`, `print` and `null`. Passing `null` disables CSS media\n   * emulation.\n   * @example\n   *\n   * ```ts\n   * await page.evaluate(() => matchMedia('screen').matches);\n   * // \u2192 true\n   * await page.evaluate(() => matchMedia('print').matches);\n   * // \u2192 false\n   *\n   * await page.emulateMediaType('print');\n   * await page.evaluate(() => matchMedia('screen').matches);\n   * // \u2192 false\n   * await page.evaluate(() => matchMedia('print').matches);\n   * // \u2192 true\n   *\n   * await page.emulateMediaType(null);\n   * await page.evaluate(() => matchMedia('screen').matches);\n   * // \u2192 true\n   * await page.evaluate(() => matchMedia('print').matches);\n   * // \u2192 false\n   * ```\n   */\n  async emulateMediaType(type?: string): Promise<void>;\n  async emulateMediaType(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Enables CPU throttling to emulate slow CPUs.\n   * @param factor - slowdown factor (1 is no throttle, 2 is 2x slowdown, etc).\n   */\n  async emulateCPUThrottling(factor: number | null): Promise<void>;\n  async emulateCPUThrottling(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param features - `<?Array<Object>>` Given an array of media feature\n   * objects, emulates CSS media features on the page. Each media feature object\n   * must have the following properties:\n   * @example\n   *\n   * ```ts\n   * await page.emulateMediaFeatures([\n   *   {name: 'prefers-color-scheme', value: 'dark'},\n   * ]);\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-color-scheme: dark)').matches\n   * );\n   * // \u2192 true\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-color-scheme: light)').matches\n   * );\n   * // \u2192 false\n   *\n   * await page.emulateMediaFeatures([\n   *   {name: 'prefers-reduced-motion', value: 'reduce'},\n   * ]);\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-reduced-motion: reduce)').matches\n   * );\n   * // \u2192 true\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-reduced-motion: no-preference)').matches\n   * );\n   * // \u2192 false\n   *\n   * await page.emulateMediaFeatures([\n   *   {name: 'prefers-color-scheme', value: 'dark'},\n   *   {name: 'prefers-reduced-motion', value: 'reduce'},\n   * ]);\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-color-scheme: dark)').matches\n   * );\n   * // \u2192 true\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-color-scheme: light)').matches\n   * );\n   * // \u2192 false\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-reduced-motion: reduce)').matches\n   * );\n   * // \u2192 true\n   * await page.evaluate(\n   *   () => matchMedia('(prefers-reduced-motion: no-preference)').matches\n   * );\n   * // \u2192 false\n   *\n   * await page.emulateMediaFeatures([{name: 'color-gamut', value: 'p3'}]);\n   * await page.evaluate(() => matchMedia('(color-gamut: srgb)').matches);\n   * // \u2192 true\n   * await page.evaluate(() => matchMedia('(color-gamut: p3)').matches);\n   * // \u2192 true\n   * await page.evaluate(() => matchMedia('(color-gamut: rec2020)').matches);\n   * // \u2192 false\n   * ```\n   */\n  async emulateMediaFeatures(features?: MediaFeature[]): Promise<void>;\n  async emulateMediaFeatures(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @param timezoneId - Changes the timezone of the page. See\n   * {@link https://source.chromium.org/chromium/chromium/deps/icu.git/+/faee8bc70570192d82d2978a71e2a615788597d1:source/data/misc/metaZones.txt | ICU\u2019s metaZones.txt}\n   * for a list of supported timezone IDs. Passing\n   * `null` disables timezone emulation.\n   */\n  async emulateTimezone(timezoneId?: string): Promise<void>;\n  async emulateTimezone(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Emulates the idle state.\n   * If no arguments set, clears idle state emulation.\n   *\n   * @example\n   *\n   * ```ts\n   * // set idle emulation\n   * await page.emulateIdleState({isUserActive: true, isScreenUnlocked: false});\n   *\n   * // do some checks here\n   * ...\n   *\n   * // clear idle emulation\n   * await page.emulateIdleState();\n   * ```\n   *\n   * @param overrides - Mock idle state. If not set, clears idle overrides\n   */\n  async emulateIdleState(overrides?: {\n    isUserActive: boolean;\n    isScreenUnlocked: boolean;\n  }): Promise<void>;\n  async emulateIdleState(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Simulates the given vision deficiency on the page.\n   *\n   * @example\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.goto('https://v8.dev/blog/10-years');\n   *\n   *   await page.emulateVisionDeficiency('achromatopsia');\n   *   await page.screenshot({path: 'achromatopsia.png'});\n   *\n   *   await page.emulateVisionDeficiency('deuteranopia');\n   *   await page.screenshot({path: 'deuteranopia.png'});\n   *\n   *   await page.emulateVisionDeficiency('blurredVision');\n   *   await page.screenshot({path: 'blurred-vision.png'});\n   *\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param type - the type of deficiency to simulate, or `'none'` to reset.\n   */\n  async emulateVisionDeficiency(\n    type?: Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type']\n  ): Promise<void>;\n  async emulateVisionDeficiency(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * `page.setViewport` will resize the page. A lot of websites don't expect\n   * phones to change size, so you should set the viewport before navigating to\n   * the page.\n   *\n   * In the case of multiple pages in a single browser, each page can have its\n   * own viewport size.\n   * @example\n   *\n   * ```ts\n   * const page = await browser.newPage();\n   * await page.setViewport({\n   *   width: 640,\n   *   height: 480,\n   *   deviceScaleFactor: 1,\n   * });\n   * await page.goto('https://example.com');\n   * ```\n   *\n   * @param viewport -\n   * @remarks\n   * Argument viewport have following properties:\n   *\n   * - `width`: page width in pixels. required\n   *\n   * - `height`: page height in pixels. required\n   *\n   * - `deviceScaleFactor`: Specify device scale factor (can be thought of as\n   *   DPR). Defaults to `1`.\n   *\n   * - `isMobile`: Whether the meta viewport tag is taken into account. Defaults\n   *   to `false`.\n   *\n   * - `hasTouch`: Specifies if viewport supports touch events. Defaults to `false`\n   *\n   * - `isLandScape`: Specifies if viewport is in landscape mode. Defaults to false.\n   *\n   * NOTE: in certain cases, setting viewport will reload the page in order to\n   * set the isMobile or hasTouch properties.\n   */\n  async setViewport(viewport: Viewport): Promise<void>;\n  async setViewport(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Current page viewport settings.\n   *\n   * @returns\n   *\n   * - `width`: page's width in pixels\n   *\n   * - `height`: page's height in pixels\n   *\n   * - `deviceScaleFactor`: Specify device scale factor (can be though of as\n   *   dpr). Defaults to `1`.\n   *\n   * - `isMobile`: Whether the meta viewport tag is taken into account. Defaults\n   *   to `false`.\n   *\n   * - `hasTouch`: Specifies if viewport supports touch events. Defaults to\n   *   `false`.\n   *\n   * - `isLandScape`: Specifies if viewport is in landscape mode. Defaults to\n   *   `false`.\n   */\n  viewport(): Viewport | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Evaluates a function in the page's context and returns the result.\n   *\n   * If the function passed to `page.evaluateHandle` returns a Promise, the\n   * function will wait for the promise to resolve and return its value.\n   *\n   * @example\n   *\n   * ```ts\n   * const result = await frame.evaluate(() => {\n   *   return Promise.resolve(8 * 7);\n   * });\n   * console.log(result); // prints \"56\"\n   * ```\n   *\n   * You can pass a string instead of a function (although functions are\n   * recommended as they are easier to debug and use with TypeScript):\n   *\n   * @example\n   *\n   * ```ts\n   * const aHandle = await page.evaluate('1 + 2');\n   * ```\n   *\n   * To get the best TypeScript experience, you should pass in as the\n   * generic the type of `pageFunction`:\n   *\n   * ```ts\n   * const aHandle = await page.evaluate(() => 2);\n   * ```\n   *\n   * @example\n   *\n   * {@link ElementHandle} instances (including {@link JSHandle}s) can be passed\n   * as arguments to the `pageFunction`:\n   *\n   * ```ts\n   * const bodyHandle = await page.$('body');\n   * const html = await page.evaluate(body => body.innerHTML, bodyHandle);\n   * await bodyHandle.dispose();\n   * ```\n   *\n   * @param pageFunction - a function that is run within the page\n   * @param args - arguments to be passed to the pageFunction\n   *\n   * @returns the return value of `pageFunction`.\n   */\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>>;\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(): Promise<Awaited<ReturnType<Func>>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Adds a function which would be invoked in one of the following scenarios:\n   *\n   * - whenever the page is navigated\n   *\n   * - whenever the child frame is attached or navigated. In this case, the\n   *   function is invoked in the context of the newly attached frame.\n   *\n   * The function is invoked after the document was created but before any of\n   * its scripts were run. This is useful to amend the JavaScript environment,\n   * e.g. to seed `Math.random`.\n   * @param pageFunction - Function to be evaluated in browser context\n   * @param args - Arguments to pass to `pageFunction`\n   * @example\n   * An example of overriding the navigator.languages property before the page loads:\n   *\n   * ```ts\n   * // preload.js\n   *\n   * // overwrite the `languages` property to use a custom getter\n   * Object.defineProperty(navigator, 'languages', {\n   *   get: function () {\n   *     return ['en-US', 'en', 'bn'];\n   *   },\n   * });\n   *\n   * // In your puppeteer script, assuming the preload.js file is\n   * // in same folder of our script.\n   * const preloadFile = fs.readFileSync('./preload.js', 'utf8');\n   * await page.evaluateOnNewDocument(preloadFile);\n   * ```\n   */\n  async evaluateOnNewDocument<\n    Params extends unknown[],\n    Func extends (...args: Params) => unknown = (...args: Params) => unknown\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<NewDocumentScriptEvaluation>;\n  async evaluateOnNewDocument(): Promise<NewDocumentScriptEvaluation> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Removes script that injected into page by Page.evaluateOnNewDocument.\n   *\n   * @param identifier - script identifier\n   */\n  async removeScriptToEvaluateOnNewDocument(identifier: string): Promise<void>;\n  async removeScriptToEvaluateOnNewDocument(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Toggles ignoring cache for each request based on the enabled state. By\n   * default, caching is enabled.\n   * @param enabled - sets the `enabled` state of cache\n   * @defaultValue `true`\n   */\n  async setCacheEnabled(enabled?: boolean): Promise<void>;\n  async setCacheEnabled(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  async _maybeWriteBufferToFile(\n    path: string | undefined,\n    buffer: Buffer\n  ): Promise<void> {\n    if (!path) {\n      return;\n    }\n\n    const fs = await importFSPromises();\n\n    await fs.writeFile(path, buffer);\n  }\n\n  /**\n   * Captures screenshot of the current page.\n   *\n   * @remarks\n   * Options object which might have the following properties:\n   *\n   * - `path` : The file path to save the image to. The screenshot type\n   *   will be inferred from file extension. If `path` is a relative path, then\n   *   it is resolved relative to\n   *   {@link https://nodejs.org/api/process.html#process_process_cwd\n   *   | current working directory}.\n   *   If no path is provided, the image won't be saved to the disk.\n   *\n   * - `type` : Specify screenshot type, can be `jpeg`, `png` or `webp`.\n   *   Defaults to 'png'.\n   *\n   * - `quality` : The quality of the image, between 0-100. Not\n   *   applicable to `png` images.\n   *\n   * - `fullPage` : When true, takes a screenshot of the full\n   *   scrollable page. Defaults to `false`.\n   *\n   * - `clip` : An object which specifies clipping region of the page.\n   *   Should have the following fields:<br/>\n   * - `x` : x-coordinate of top-left corner of clip area.<br/>\n   * - `y` : y-coordinate of top-left corner of clip area.<br/>\n   * - `width` : width of clipping area.<br/>\n   * - `height` : height of clipping area.\n   *\n   * - `omitBackground` : Hides default white background and allows\n   *   capturing screenshots with transparency. Defaults to `false`.\n   *\n   * - `encoding` : The encoding of the image, can be either base64 or\n   *   binary. Defaults to `binary`.\n   *\n   * - `captureBeyondViewport` : When true, captures screenshot\n   *   {@link https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-captureScreenshot\n   *   | beyond the viewport}. When false, falls back to old behaviour,\n   *   and cuts the screenshot by the viewport size. Defaults to `true`.\n   *\n   * - `fromSurface` : When true, captures screenshot\n   *   {@link https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-captureScreenshot\n   *   | from the surface rather than the view}. When false, works only in\n   *   headful mode and ignores page viewport (but not browser window's\n   *   bounds). Defaults to `true`.\n   *\n   * @returns Promise which resolves to buffer or a base64 string (depending on\n   * the value of `encoding`) with captured screenshot.\n   */\n  screenshot(\n    options: ScreenshotOptions & {encoding: 'base64'}\n  ): Promise<string>;\n  screenshot(\n    options?: ScreenshotOptions & {encoding?: 'binary'}\n  ): Promise<Buffer>;\n  async screenshot(options?: ScreenshotOptions): Promise<Buffer | string>;\n  async screenshot(): Promise<Buffer | string> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  _getPDFOptions(\n    options: PDFOptions = {},\n    lengthUnit: 'in' | 'cm' = 'in'\n  ): ParsedPDFOptions {\n    const defaults = {\n      scale: 1,\n      displayHeaderFooter: false,\n      headerTemplate: '',\n      footerTemplate: '',\n      printBackground: false,\n      landscape: false,\n      pageRanges: '',\n      preferCSSPageSize: false,\n      omitBackground: false,\n      timeout: 30000,\n    };\n\n    let width = 8.5;\n    let height = 11;\n    if (options.format) {\n      const format =\n        paperFormats[options.format.toLowerCase() as LowerCasePaperFormat];\n      assert(format, 'Unknown paper format: ' + options.format);\n      width = format.width;\n      height = format.height;\n    } else {\n      width = convertPrintParameterToInches(options.width, lengthUnit) ?? width;\n      height =\n        convertPrintParameterToInches(options.height, lengthUnit) ?? height;\n    }\n\n    const margin = {\n      top: convertPrintParameterToInches(options.margin?.top, lengthUnit) || 0,\n      left:\n        convertPrintParameterToInches(options.margin?.left, lengthUnit) || 0,\n      bottom:\n        convertPrintParameterToInches(options.margin?.bottom, lengthUnit) || 0,\n      right:\n        convertPrintParameterToInches(options.margin?.right, lengthUnit) || 0,\n    };\n\n    const output = {\n      ...defaults,\n      ...options,\n      width,\n      height,\n      margin,\n    };\n\n    return output;\n  }\n\n  /**\n   * Generates a PDF of the page with the `print` CSS media type.\n   * @remarks\n   *\n   * To generate a PDF with the `screen` media type, call\n   * {@link Page.emulateMediaType | `page.emulateMediaType('screen')`} before\n   * calling `page.pdf()`.\n   *\n   * By default, `page.pdf()` generates a pdf with modified colors for printing.\n   * Use the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-print-color-adjust | `-webkit-print-color-adjust`}\n   * property to force rendering of exact colors.\n   *\n   * @param options - options for generating the PDF.\n   */\n  async createPDFStream(options?: PDFOptions): Promise<Readable>;\n  async createPDFStream(): Promise<Readable> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * {@inheritDoc Page.createPDFStream}\n   */\n  async pdf(options?: PDFOptions): Promise<Buffer>;\n  async pdf(): Promise<Buffer> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The page's title\n   *\n   * @remarks\n   * Shortcut for {@link Frame.title | page.mainFrame().title()}.\n   */\n  async title(): Promise<string> {\n    throw new Error('Not implemented');\n  }\n\n  async close(options?: {runBeforeUnload?: boolean}): Promise<void>;\n  async close(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Indicates that the page has been closed.\n   * @returns\n   */\n  isClosed(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * {@inheritDoc Mouse}\n   */\n  get mouse(): Mouse {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page | Page.mouse} to click in the center of the\n   * element. If there's no element matching `selector`, the method throws an\n   * error.\n   * @remarks Bear in mind that if `click()` triggers a navigation event and\n   * there's a separate `page.waitForNavigation()` promise to be resolved, you\n   * may end up with a race condition that yields unexpected results. The\n   * correct pattern for click and wait for navigation is the following:\n   *\n   * ```ts\n   * const [response] = await Promise.all([\n   *   page.waitForNavigation(waitOptions),\n   *   page.click(selector, clickOptions),\n   * ]);\n   * ```\n   *\n   * Shortcut for {@link Frame.click | page.mainFrame().click(selector[, options]) }.\n   * @param selector - A `selector` to search for element to click. If there are\n   * multiple elements satisfying the `selector`, the first will be clicked\n   * @param options - `Object`\n   * @returns Promise which resolves when the element matching `selector` is\n   * successfully clicked. The Promise will be rejected if there is no element\n   * matching `selector`.\n   */\n  click(selector: string, options?: Readonly<ClickOptions>): Promise<void> {\n    return this.mainFrame().click(selector, options);\n  }\n\n  /**\n   * This method fetches an element with `selector` and focuses it. If there's no\n   * element matching `selector`, the method throws an error.\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector }\n   * of an element to focus. If there are multiple elements satisfying the\n   * selector, the first will be focused.\n   * @returns Promise which resolves when the element matching selector is\n   * successfully focused. The promise will be rejected if there is no element\n   * matching selector.\n   * @remarks\n   * Shortcut for {@link Frame.focus | page.mainFrame().focus(selector)}.\n   */\n  focus(selector: string): Promise<void> {\n    return this.mainFrame().focus(selector);\n  }\n\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page | Page.mouse}\n   * to hover over the center of the element.\n   * If there's no element matching `selector`, the method throws an error.\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to search for element to hover. If there are multiple elements satisfying\n   * the selector, the first will be hovered.\n   * @returns Promise which resolves when the element matching `selector` is\n   * successfully hovered. Promise gets rejected if there's no element matching\n   * `selector`.\n   * @remarks\n   * Shortcut for {@link Page.hover | page.mainFrame().hover(selector)}.\n   */\n  hover(selector: string): Promise<void> {\n    return this.mainFrame().hover(selector);\n  }\n\n  /**\n   * Triggers a `change` and `input` event once all the provided options have been\n   * selected. If there's no `<select>` element matching `selector`, the method\n   * throws an error.\n   *\n   * @example\n   *\n   * ```ts\n   * page.select('select#colors', 'blue'); // single selection\n   * page.select('select#colors', 'red', 'green', 'blue'); // multiple selections\n   * ```\n   *\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | Selector}\n   * to query the page for\n   * @param values - Values of options to select. If the `<select>` has the\n   * `multiple` attribute, all values are considered, otherwise only the first one\n   * is taken into account.\n   * @returns\n   *\n   * @remarks\n   * Shortcut for {@link Frame.select | page.mainFrame().select()}\n   */\n  select(selector: string, ...values: string[]): Promise<string[]> {\n    return this.mainFrame().select(selector, ...values);\n  }\n\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page | Page.touchscreen}\n   * to tap in the center of the element.\n   * If there's no element matching `selector`, the method throws an error.\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | Selector}\n   * to search for element to tap. If there are multiple elements satisfying the\n   * selector, the first will be tapped.\n   * @returns\n   * @remarks\n   * Shortcut for {@link Frame.tap | page.mainFrame().tap(selector)}.\n   */\n  tap(selector: string): Promise<void> {\n    return this.mainFrame().tap(selector);\n  }\n\n  /**\n   * Sends a `keydown`, `keypress/input`, and `keyup` event for each character\n   * in the text.\n   *\n   * To press a special key, like `Control` or `ArrowDown`, use {@link Keyboard.press}.\n   * @example\n   *\n   * ```ts\n   * await page.type('#mytextarea', 'Hello');\n   * // Types instantly\n   * await page.type('#mytextarea', 'World', {delay: 100});\n   * // Types slower, like a user\n   * ```\n   *\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * of an element to type into. If there are multiple elements satisfying the\n   * selector, the first will be used.\n   * @param text - A text to type into a focused element.\n   * @param options - have property `delay` which is the Time to wait between\n   * key presses in milliseconds. Defaults to `0`.\n   * @returns\n   * @remarks\n   */\n  type(\n    selector: string,\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void> {\n    return this.mainFrame().type(selector, text, options);\n  }\n\n  /**\n   * @deprecated Replace with `new Promise(r => setTimeout(r, milliseconds));`.\n   *\n   * Causes your script to wait for the given number of milliseconds.\n   *\n   * @remarks\n   * It's generally recommended to not wait for a number of seconds, but instead\n   * use {@link Frame.waitForSelector}, {@link Frame.waitForXPath} or\n   * {@link Frame.waitForFunction} to wait for exactly the conditions you want.\n   *\n   * @example\n   *\n   * Wait for 1 second:\n   *\n   * ```ts\n   * await page.waitForTimeout(1000);\n   * ```\n   *\n   * @param milliseconds - the number of milliseconds to wait.\n   */\n  waitForTimeout(milliseconds: number): Promise<void> {\n    return this.mainFrame().waitForTimeout(milliseconds);\n  }\n\n  /**\n   * Wait for the `selector` to appear in page. If at the moment of calling the\n   * method the `selector` already exists, the method will return immediately. If\n   * the `selector` doesn't appear after the `timeout` milliseconds of waiting, the\n   * function will throw.\n   *\n   * @example\n   * This method works across navigations:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   let currentURL;\n   *   page\n   *     .waitForSelector('img')\n   *     .then(() => console.log('First URL with image: ' + currentURL));\n   *   for (currentURL of [\n   *     'https://example.com',\n   *     'https://google.com',\n   *     'https://bbc.com',\n   *   ]) {\n   *     await page.goto(currentURL);\n   *   }\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * of an element to wait for\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves when element specified by selector string\n   * is added to DOM. Resolves to `null` if waiting for hidden: `true` and\n   * selector is not found in DOM.\n   * @remarks\n   * The optional Parameter in Arguments `options` are:\n   *\n   * - `visible`: A boolean wait for element to be present in DOM and to be\n   *   visible, i.e. to not have `display: none` or `visibility: hidden` CSS\n   *   properties. Defaults to `false`.\n   *\n   * - `hidden`: Wait for element to not be found in the DOM or to be hidden,\n   *   i.e. have `display: none` or `visibility: hidden` CSS properties. Defaults to\n   *   `false`.\n   *\n   * - `timeout`: maximum time to wait for in milliseconds. Defaults to `30000`\n   *   (30 seconds). Pass `0` to disable timeout. The default value can be changed\n   *   by using the {@link Page.setDefaultTimeout} method.\n   */\n  async waitForSelector<Selector extends string>(\n    selector: Selector,\n    options: WaitForSelectorOptions = {}\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    return await this.mainFrame().waitForSelector(selector, options);\n  }\n\n  /**\n   * Wait for the `xpath` to appear in page. If at the moment of calling the\n   * method the `xpath` already exists, the method will return immediately. If\n   * the `xpath` doesn't appear after the `timeout` milliseconds of waiting, the\n   * function will throw.\n   *\n   * @example\n   * This method works across navigation\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   let currentURL;\n   *   page\n   *     .waitForXPath('//img')\n   *     .then(() => console.log('First URL with image: ' + currentURL));\n   *   for (currentURL of [\n   *     'https://example.com',\n   *     'https://google.com',\n   *     'https://bbc.com',\n   *   ]) {\n   *     await page.goto(currentURL);\n   *   }\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param xpath - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/XPath | xpath} of an\n   * element to wait for\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves when element specified by xpath string is\n   * added to DOM. Resolves to `null` if waiting for `hidden: true` and xpath is\n   * not found in DOM, otherwise resolves to `ElementHandle`.\n   * @remarks\n   * The optional Argument `options` have properties:\n   *\n   * - `visible`: A boolean to wait for element to be present in DOM and to be\n   *   visible, i.e. to not have `display: none` or `visibility: hidden` CSS\n   *   properties. Defaults to `false`.\n   *\n   * - `hidden`: A boolean wait for element to not be found in the DOM or to be\n   *   hidden, i.e. have `display: none` or `visibility: hidden` CSS properties.\n   *   Defaults to `false`.\n   *\n   * - `timeout`: A number which is maximum time to wait for in milliseconds.\n   *   Defaults to `30000` (30 seconds). Pass `0` to disable timeout. The default\n   *   value can be changed by using the {@link Page.setDefaultTimeout} method.\n   */\n  waitForXPath(\n    xpath: string,\n    options?: WaitForSelectorOptions\n  ): Promise<ElementHandle<Node> | null>;\n  waitForXPath(): Promise<ElementHandle<Node> | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Waits for a function to finish evaluating in the page's context.\n   *\n   * @example\n   * The {@link Page.waitForFunction} can be used to observe viewport size change:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   const watchDog = page.waitForFunction('window.innerWidth < 100');\n   *   await page.setViewport({width: 50, height: 50});\n   *   await watchDog;\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @example\n   * To pass arguments from node.js to the predicate of\n   * {@link Page.waitForFunction} function:\n   *\n   * ```ts\n   * const selector = '.foo';\n   * await page.waitForFunction(\n   *   selector => !!document.querySelector(selector),\n   *   {},\n   *   selector\n   * );\n   * ```\n   *\n   * @example\n   * The predicate of {@link Page.waitForFunction} can be asynchronous too:\n   *\n   * ```ts\n   * const username = 'github-username';\n   * await page.waitForFunction(\n   *   async username => {\n   *     const githubResponse = await fetch(\n   *       `https://api.github.com/users/${username}`\n   *     );\n   *     const githubUser = await githubResponse.json();\n   *     // show the avatar\n   *     const img = document.createElement('img');\n   *     img.src = githubUser.avatar_url;\n   *     // wait 3 seconds\n   *     await new Promise((resolve, reject) => setTimeout(resolve, 3000));\n   *     img.remove();\n   *   },\n   *   {},\n   *   username\n   * );\n   * ```\n   *\n   * @param pageFunction - Function to be evaluated in browser context\n   * @param options - Options for configuring waiting behavior.\n   */\n  waitForFunction<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    options?: FrameWaitForFunctionOptions,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    return this.mainFrame().waitForFunction(pageFunction, options, ...args);\n  }\n\n  /**\n   * This method is typically coupled with an action that triggers a device\n   * request from an api such as WebBluetooth.\n   *\n   * :::caution\n   *\n   * This must be called before the device request is made. It will not return a\n   * currently active device prompt.\n   *\n   * :::\n   *\n   * @example\n   *\n   * ```ts\n   * const [devicePrompt] = Promise.all([\n   *   page.waitForDevicePrompt(),\n   *   page.click('#connect-bluetooth'),\n   * ]);\n   * await devicePrompt.select(\n   *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n   * );\n   * ```\n   */\n  waitForDevicePrompt(\n    options?: WaitTimeoutOptions\n  ): Promise<DeviceRequestPrompt>;\n  waitForDevicePrompt(): Promise<DeviceRequestPrompt> {\n    throw new Error('Not implemented');\n  }\n}\n\n/**\n * @internal\n */\nexport const supportedMetrics = new Set<string>([\n  'Timestamp',\n  'Documents',\n  'Frames',\n  'JSEventListeners',\n  'Nodes',\n  'LayoutCount',\n  'RecalcStyleCount',\n  'LayoutDuration',\n  'RecalcStyleDuration',\n  'ScriptDuration',\n  'TaskDuration',\n  'JSHeapUsedSize',\n  'JSHeapTotalSize',\n]);\n\n/**\n * @internal\n */\nexport const unitToPixels = {\n  px: 1,\n  in: 96,\n  cm: 37.8,\n  mm: 3.78,\n};\n\nfunction convertPrintParameterToInches(\n  parameter?: string | number,\n  lengthUnit: 'in' | 'cm' = 'in'\n): number | undefined {\n  if (typeof parameter === 'undefined') {\n    return undefined;\n  }\n  let pixels;\n  if (isNumber(parameter)) {\n    // Treat numbers as pixel values to be aligned with phantom's paperSize.\n    pixels = parameter;\n  } else if (isString(parameter)) {\n    const text = parameter;\n    let unit = text.substring(text.length - 2).toLowerCase();\n    let valueText = '';\n    if (unit in unitToPixels) {\n      valueText = text.substring(0, text.length - 2);\n    } else {\n      // In case of unknown unit try to parse the whole parameter as number of pixels.\n      // This is consistent with phantom's paperSize behavior.\n      unit = 'px';\n      valueText = text;\n    }\n    const value = Number(valueText);\n    assert(!isNaN(value), 'Failed to parse parameter value: ' + text);\n    pixels = value * unitToPixels[unit as keyof typeof unitToPixels];\n  } else {\n    throw new Error(\n      'page.pdf() Cannot handle parameter type: ' + typeof parameter\n    );\n  }\n  return pixels / unitToPixels[lengthUnit];\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {KeyInput} from '../common/USKeyboardLayout.js';\n\nimport {Point} from './ElementHandle.js';\n\n/**\n * @public\n */\nexport interface KeyDownOptions {\n  /**\n   * @deprecated Do not use. This is automatically handled.\n   */\n  text?: string;\n  /**\n   * @deprecated Do not use. This is automatically handled.\n   */\n  commands?: string[];\n}\n\n/**\n * @public\n */\nexport interface KeyboardTypeOptions {\n  delay?: number;\n}\n\n/**\n * @public\n */\nexport type KeyPressOptions = KeyDownOptions & KeyboardTypeOptions;\n\n/**\n * Keyboard provides an api for managing a virtual keyboard.\n * The high level api is {@link Keyboard.\"type\"},\n * which takes raw characters and generates proper keydown, keypress/input,\n * and keyup events on your page.\n *\n * @remarks\n * For finer control, you can use {@link Keyboard.down},\n * {@link Keyboard.up}, and {@link Keyboard.sendCharacter}\n * to manually fire events as if they were generated from a real keyboard.\n *\n * On macOS, keyboard shortcuts like `\u2318 A` -\\> Select All do not work.\n * See {@link https://github.com/puppeteer/puppeteer/issues/1313 | #1313}.\n *\n * @example\n * An example of holding down `Shift` in order to select and delete some text:\n *\n * ```ts\n * await page.keyboard.type('Hello World!');\n * await page.keyboard.press('ArrowLeft');\n *\n * await page.keyboard.down('Shift');\n * for (let i = 0; i < ' World'.length; i++)\n *   await page.keyboard.press('ArrowLeft');\n * await page.keyboard.up('Shift');\n *\n * await page.keyboard.press('Backspace');\n * // Result text will end up saying 'Hello!'\n * ```\n *\n * @example\n * An example of pressing `A`\n *\n * ```ts\n * await page.keyboard.down('Shift');\n * await page.keyboard.press('KeyA');\n * await page.keyboard.up('Shift');\n * ```\n *\n * @public\n */\nexport class Keyboard {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Dispatches a `keydown` event.\n   *\n   * @remarks\n   * If `key` is a single character and no modifier keys besides `Shift`\n   * are being held down, a `keypress`/`input` event will also generated.\n   * The `text` option can be specified to force an input event to be generated.\n   * If `key` is a modifier key, `Shift`, `Meta`, `Control`, or `Alt`,\n   * subsequent key presses will be sent with that modifier active.\n   * To release the modifier key, use {@link Keyboard.up}.\n   *\n   * After the key is pressed once, subsequent calls to\n   * {@link Keyboard.down} will have\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat | repeat}\n   * set to true. To release the key, use {@link Keyboard.up}.\n   *\n   * Modifier keys DO influence {@link Keyboard.down}.\n   * Holding down `Shift` will type the text in upper case.\n   *\n   * @param key - Name of key to press, such as `ArrowLeft`.\n   * See {@link KeyInput} for a list of all key names.\n   *\n   * @param options - An object of options. Accepts text which, if specified,\n   * generates an input event with this text. Accepts commands which, if specified,\n   * is the commands of keyboard shortcuts,\n   * see {@link https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h | Chromium Source Code} for valid command names.\n   */\n  async down(key: KeyInput, options?: Readonly<KeyDownOptions>): Promise<void>;\n  async down(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Dispatches a `keyup` event.\n   *\n   * @param key - Name of key to release, such as `ArrowLeft`.\n   * See {@link KeyInput | KeyInput}\n   * for a list of all key names.\n   */\n  async up(key: KeyInput): Promise<void>;\n  async up(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Dispatches a `keypress` and `input` event.\n   * This does not send a `keydown` or `keyup` event.\n   *\n   * @remarks\n   * Modifier keys DO NOT effect {@link Keyboard.sendCharacter | Keyboard.sendCharacter}.\n   * Holding down `Shift` will not type the text in upper case.\n   *\n   * @example\n   *\n   * ```ts\n   * page.keyboard.sendCharacter('\u55E8');\n   * ```\n   *\n   * @param char - Character to send into the page.\n   */\n  async sendCharacter(char: string): Promise<void>;\n  async sendCharacter(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Sends a `keydown`, `keypress`/`input`,\n   * and `keyup` event for each character in the text.\n   *\n   * @remarks\n   * To press a special key, like `Control` or `ArrowDown`,\n   * use {@link Keyboard.press}.\n   *\n   * Modifier keys DO NOT effect `keyboard.type`.\n   * Holding down `Shift` will not type the text in upper case.\n   *\n   * @example\n   *\n   * ```ts\n   * await page.keyboard.type('Hello'); // Types instantly\n   * await page.keyboard.type('World', {delay: 100}); // Types slower, like a user\n   * ```\n   *\n   * @param text - A text to type into a focused element.\n   * @param options - An object of options. Accepts delay which,\n   * if specified, is the time to wait between `keydown` and `keyup` in milliseconds.\n   * Defaults to 0.\n   */\n  async type(\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void>;\n  async type(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Shortcut for {@link Keyboard.down}\n   * and {@link Keyboard.up}.\n   *\n   * @remarks\n   * If `key` is a single character and no modifier keys besides `Shift`\n   * are being held down, a `keypress`/`input` event will also generated.\n   * The `text` option can be specified to force an input event to be generated.\n   *\n   * Modifier keys DO effect {@link Keyboard.press}.\n   * Holding down `Shift` will type the text in upper case.\n   *\n   * @param key - Name of key to press, such as `ArrowLeft`.\n   * See {@link KeyInput} for a list of all key names.\n   *\n   * @param options - An object of options. Accepts text which, if specified,\n   * generates an input event with this text. Accepts delay which,\n   * if specified, is the time to wait between `keydown` and `keyup` in milliseconds.\n   * Defaults to 0. Accepts commands which, if specified,\n   * is the commands of keyboard shortcuts,\n   * see {@link https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h | Chromium Source Code} for valid command names.\n   */\n  async press(\n    key: KeyInput,\n    options?: Readonly<KeyPressOptions>\n  ): Promise<void>;\n  async press(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n}\n\n/**\n * @public\n */\nexport interface MouseOptions {\n  /**\n   * Determines which button will be pressed.\n   *\n   * @defaultValue `'left'`\n   */\n  button?: MouseButton;\n  /**\n   * @deprecated Use {@link MouseClickOptions.count}.\n   *\n   * Determines the click count for the mouse event. This does not perform\n   * multiple clicks.\n   *\n   * @defaultValue `1`\n   */\n  clickCount?: number;\n}\n\n/**\n * @public\n */\nexport interface MouseClickOptions extends MouseOptions {\n  /**\n   * Time (in ms) to delay the mouse release after the mouse press.\n   */\n  delay?: number;\n  /**\n   * Number of clicks to perform.\n   *\n   * @defaultValue `1`\n   */\n  count?: number;\n}\n\n/**\n * @public\n */\nexport interface MouseWheelOptions {\n  deltaX?: number;\n  deltaY?: number;\n}\n\n/**\n * @public\n */\nexport interface MouseMoveOptions {\n  /**\n   * Determines the number of movements to make from the current mouse position\n   * to the new one.\n   *\n   * @defaultValue `1`\n   */\n  steps?: number;\n}\n\n/**\n * Enum of valid mouse buttons.\n *\n * @public\n */\nexport const MouseButton = Object.freeze({\n  Left: 'left',\n  Right: 'right',\n  Middle: 'middle',\n  Back: 'back',\n  Forward: 'forward',\n}) satisfies Record<string, Protocol.Input.MouseButton>;\n\n/**\n * @public\n */\nexport type MouseButton = (typeof MouseButton)[keyof typeof MouseButton];\n\n/**\n * The Mouse class operates in main-frame CSS pixels\n * relative to the top-left corner of the viewport.\n * @remarks\n * Every `page` object has its own Mouse, accessible with [`page.mouse`](#pagemouse).\n *\n * @example\n *\n * ```ts\n * // Using \u2018page.mouse\u2019 to trace a 100x100 square.\n * await page.mouse.move(0, 0);\n * await page.mouse.down();\n * await page.mouse.move(0, 100);\n * await page.mouse.move(100, 100);\n * await page.mouse.move(100, 0);\n * await page.mouse.move(0, 0);\n * await page.mouse.up();\n * ```\n *\n * **Note**: The mouse events trigger synthetic `MouseEvent`s.\n * This means that it does not fully replicate the functionality of what a normal user\n * would be able to do with their mouse.\n *\n * For example, dragging and selecting text is not possible using `page.mouse`.\n * Instead, you can use the {@link https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/getSelection | `DocumentOrShadowRoot.getSelection()`} functionality implemented in the platform.\n *\n * @example\n * For example, if you want to select all content between nodes:\n *\n * ```ts\n * await page.evaluate(\n *   (from, to) => {\n *     const selection = from.getRootNode().getSelection();\n *     const range = document.createRange();\n *     range.setStartBefore(from);\n *     range.setEndAfter(to);\n *     selection.removeAllRanges();\n *     selection.addRange(range);\n *   },\n *   fromJSHandle,\n *   toJSHandle\n * );\n * ```\n *\n * If you then would want to copy-paste your selection, you can use the clipboard api:\n *\n * ```ts\n * // The clipboard api does not allow you to copy, unless the tab is focused.\n * await page.bringToFront();\n * await page.evaluate(() => {\n *   // Copy the selected content to the clipboard\n *   document.execCommand('copy');\n *   // Obtain the content of the clipboard as a string\n *   return navigator.clipboard.readText();\n * });\n * ```\n *\n * **Note**: If you want access to the clipboard API,\n * you have to give it permission to do so:\n *\n * ```ts\n * await browser\n *   .defaultBrowserContext()\n *   .overridePermissions('<your origin>', [\n *     'clipboard-read',\n *     'clipboard-write',\n *   ]);\n * ```\n *\n * @public\n */\nexport class Mouse {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Resets the mouse to the default state: No buttons pressed; position at\n   * (0,0).\n   */\n  async reset(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Moves the mouse to the given coordinate.\n   *\n   * @param x - Horizontal position of the mouse.\n   * @param y - Vertical position of the mouse.\n   * @param options - Options to configure behavior.\n   */\n  async move(\n    x: number,\n    y: number,\n    options?: Readonly<MouseMoveOptions>\n  ): Promise<void>;\n  async move(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Presses the mouse.\n   *\n   * @param options - Options to configure behavior.\n   */\n  async down(options?: Readonly<MouseOptions>): Promise<void>;\n  async down(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Releases the mouse.\n   *\n   * @param options - Options to configure behavior.\n   */\n  async up(options?: Readonly<MouseOptions>): Promise<void>;\n  async up(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Shortcut for `mouse.move`, `mouse.down` and `mouse.up`.\n   *\n   * @param x - Horizontal position of the mouse.\n   * @param y - Vertical position of the mouse.\n   * @param options - Options to configure behavior.\n   */\n  async click(\n    x: number,\n    y: number,\n    options?: Readonly<MouseClickOptions>\n  ): Promise<void>;\n  async click(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Dispatches a `mousewheel` event.\n   * @param options - Optional: `MouseWheelOptions`.\n   *\n   * @example\n   * An example of zooming into an element:\n   *\n   * ```ts\n   * await page.goto(\n   *   'https://mdn.mozillademos.org/en-US/docs/Web/API/Element/wheel_event$samples/Scaling_an_element_via_the_wheel?revision=1587366'\n   * );\n   *\n   * const elem = await page.$('div');\n   * const boundingBox = await elem.boundingBox();\n   * await page.mouse.move(\n   *   boundingBox.x + boundingBox.width / 2,\n   *   boundingBox.y + boundingBox.height / 2\n   * );\n   *\n   * await page.mouse.wheel({deltaY: -100});\n   * ```\n   */\n  async wheel(options?: Readonly<MouseWheelOptions>): Promise<void>;\n  async wheel(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Dispatches a `drag` event.\n   * @param start - starting point for drag\n   * @param target - point to drag to\n   */\n  async drag(start: Point, target: Point): Promise<Protocol.Input.DragData>;\n  async drag(): Promise<Protocol.Input.DragData> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Dispatches a `dragenter` event.\n   * @param target - point for emitting `dragenter` event\n   * @param data - drag data containing items and operations mask\n   */\n  async dragEnter(target: Point, data: Protocol.Input.DragData): Promise<void>;\n  async dragEnter(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Dispatches a `dragover` event.\n   * @param target - point for emitting `dragover` event\n   * @param data - drag data containing items and operations mask\n   */\n  async dragOver(target: Point, data: Protocol.Input.DragData): Promise<void>;\n  async dragOver(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Performs a dragenter, dragover, and drop in sequence.\n   * @param target - point to drop on\n   * @param data - drag data containing items and operations mask\n   */\n  async drop(target: Point, data: Protocol.Input.DragData): Promise<void>;\n  async drop(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Performs a drag, dragenter, dragover, and drop in sequence.\n   * @param start - point to drag from\n   * @param target - point to drop on\n   * @param options - An object of options. Accepts delay which,\n   * if specified, is the time to wait between `dragover` and `drop` in milliseconds.\n   * Defaults to 0.\n   */\n  async dragAndDrop(\n    start: Point,\n    target: Point,\n    options?: {delay?: number}\n  ): Promise<void>;\n  async dragAndDrop(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n}\n\n/**\n * The Touchscreen class exposes touchscreen events.\n * @public\n */\nexport class Touchscreen {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Dispatches a `touchstart` and `touchend` event.\n   * @param x - Horizontal position of the tap.\n   * @param y - Vertical position of the tap.\n   */\n  async tap(x: number, y: number): Promise<void>;\n  async tap(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Dispatches a `touchstart` event.\n   * @param x - Horizontal position of the tap.\n   * @param y - Vertical position of the tap.\n   */\n  async touchStart(x: number, y: number): Promise<void>;\n  async touchStart(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Dispatches a `touchMove` event.\n   * @param x - Horizontal position of the move.\n   * @param y - Vertical position of the move.\n   */\n  async touchMove(x: number, y: number): Promise<void>;\n  async touchMove(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Dispatches a `touchend` event.\n   */\n  async touchEnd(): Promise<void>;\n  async touchEnd(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n}\n", "/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ClickOptions, ElementHandle} from '../api/ElementHandle.js';\nimport {HTTPResponse} from '../api/HTTPResponse.js';\nimport {Page, WaitTimeoutOptions} from '../api/Page.js';\nimport {CDPSession} from '../common/Connection.js';\nimport {DeviceRequestPrompt} from '../common/DeviceRequestPrompt.js';\nimport {ExecutionContext} from '../common/ExecutionContext.js';\nimport {getQueryHandlerAndSelector} from '../common/GetQueryHandler.js';\nimport {\n  IsolatedWorldChart,\n  WaitForSelectorOptions,\n} from '../common/IsolatedWorld.js';\nimport {PuppeteerLifeCycleEvent} from '../common/LifecycleWatcher.js';\nimport {\n  EvaluateFunc,\n  EvaluateFuncWith,\n  HandleFor,\n  InnerLazyParams,\n  NodeFor,\n} from '../common/types.js';\nimport {TaskManager} from '../common/WaitTask.js';\n\nimport {KeyboardTypeOptions} from './Input.js';\nimport {JSHandle} from './JSHandle.js';\nimport {Locator} from './Locator.js';\n\n/**\n * @internal\n */\nexport interface Realm {\n  taskManager: TaskManager;\n  waitForFunction<\n    Params extends unknown[],\n    Func extends EvaluateFunc<InnerLazyParams<Params>> = EvaluateFunc<\n      InnerLazyParams<Params>\n    >\n  >(\n    pageFunction: Func | string,\n    options: {\n      polling?: 'raf' | 'mutation' | number;\n      timeout?: number;\n      root?: ElementHandle<Node>;\n      signal?: AbortSignal;\n    },\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>>;\n  adoptHandle<T extends JSHandle<Node>>(handle: T): Promise<T>;\n  transferHandle<T extends JSHandle<Node>>(handle: T): Promise<T>;\n  evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>>;\n  evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>>;\n  click(selector: string, options: Readonly<ClickOptions>): Promise<void>;\n  focus(selector: string): Promise<void>;\n  hover(selector: string): Promise<void>;\n  select(selector: string, ...values: string[]): Promise<string[]>;\n  tap(selector: string): Promise<void>;\n  type(\n    selector: string,\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void>;\n}\n\n/**\n * @public\n */\nexport interface FrameWaitForFunctionOptions {\n  /**\n   * An interval at which the `pageFunction` is executed, defaults to `raf`. If\n   * `polling` is a number, then it is treated as an interval in milliseconds at\n   * which the function would be executed. If `polling` is a string, then it can\n   * be one of the following values:\n   *\n   * - `raf` - to constantly execute `pageFunction` in `requestAnimationFrame`\n   *   callback. This is the tightest polling mode which is suitable to observe\n   *   styling changes.\n   *\n   * - `mutation` - to execute `pageFunction` on every DOM mutation.\n   */\n  polling?: 'raf' | 'mutation' | number;\n  /**\n   * Maximum time to wait in milliseconds. Defaults to `30000` (30 seconds).\n   * Pass `0` to disable the timeout. Puppeteer's default timeout can be changed\n   * using {@link Page.setDefaultTimeout}.\n   */\n  timeout?: number;\n  /**\n   * A signal object that allows you to cancel a waitForFunction call.\n   */\n  signal?: AbortSignal;\n}\n\n/**\n * @public\n */\nexport interface FrameAddScriptTagOptions {\n  /**\n   * URL of the script to be added.\n   */\n  url?: string;\n  /**\n   * Path to a JavaScript file to be injected into the frame.\n   *\n   * @remarks\n   * If `path` is a relative path, it is resolved relative to the current\n   * working directory (`process.cwd()` in Node.js).\n   */\n  path?: string;\n  /**\n   * JavaScript to be injected into the frame.\n   */\n  content?: string;\n  /**\n   * Sets the `type` of the script. Use `module` in order to load an ES2015 module.\n   */\n  type?: string;\n  /**\n   * Sets the `id` of the script.\n   */\n  id?: string;\n}\n\n/**\n * @public\n */\nexport interface FrameAddStyleTagOptions {\n  /**\n   * the URL of the CSS file to be added.\n   */\n  url?: string;\n  /**\n   * The path to a CSS file to be injected into the frame.\n   * @remarks\n   * If `path` is a relative path, it is resolved relative to the current\n   * working directory (`process.cwd()` in Node.js).\n   */\n  path?: string;\n  /**\n   * Raw CSS content to be injected into the frame.\n   */\n  content?: string;\n}\n\n/**\n * Represents a DOM frame.\n *\n * To understand frames, you can think of frames as `<iframe>` elements. Just\n * like iframes, frames can be nested, and when JavaScript is executed in a\n * frame, the JavaScript does not effect frames inside the ambient frame the\n * JavaScript executes in.\n *\n * @example\n * At any point in time, {@link Page | pages} expose their current frame\n * tree via the {@link Page.mainFrame} and {@link Frame.childFrames} methods.\n *\n * @example\n * An example of dumping frame tree:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://www.google.com/chrome/browser/canary.html');\n *   dumpFrameTree(page.mainFrame(), '');\n *   await browser.close();\n *\n *   function dumpFrameTree(frame, indent) {\n *     console.log(indent + frame.url());\n *     for (const child of frame.childFrames()) {\n *       dumpFrameTree(child, indent + '  ');\n *     }\n *   }\n * })();\n * ```\n *\n * @example\n * An example of getting text from an iframe element:\n *\n * ```ts\n * const frame = page.frames().find(frame => frame.name() === 'myframe');\n * const text = await frame.$eval('.selector', element => element.textContent);\n * console.log(text);\n * ```\n *\n * @remarks\n * Frame lifecycles are controlled by three events that are all dispatched on\n * the parent {@link Frame.page | page}:\n *\n * - {@link PageEmittedEvents.FrameAttached}\n * - {@link PageEmittedEvents.FrameNavigated}\n * - {@link PageEmittedEvents.FrameDetached}\n *\n * @public\n */\nexport class Frame {\n  /**\n   * @internal\n   */\n  _id!: string;\n  /**\n   * @internal\n   */\n  _parentId?: string;\n\n  /**\n   * @internal\n   */\n  worlds!: IsolatedWorldChart;\n\n  /**\n   * @internal\n   */\n  _name?: string;\n\n  /**\n   * @internal\n   */\n  _hasStartedLoading = false;\n\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * The page associated with the frame.\n   */\n  page(): Page {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Is `true` if the frame is an out-of-process (OOP) frame. Otherwise,\n   * `false`.\n   */\n  isOOPFrame(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Navigates a frame to the given url.\n   *\n   * @remarks\n   * Navigation to `about:blank` or navigation to the same URL with a different\n   * hash will succeed and return `null`.\n   *\n   * :::warning\n   *\n   * Headless mode doesn't support navigation to a PDF document. See the {@link\n   * https://bugs.chromium.org/p/chromium/issues/detail?id=761295 | upstream\n   * issue}.\n   *\n   * :::\n   *\n   * @param url - the URL to navigate the frame to. This should include the\n   * scheme, e.g. `https://`.\n   * @param options - navigation options. `waitUntil` is useful to define when\n   * the navigation should be considered successful - see the docs for\n   * {@link PuppeteerLifeCycleEvent} for more details.\n   *\n   * @returns A promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect.\n   * @throws This method will throw an error if:\n   *\n   * - there's an SSL error (e.g. in case of self-signed certificates).\n   * - target URL is invalid.\n   * - the `timeout` is exceeded during navigation.\n   * - the remote server does not respond or is unreachable.\n   * - the main resource failed to load.\n   *\n   * This method will not throw an error when any valid HTTP status code is\n   * returned by the remote server, including 404 \"Not Found\" and 500 \"Internal\n   * Server Error\". The status code for such responses can be retrieved by\n   * calling {@link HTTPResponse.status}.\n   */\n  async goto(\n    url: string,\n    options?: {\n      referer?: string;\n      referrerPolicy?: string;\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    }\n  ): Promise<HTTPResponse | null>;\n  async goto(): Promise<HTTPResponse | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Waits for the frame to navigate. It is useful for when you run code which\n   * will indirectly cause the frame to navigate.\n   *\n   * Usage of the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/History_API | History API}\n   * to change the URL is considered a navigation.\n   *\n   * @example\n   *\n   * ```ts\n   * const [response] = await Promise.all([\n   *   // The navigation promise resolves after navigation has finished\n   *   frame.waitForNavigation(),\n   *   // Clicking the link will indirectly cause a navigation\n   *   frame.click('a.my-link'),\n   * ]);\n   * ```\n   *\n   * @param options - options to configure when the navigation is consided\n   * finished.\n   * @returns a promise that resolves when the frame navigates to a new URL.\n   */\n  async waitForNavigation(options?: {\n    timeout?: number;\n    waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n  }): Promise<HTTPResponse | null>;\n  async waitForNavigation(): Promise<HTTPResponse | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  _client(): CDPSession {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  executionContext(): Promise<ExecutionContext> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  mainRealm(): Realm {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @internal\n   */\n  isolatedRealm(): Realm {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Behaves identically to {@link Page.evaluateHandle} except it's run within\n   * the context of this frame.\n   *\n   * @see {@link Page.evaluateHandle} for details.\n   */\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>>;\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Behaves identically to {@link Page.evaluate} except it's run within the\n   * the context of this frame.\n   *\n   * @see {@link Page.evaluate} for details.\n   */\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>>;\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(): Promise<Awaited<ReturnType<Func>>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Creates a locator for the provided `selector`. See {@link Locator} for\n   * details and supported actions.\n   *\n   * @remarks\n   * Locators API is experimental and we will not follow semver for breaking\n   * change in the Locators API.\n   */\n  locator(selector: string): Locator {\n    return Locator.create(this, selector);\n  }\n\n  /**\n   * Queries the frame for an element matching the given selector.\n   *\n   * @param selector - The selector to query for.\n   * @returns A {@link ElementHandle | element handle} to the first element\n   * matching the given selector. Otherwise, `null`.\n   */\n  async $<Selector extends string>(\n    selector: Selector\n  ): Promise<ElementHandle<NodeFor<Selector>> | null>;\n  async $<Selector extends string>(): Promise<ElementHandle<\n    NodeFor<Selector>\n  > | null> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Queries the frame for all elements matching the given selector.\n   *\n   * @param selector - The selector to query for.\n   * @returns An array of {@link ElementHandle | element handles} that point to\n   * elements matching the given selector.\n   */\n  async $$<Selector extends string>(\n    selector: Selector\n  ): Promise<Array<ElementHandle<NodeFor<Selector>>>>;\n  async $$<Selector extends string>(): Promise<\n    Array<ElementHandle<NodeFor<Selector>>>\n  > {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Runs the given function on the first element matching the given selector in\n   * the frame.\n   *\n   * If the given function returns a promise, then this method will wait till\n   * the promise resolves.\n   *\n   * @example\n   *\n   * ```ts\n   * const searchValue = await frame.$eval('#search', el => el.value);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param pageFunction - The function to be evaluated in the frame's context.\n   * The first element matching the selector will be passed to the function as\n   * its first argument.\n   * @param args - Additional arguments to pass to `pageFunction`.\n   * @returns A promise to the result of the function.\n   */\n  async $eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<NodeFor<Selector>, Params> = EvaluateFuncWith<\n      NodeFor<Selector>,\n      Params\n    >\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>>;\n  async $eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<NodeFor<Selector>, Params> = EvaluateFuncWith<\n      NodeFor<Selector>,\n      Params\n    >\n  >(): Promise<Awaited<ReturnType<Func>>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Runs the given function on an array of elements matching the given selector\n   * in the frame.\n   *\n   * If the given function returns a promise, then this method will wait till\n   * the promise resolves.\n   *\n   * @example\n   *\n   * ```js\n   * const divsCounts = await frame.$$eval('div', divs => divs.length);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param pageFunction - The function to be evaluated in the frame's context.\n   * An array of elements matching the given selector will be passed to the\n   * function as its first argument.\n   * @param args - Additional arguments to pass to `pageFunction`.\n   * @returns A promise to the result of the function.\n   */\n  async $$eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<\n      Array<NodeFor<Selector>>,\n      Params\n    > = EvaluateFuncWith<Array<NodeFor<Selector>>, Params>\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>>;\n  async $$eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<\n      Array<NodeFor<Selector>>,\n      Params\n    > = EvaluateFuncWith<Array<NodeFor<Selector>>, Params>\n  >(): Promise<Awaited<ReturnType<Func>>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @deprecated Use {@link Frame.$$} with the `xpath` prefix.\n   *\n   * Example: `await frame.$$('xpath/' + xpathExpression)`\n   *\n   * This method evaluates the given XPath expression and returns the results.\n   * If `xpath` starts with `//` instead of `.//`, the dot will be appended\n   * automatically.\n   * @param expression - the XPath expression to evaluate.\n   */\n  async $x(expression: string): Promise<Array<ElementHandle<Node>>>;\n  async $x(): Promise<Array<ElementHandle<Node>>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Waits for an element matching the given selector to appear in the frame.\n   *\n   * This method works across navigations.\n   *\n   * @example\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   let currentURL;\n   *   page\n   *     .mainFrame()\n   *     .waitForSelector('img')\n   *     .then(() => console.log('First URL with image: ' + currentURL));\n   *\n   *   for (currentURL of [\n   *     'https://example.com',\n   *     'https://google.com',\n   *     'https://bbc.com',\n   *   ]) {\n   *     await page.goto(currentURL);\n   *   }\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param selector - The selector to query and wait for.\n   * @param options - Options for customizing waiting behavior.\n   * @returns An element matching the given selector.\n   * @throws Throws if an element matching the given selector doesn't appear.\n   */\n  async waitForSelector<Selector extends string>(\n    selector: Selector,\n    options: WaitForSelectorOptions = {}\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    const {updatedSelector, QueryHandler} =\n      getQueryHandlerAndSelector(selector);\n    return (await QueryHandler.waitFor(\n      this,\n      updatedSelector,\n      options\n    )) as ElementHandle<NodeFor<Selector>> | null;\n  }\n\n  /**\n   * @deprecated Use {@link Frame.waitForSelector} with the `xpath` prefix.\n   *\n   * Example: `await frame.waitForSelector('xpath/' + xpathExpression)`\n   *\n   * The method evaluates the XPath expression relative to the Frame.\n   * If `xpath` starts with `//` instead of `.//`, the dot will be appended\n   * automatically.\n   *\n   * Wait for the `xpath` to appear in page. If at the moment of calling the\n   * method the `xpath` already exists, the method will return immediately. If\n   * the xpath doesn't appear after the `timeout` milliseconds of waiting, the\n   * function will throw.\n   *\n   * For a code example, see the example for {@link Frame.waitForSelector}. That\n   * function behaves identically other than taking a CSS selector rather than\n   * an XPath.\n   *\n   * @param xpath - the XPath expression to wait for.\n   * @param options - options to configure the visibility of the element and how\n   * long to wait before timing out.\n   */\n  async waitForXPath(\n    xpath: string,\n    options: WaitForSelectorOptions = {}\n  ): Promise<ElementHandle<Node> | null> {\n    if (xpath.startsWith('//')) {\n      xpath = `.${xpath}`;\n    }\n    return this.waitForSelector(`xpath/${xpath}`, options);\n  }\n\n  /**\n   * @example\n   * The `waitForFunction` can be used to observe viewport size change:\n   *\n   * ```ts\n   * import puppeteer from 'puppeteer';\n   *\n   * (async () => {\n   * .  const browser = await puppeteer.launch();\n   * .  const page = await browser.newPage();\n   * .  const watchDog = page.mainFrame().waitForFunction('window.innerWidth < 100');\n   * .  page.setViewport({width: 50, height: 50});\n   * .  await watchDog;\n   * .  await browser.close();\n   * })();\n   * ```\n   *\n   * To pass arguments from Node.js to the predicate of `page.waitForFunction` function:\n   *\n   * ```ts\n   * const selector = '.foo';\n   * await frame.waitForFunction(\n   *   selector => !!document.querySelector(selector),\n   *   {}, // empty options object\n   *   selector\n   * );\n   * ```\n   *\n   * @param pageFunction - the function to evaluate in the frame context.\n   * @param options - options to configure the polling method and timeout.\n   * @param args - arguments to pass to the `pageFunction`.\n   * @returns the promise which resolve when the `pageFunction` returns a truthy value.\n   */\n  waitForFunction<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    options: FrameWaitForFunctionOptions = {},\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    return this.mainRealm().waitForFunction(\n      pageFunction,\n      options,\n      ...args\n    ) as Promise<HandleFor<Awaited<ReturnType<Func>>>>;\n  }\n  /**\n   * The full HTML contents of the frame, including the DOCTYPE.\n   */\n  async content(): Promise<string> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Set the content of the frame.\n   *\n   * @param html - HTML markup to assign to the page.\n   * @param options - Options to configure how long before timing out and at\n   * what point to consider the content setting successful.\n   */\n  async setContent(\n    html: string,\n    options?: {\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    }\n  ): Promise<void>;\n  async setContent(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The frame's `name` attribute as specified in the tag.\n   *\n   * @remarks\n   * If the name is empty, it returns the `id` attribute instead.\n   *\n   * @remarks\n   * This value is calculated once when the frame is created, and will not\n   * update if the attribute is changed later.\n   */\n  name(): string {\n    return this._name || '';\n  }\n\n  /**\n   * The frame's URL.\n   */\n  url(): string {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * The parent frame, if any. Detached and main frames return `null`.\n   */\n  parentFrame(): Frame | null {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * An array of child frames.\n   */\n  childFrames(): Frame[] {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Is`true` if the frame has been detached. Otherwise, `false`.\n   */\n  isDetached(): boolean {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Adds a `<script>` tag into the page with the desired url or content.\n   *\n   * @param options - Options for the script.\n   * @returns An {@link ElementHandle | element handle} to the injected\n   * `<script>` element.\n   */\n  async addScriptTag(\n    options: FrameAddScriptTagOptions\n  ): Promise<ElementHandle<HTMLScriptElement>>;\n  async addScriptTag(): Promise<ElementHandle<HTMLScriptElement>> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Adds a `<link rel=\"stylesheet\">` tag into the page with the desired URL or\n   * a `<style type=\"text/css\">` tag with the content.\n   *\n   * @returns An {@link ElementHandle | element handle} to the loaded `<link>`\n   * or `<style>` element.\n   */\n  async addStyleTag(\n    options: Omit<FrameAddStyleTagOptions, 'url'>\n  ): Promise<ElementHandle<HTMLStyleElement>>;\n  async addStyleTag(\n    options: FrameAddStyleTagOptions\n  ): Promise<ElementHandle<HTMLLinkElement>>;\n  async addStyleTag(): Promise<\n    ElementHandle<HTMLStyleElement | HTMLLinkElement>\n  > {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Clicks the first element found that matches `selector`.\n   *\n   * @remarks\n   * If `click()` triggers a navigation event and there's a separate\n   * `page.waitForNavigation()` promise to be resolved, you may end up with a\n   * race condition that yields unexpected results. The correct pattern for\n   * click and wait for navigation is the following:\n   *\n   * ```ts\n   * const [response] = await Promise.all([\n   *   page.waitForNavigation(waitOptions),\n   *   frame.click(selector, clickOptions),\n   * ]);\n   * ```\n   *\n   * @param selector - The selector to query for.\n   */\n  click(selector: string, options: Readonly<ClickOptions> = {}): Promise<void> {\n    return this.isolatedRealm().click(selector, options);\n  }\n\n  /**\n   * Focuses the first element that matches the `selector`.\n   *\n   * @param selector - The selector to query for.\n   * @throws Throws if there's no element matching `selector`.\n   */\n  async focus(selector: string): Promise<void> {\n    return this.isolatedRealm().focus(selector);\n  }\n\n  /**\n   * Hovers the pointer over the center of the first element that matches the\n   * `selector`.\n   *\n   * @param selector - The selector to query for.\n   * @throws Throws if there's no element matching `selector`.\n   */\n  hover(selector: string): Promise<void> {\n    return this.isolatedRealm().hover(selector);\n  }\n\n  /**\n   * Selects a set of value on the first `<select>` element that matches the\n   * `selector`.\n   *\n   * @example\n   *\n   * ```ts\n   * frame.select('select#colors', 'blue'); // single selection\n   * frame.select('select#colors', 'red', 'green', 'blue'); // multiple selections\n   * ```\n   *\n   * @param selector - The selector to query for.\n   * @param values - The array of values to select. If the `<select>` has the\n   * `multiple` attribute, all values are considered, otherwise only the first\n   * one is taken into account.\n   * @returns the list of values that were successfully selected.\n   * @throws Throws if there's no `<select>` matching `selector`.\n   */\n  select(selector: string, ...values: string[]): Promise<string[]> {\n    return this.isolatedRealm().select(selector, ...values);\n  }\n\n  /**\n   * Taps the first element that matches the `selector`.\n   *\n   * @param selector - The selector to query for.\n   * @throws Throws if there's no element matching `selector`.\n   */\n  tap(selector: string): Promise<void> {\n    return this.isolatedRealm().tap(selector);\n  }\n\n  /**\n   * Sends a `keydown`, `keypress`/`input`, and `keyup` event for each character\n   * in the text.\n   *\n   * @remarks\n   * To press a special key, like `Control` or `ArrowDown`, use\n   * {@link Keyboard.press}.\n   *\n   * @example\n   *\n   * ```ts\n   * await frame.type('#mytextarea', 'Hello'); // Types instantly\n   * await frame.type('#mytextarea', 'World', {delay: 100}); // Types slower, like a user\n   * ```\n   *\n   * @param selector - the selector for the element to type into. If there are\n   * multiple the first will be used.\n   * @param text - text to type into the element\n   * @param options - takes one option, `delay`, which sets the time to wait\n   * between key presses in milliseconds. Defaults to `0`.\n   */\n  type(\n    selector: string,\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void> {\n    return this.isolatedRealm().type(selector, text, options);\n  }\n\n  /**\n   * @deprecated Replace with `new Promise(r => setTimeout(r, milliseconds));`.\n   *\n   * Causes your script to wait for the given number of milliseconds.\n   *\n   * @remarks\n   * It's generally recommended to not wait for a number of seconds, but instead\n   * use {@link Frame.waitForSelector}, {@link Frame.waitForXPath} or\n   * {@link Frame.waitForFunction} to wait for exactly the conditions you want.\n   *\n   * @example\n   *\n   * Wait for 1 second:\n   *\n   * ```ts\n   * await frame.waitForTimeout(1000);\n   * ```\n   *\n   * @param milliseconds - the number of milliseconds to wait.\n   */\n  waitForTimeout(milliseconds: number): Promise<void> {\n    return new Promise(resolve => {\n      setTimeout(resolve, milliseconds);\n    });\n  }\n\n  /**\n   * The frame's title.\n   */\n  async title(): Promise<string> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * This method is typically coupled with an action that triggers a device\n   * request from an api such as WebBluetooth.\n   *\n   * :::caution\n   *\n   * This must be called before the device request is made. It will not return a\n   * currently active device prompt.\n   *\n   * :::\n   *\n   * @example\n   *\n   * ```ts\n   * const [devicePrompt] = Promise.all([\n   *   frame.waitForDevicePrompt(),\n   *   frame.click('#connect-bluetooth'),\n   * ]);\n   * await devicePrompt.select(\n   *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n   * );\n   * ```\n   */\n  waitForDevicePrompt(\n    options?: WaitTimeoutOptions\n  ): Promise<DeviceRequestPrompt>;\n  waitForDevicePrompt(): Promise<DeviceRequestPrompt> {\n    throw new Error('Not implemented');\n  }\n}\n", "/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {ElementHandle} from '../api/ElementHandle.js';\n\nimport {CDPSession} from './Connection.js';\n\n/**\n * Represents a Node and the properties of it that are relevant to Accessibility.\n * @public\n */\nexport interface SerializedAXNode {\n  /**\n   * The {@link https://www.w3.org/TR/wai-aria/#usage_intro | role} of the node.\n   */\n  role: string;\n  /**\n   * A human readable name for the node.\n   */\n  name?: string;\n  /**\n   * The current value of the node.\n   */\n  value?: string | number;\n  /**\n   * An additional human readable description of the node.\n   */\n  description?: string;\n  /**\n   * Any keyboard shortcuts associated with this node.\n   */\n  keyshortcuts?: string;\n  /**\n   * A human readable alternative to the role.\n   */\n  roledescription?: string;\n  /**\n   * A description of the current value.\n   */\n  valuetext?: string;\n  disabled?: boolean;\n  expanded?: boolean;\n  focused?: boolean;\n  modal?: boolean;\n  multiline?: boolean;\n  /**\n   * Whether more than one child can be selected.\n   */\n  multiselectable?: boolean;\n  readonly?: boolean;\n  required?: boolean;\n  selected?: boolean;\n  /**\n   * Whether the checkbox is checked, or in a\n   * {@link https://www.w3.org/TR/wai-aria-practices/examples/checkbox/checkbox-2/checkbox-2.html | mixed state}.\n   */\n  checked?: boolean | 'mixed';\n  /**\n   * Whether the node is checked or in a mixed state.\n   */\n  pressed?: boolean | 'mixed';\n  /**\n   * The level of a heading.\n   */\n  level?: number;\n  valuemin?: number;\n  valuemax?: number;\n  autocomplete?: string;\n  haspopup?: string;\n  /**\n   * Whether and in what way this node's value is invalid.\n   */\n  invalid?: string;\n  orientation?: string;\n  /**\n   * Children of this node, if there are any.\n   */\n  children?: SerializedAXNode[];\n}\n\n/**\n * @public\n */\nexport interface SnapshotOptions {\n  /**\n   * Prune uninteresting nodes from the tree.\n   * @defaultValue `true`\n   */\n  interestingOnly?: boolean;\n  /**\n   * Root node to get the accessibility tree for\n   * @defaultValue The root node of the entire page.\n   */\n  root?: ElementHandle<Node>;\n}\n\n/**\n * The Accessibility class provides methods for inspecting the browser's\n * accessibility tree. The accessibility tree is used by assistive technology\n * such as {@link https://en.wikipedia.org/wiki/Screen_reader | screen readers} or\n * {@link https://en.wikipedia.org/wiki/Switch_access | switches}.\n *\n * @remarks\n *\n * Accessibility is a very platform-specific thing. On different platforms,\n * there are different screen readers that might have wildly different output.\n *\n * Blink - Chrome's rendering engine - has a concept of \"accessibility tree\",\n * which is then translated into different platform-specific APIs. Accessibility\n * namespace gives users access to the Blink Accessibility Tree.\n *\n * Most of the accessibility tree gets filtered out when converting from Blink\n * AX Tree to Platform-specific AX-Tree or by assistive technologies themselves.\n * By default, Puppeteer tries to approximate this filtering, exposing only\n * the \"interesting\" nodes of the tree.\n *\n * @public\n */\nexport class Accessibility {\n  #client: CDPSession;\n\n  /**\n   * @internal\n   */\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  /**\n   * Captures the current state of the accessibility tree.\n   * The returned object represents the root accessible node of the page.\n   *\n   * @remarks\n   *\n   * **NOTE** The Chrome accessibility tree contains nodes that go unused on\n   * most platforms and by most screen readers. Puppeteer will discard them as\n   * well for an easier to process tree, unless `interestingOnly` is set to\n   * `false`.\n   *\n   * @example\n   * An example of dumping the entire accessibility tree:\n   *\n   * ```ts\n   * const snapshot = await page.accessibility.snapshot();\n   * console.log(snapshot);\n   * ```\n   *\n   * @example\n   * An example of logging the focused node's name:\n   *\n   * ```ts\n   * const snapshot = await page.accessibility.snapshot();\n   * const node = findFocusedNode(snapshot);\n   * console.log(node && node.name);\n   *\n   * function findFocusedNode(node) {\n   *   if (node.focused) return node;\n   *   for (const child of node.children || []) {\n   *     const foundNode = findFocusedNode(child);\n   *     return foundNode;\n   *   }\n   *   return null;\n   * }\n   * ```\n   *\n   * @returns An AXNode object representing the snapshot.\n   */\n  public async snapshot(\n    options: SnapshotOptions = {}\n  ): Promise<SerializedAXNode | null> {\n    const {interestingOnly = true, root = null} = options;\n    const {nodes} = await this.#client.send('Accessibility.getFullAXTree');\n    let backendNodeId: number | undefined;\n    if (root) {\n      const {node} = await this.#client.send('DOM.describeNode', {\n        objectId: root.id,\n      });\n      backendNodeId = node.backendNodeId;\n    }\n    const defaultRoot = AXNode.createTree(nodes);\n    let needle: AXNode | null = defaultRoot;\n    if (backendNodeId) {\n      needle = defaultRoot.find(node => {\n        return node.payload.backendDOMNodeId === backendNodeId;\n      });\n      if (!needle) {\n        return null;\n      }\n    }\n    if (!interestingOnly) {\n      return this.serializeTree(needle)[0] ?? null;\n    }\n\n    const interestingNodes = new Set<AXNode>();\n    this.collectInterestingNodes(interestingNodes, defaultRoot, false);\n    if (!interestingNodes.has(needle)) {\n      return null;\n    }\n    return this.serializeTree(needle, interestingNodes)[0] ?? null;\n  }\n\n  private serializeTree(\n    node: AXNode,\n    interestingNodes?: Set<AXNode>\n  ): SerializedAXNode[] {\n    const children: SerializedAXNode[] = [];\n    for (const child of node.children) {\n      children.push(...this.serializeTree(child, interestingNodes));\n    }\n\n    if (interestingNodes && !interestingNodes.has(node)) {\n      return children;\n    }\n\n    const serializedNode = node.serialize();\n    if (children.length) {\n      serializedNode.children = children;\n    }\n    return [serializedNode];\n  }\n\n  private collectInterestingNodes(\n    collection: Set<AXNode>,\n    node: AXNode,\n    insideControl: boolean\n  ): void {\n    if (node.isInteresting(insideControl)) {\n      collection.add(node);\n    }\n    if (node.isLeafNode()) {\n      return;\n    }\n    insideControl = insideControl || node.isControl();\n    for (const child of node.children) {\n      this.collectInterestingNodes(collection, child, insideControl);\n    }\n  }\n}\n\nclass AXNode {\n  public payload: Protocol.Accessibility.AXNode;\n  public children: AXNode[] = [];\n\n  #richlyEditable = false;\n  #editable = false;\n  #focusable = false;\n  #hidden = false;\n  #name: string;\n  #role: string;\n  #ignored: boolean;\n  #cachedHasFocusableChild?: boolean;\n\n  constructor(payload: Protocol.Accessibility.AXNode) {\n    this.payload = payload;\n    this.#name = this.payload.name ? this.payload.name.value : '';\n    this.#role = this.payload.role ? this.payload.role.value : 'Unknown';\n    this.#ignored = this.payload.ignored;\n\n    for (const property of this.payload.properties || []) {\n      if (property.name === 'editable') {\n        this.#richlyEditable = property.value.value === 'richtext';\n        this.#editable = true;\n      }\n      if (property.name === 'focusable') {\n        this.#focusable = property.value.value;\n      }\n      if (property.name === 'hidden') {\n        this.#hidden = property.value.value;\n      }\n    }\n  }\n\n  #isPlainTextField(): boolean {\n    if (this.#richlyEditable) {\n      return false;\n    }\n    if (this.#editable) {\n      return true;\n    }\n    return this.#role === 'textbox' || this.#role === 'searchbox';\n  }\n\n  #isTextOnlyObject(): boolean {\n    const role = this.#role;\n    return role === 'LineBreak' || role === 'text' || role === 'InlineTextBox';\n  }\n\n  #hasFocusableChild(): boolean {\n    if (this.#cachedHasFocusableChild === undefined) {\n      this.#cachedHasFocusableChild = false;\n      for (const child of this.children) {\n        if (child.#focusable || child.#hasFocusableChild()) {\n          this.#cachedHasFocusableChild = true;\n          break;\n        }\n      }\n    }\n    return this.#cachedHasFocusableChild;\n  }\n\n  public find(predicate: (x: AXNode) => boolean): AXNode | null {\n    if (predicate(this)) {\n      return this;\n    }\n    for (const child of this.children) {\n      const result = child.find(predicate);\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  public isLeafNode(): boolean {\n    if (!this.children.length) {\n      return true;\n    }\n\n    // These types of objects may have children that we use as internal\n    // implementation details, but we want to expose them as leaves to platform\n    // accessibility APIs because screen readers might be confused if they find\n    // any children.\n    if (this.#isPlainTextField() || this.#isTextOnlyObject()) {\n      return true;\n    }\n\n    // Roles whose children are only presentational according to the ARIA and\n    // HTML5 Specs should be hidden from screen readers.\n    // (Note that whilst ARIA buttons can have only presentational children, HTML5\n    // buttons are allowed to have content.)\n    switch (this.#role) {\n      case 'doc-cover':\n      case 'graphics-symbol':\n      case 'img':\n      case 'Meter':\n      case 'scrollbar':\n      case 'slider':\n      case 'separator':\n      case 'progressbar':\n        return true;\n      default:\n        break;\n    }\n\n    // Here and below: Android heuristics\n    if (this.#hasFocusableChild()) {\n      return false;\n    }\n    if (this.#focusable && this.#name) {\n      return true;\n    }\n    if (this.#role === 'heading' && this.#name) {\n      return true;\n    }\n    return false;\n  }\n\n  public isControl(): boolean {\n    switch (this.#role) {\n      case 'button':\n      case 'checkbox':\n      case 'ColorWell':\n      case 'combobox':\n      case 'DisclosureTriangle':\n      case 'listbox':\n      case 'menu':\n      case 'menubar':\n      case 'menuitem':\n      case 'menuitemcheckbox':\n      case 'menuitemradio':\n      case 'radio':\n      case 'scrollbar':\n      case 'searchbox':\n      case 'slider':\n      case 'spinbutton':\n      case 'switch':\n      case 'tab':\n      case 'textbox':\n      case 'tree':\n      case 'treeitem':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  public isInteresting(insideControl: boolean): boolean {\n    const role = this.#role;\n    if (role === 'Ignored' || this.#hidden || this.#ignored) {\n      return false;\n    }\n\n    if (this.#focusable || this.#richlyEditable) {\n      return true;\n    }\n\n    // If it's not focusable but has a control role, then it's interesting.\n    if (this.isControl()) {\n      return true;\n    }\n\n    // A non focusable child of a control is not interesting\n    if (insideControl) {\n      return false;\n    }\n\n    return this.isLeafNode() && !!this.#name;\n  }\n\n  public serialize(): SerializedAXNode {\n    const properties = new Map<string, number | string | boolean>();\n    for (const property of this.payload.properties || []) {\n      properties.set(property.name.toLowerCase(), property.value.value);\n    }\n    if (this.payload.name) {\n      properties.set('name', this.payload.name.value);\n    }\n    if (this.payload.value) {\n      properties.set('value', this.payload.value.value);\n    }\n    if (this.payload.description) {\n      properties.set('description', this.payload.description.value);\n    }\n\n    const node: SerializedAXNode = {\n      role: this.#role,\n    };\n\n    type UserStringProperty =\n      | 'name'\n      | 'value'\n      | 'description'\n      | 'keyshortcuts'\n      | 'roledescription'\n      | 'valuetext';\n\n    const userStringProperties: UserStringProperty[] = [\n      'name',\n      'value',\n      'description',\n      'keyshortcuts',\n      'roledescription',\n      'valuetext',\n    ];\n    const getUserStringPropertyValue = (key: UserStringProperty): string => {\n      return properties.get(key) as string;\n    };\n\n    for (const userStringProperty of userStringProperties) {\n      if (!properties.has(userStringProperty)) {\n        continue;\n      }\n\n      node[userStringProperty] = getUserStringPropertyValue(userStringProperty);\n    }\n\n    type BooleanProperty =\n      | 'disabled'\n      | 'expanded'\n      | 'focused'\n      | 'modal'\n      | 'multiline'\n      | 'multiselectable'\n      | 'readonly'\n      | 'required'\n      | 'selected';\n    const booleanProperties: BooleanProperty[] = [\n      'disabled',\n      'expanded',\n      'focused',\n      'modal',\n      'multiline',\n      'multiselectable',\n      'readonly',\n      'required',\n      'selected',\n    ];\n    const getBooleanPropertyValue = (key: BooleanProperty): boolean => {\n      return properties.get(key) as boolean;\n    };\n\n    for (const booleanProperty of booleanProperties) {\n      // RootWebArea's treat focus differently than other nodes. They report whether\n      // their frame  has focus, not whether focus is specifically on the root\n      // node.\n      if (booleanProperty === 'focused' && this.#role === 'RootWebArea') {\n        continue;\n      }\n      const value = getBooleanPropertyValue(booleanProperty);\n      if (!value) {\n        continue;\n      }\n      node[booleanProperty] = getBooleanPropertyValue(booleanProperty);\n    }\n\n    type TristateProperty = 'checked' | 'pressed';\n    const tristateProperties: TristateProperty[] = ['checked', 'pressed'];\n    for (const tristateProperty of tristateProperties) {\n      if (!properties.has(tristateProperty)) {\n        continue;\n      }\n      const value = properties.get(tristateProperty);\n      node[tristateProperty] =\n        value === 'mixed' ? 'mixed' : value === 'true' ? true : false;\n    }\n\n    type NumbericalProperty = 'level' | 'valuemax' | 'valuemin';\n    const numericalProperties: NumbericalProperty[] = [\n      'level',\n      'valuemax',\n      'valuemin',\n    ];\n    const getNumericalPropertyValue = (key: NumbericalProperty): number => {\n      return properties.get(key) as number;\n    };\n    for (const numericalProperty of numericalProperties) {\n      if (!properties.has(numericalProperty)) {\n        continue;\n      }\n      node[numericalProperty] = getNumericalPropertyValue(numericalProperty);\n    }\n\n    type TokenProperty =\n      | 'autocomplete'\n      | 'haspopup'\n      | 'invalid'\n      | 'orientation';\n    const tokenProperties: TokenProperty[] = [\n      'autocomplete',\n      'haspopup',\n      'invalid',\n      'orientation',\n    ];\n    const getTokenPropertyValue = (key: TokenProperty): string => {\n      return properties.get(key) as string;\n    };\n    for (const tokenProperty of tokenProperties) {\n      const value = getTokenPropertyValue(tokenProperty);\n      if (!value || value === 'false') {\n        continue;\n      }\n      node[tokenProperty] = getTokenPropertyValue(tokenProperty);\n    }\n    return node;\n  }\n\n  public static createTree(payloads: Protocol.Accessibility.AXNode[]): AXNode {\n    const nodeById = new Map<string, AXNode>();\n    for (const payload of payloads) {\n      nodeById.set(payload.nodeId, new AXNode(payload));\n    }\n    for (const node of nodeById.values()) {\n      for (const childId of node.payload.childIds || []) {\n        const child = nodeById.get(childId);\n        if (child) {\n          node.children.push(child);\n        }\n      }\n    }\n    return nodeById.values().next().value;\n  }\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\nimport {ProtocolMapping} from 'devtools-protocol/types/protocol-mapping.js';\n\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/util.js';\n\nimport {ConnectionTransport} from './ConnectionTransport.js';\nimport {debug} from './Debug.js';\nimport {TargetCloseError, ProtocolError} from './Errors.js';\nimport {EventEmitter} from './EventEmitter.js';\nimport {debugError} from './util.js';\n\nconst debugProtocolSend = debug('puppeteer:protocol:SEND \u25BA');\nconst debugProtocolReceive = debug('puppeteer:protocol:RECV \u25C0');\n\n/**\n * @public\n */\nexport {ConnectionTransport, ProtocolMapping};\n\n/**\n * Internal events that the Connection class emits.\n *\n * @internal\n */\nexport const ConnectionEmittedEvents = {\n  Disconnected: Symbol('Connection.Disconnected'),\n} as const;\n\n/**\n * @internal\n */\ntype GetIdFn = () => number;\n\n/**\n * @internal\n */\nfunction createIncrementalIdGenerator(): GetIdFn {\n  let id = 0;\n  return (): number => {\n    return ++id;\n  };\n}\n\n/**\n * @internal\n */\nexport class Callback {\n  #id: number;\n  #error = new ProtocolError();\n  #deferred = Deferred.create<unknown>();\n  #timer?: ReturnType<typeof setTimeout>;\n  #label: string;\n\n  constructor(id: number, label: string, timeout?: number) {\n    this.#id = id;\n    this.#label = label;\n    if (timeout) {\n      this.#timer = setTimeout(() => {\n        this.#deferred.reject(\n          rewriteError(\n            this.#error,\n            `${label} timed out. Increase the 'protocolTimeout' setting in launch/connect calls for a higher timeout if needed.`\n          )\n        );\n      }, timeout);\n    }\n  }\n\n  resolve(value: unknown): void {\n    clearTimeout(this.#timer);\n    this.#deferred.resolve(value);\n  }\n\n  reject(error: Error): void {\n    clearTimeout(this.#timer);\n    this.#deferred.reject(error);\n  }\n\n  get id(): number {\n    return this.#id;\n  }\n\n  get promise(): Deferred<unknown> {\n    return this.#deferred;\n  }\n\n  get error(): ProtocolError {\n    return this.#error;\n  }\n\n  get label(): string {\n    return this.#label;\n  }\n}\n\n/**\n * Manages callbacks and their IDs for the protocol request/response communication.\n *\n * @internal\n */\nexport class CallbackRegistry {\n  #callbacks: Map<number, Callback> = new Map();\n  #idGenerator = createIncrementalIdGenerator();\n\n  create(\n    label: string,\n    timeout: number | undefined,\n    request: (id: number) => void\n  ): Promise<unknown> {\n    const callback = new Callback(this.#idGenerator(), label, timeout);\n    this.#callbacks.set(callback.id, callback);\n    try {\n      request(callback.id);\n    } catch (error) {\n      // We still throw sync errors synchronously and clean up the scheduled\n      // callback.\n      callback.promise\n        .valueOrThrow()\n        .catch(debugError)\n        .finally(() => {\n          this.#callbacks.delete(callback.id);\n        });\n      callback.reject(error as Error);\n      throw error;\n    }\n    // Must only have sync code up until here.\n    return callback.promise.valueOrThrow().finally(() => {\n      this.#callbacks.delete(callback.id);\n    });\n  }\n\n  reject(id: number, message: string, originalMessage?: string): void {\n    const callback = this.#callbacks.get(id);\n    if (!callback) {\n      return;\n    }\n    this._reject(callback, message, originalMessage);\n  }\n\n  _reject(\n    callback: Callback,\n    errorMessage: string | ProtocolError,\n    originalMessage?: string\n  ): void {\n    const isError = errorMessage instanceof ProtocolError;\n    const message = isError ? errorMessage.message : errorMessage;\n    const error = isError ? errorMessage : callback.error;\n\n    callback.reject(\n      rewriteError(\n        error,\n        `Protocol error (${callback.label}): ${message}`,\n        originalMessage\n      )\n    );\n  }\n\n  resolve(id: number, value: unknown): void {\n    const callback = this.#callbacks.get(id);\n    if (!callback) {\n      return;\n    }\n    callback.resolve(value);\n  }\n\n  clear(): void {\n    for (const callback of this.#callbacks.values()) {\n      // TODO: probably we can accept error messages as params.\n      this._reject(callback, new TargetCloseError('Target closed'));\n    }\n    this.#callbacks.clear();\n  }\n}\n\n/**\n * @public\n */\nexport class Connection extends EventEmitter {\n  #url: string;\n  #transport: ConnectionTransport;\n  #delay: number;\n  #timeout: number;\n  #sessions: Map<string, CDPSessionImpl> = new Map();\n  #closed = false;\n  #manuallyAttached = new Set<string>();\n  #callbacks = new CallbackRegistry();\n\n  constructor(\n    url: string,\n    transport: ConnectionTransport,\n    delay = 0,\n    timeout?: number\n  ) {\n    super();\n    this.#url = url;\n    this.#delay = delay;\n    this.#timeout = timeout ?? 180_000;\n\n    this.#transport = transport;\n    this.#transport.onmessage = this.onMessage.bind(this);\n    this.#transport.onclose = this.#onClose.bind(this);\n  }\n\n  static fromSession(session: CDPSession): Connection | undefined {\n    return session.connection();\n  }\n\n  get timeout(): number {\n    return this.#timeout;\n  }\n\n  /**\n   * @internal\n   */\n  get _closed(): boolean {\n    return this.#closed;\n  }\n\n  /**\n   * @internal\n   */\n  get _sessions(): Map<string, CDPSession> {\n    return this.#sessions;\n  }\n\n  /**\n   * @param sessionId - The session id\n   * @returns The current CDP session if it exists\n   */\n  session(sessionId: string): CDPSession | null {\n    return this.#sessions.get(sessionId) || null;\n  }\n\n  url(): string {\n    return this.#url;\n  }\n\n  send<T extends keyof ProtocolMapping.Commands>(\n    method: T,\n    ...paramArgs: ProtocolMapping.Commands[T]['paramsType']\n  ): Promise<ProtocolMapping.Commands[T]['returnType']> {\n    // There is only ever 1 param arg passed, but the Protocol defines it as an\n    // array of 0 or 1 items See this comment:\n    // https://github.com/ChromeDevTools/devtools-protocol/pull/113#issuecomment-412603285\n    // which explains why the protocol defines the params this way for better\n    // type-inference.\n    // So now we check if there are any params or not and deal with them accordingly.\n    const params = paramArgs.length ? paramArgs[0] : undefined;\n    return this._rawSend(this.#callbacks, method, params);\n  }\n\n  /**\n   * @internal\n   */\n  _rawSend<T extends keyof ProtocolMapping.Commands>(\n    callbacks: CallbackRegistry,\n    method: T,\n    params: ProtocolMapping.Commands[T]['paramsType'][0],\n    sessionId?: string\n  ): Promise<ProtocolMapping.Commands[T]['returnType']> {\n    return callbacks.create(method, this.#timeout, id => {\n      const stringifiedMessage = JSON.stringify({\n        method,\n        params,\n        id,\n        sessionId,\n      });\n      debugProtocolSend(stringifiedMessage);\n      this.#transport.send(stringifiedMessage);\n    }) as Promise<ProtocolMapping.Commands[T]['returnType']>;\n  }\n\n  /**\n   * @internal\n   */\n  async closeBrowser(): Promise<void> {\n    await this.send('Browser.close');\n  }\n\n  /**\n   * @internal\n   */\n  protected async onMessage(message: string): Promise<void> {\n    if (this.#delay) {\n      await new Promise(f => {\n        return setTimeout(f, this.#delay);\n      });\n    }\n    debugProtocolReceive(message);\n    const object = JSON.parse(message);\n    if (object.method === 'Target.attachedToTarget') {\n      const sessionId = object.params.sessionId;\n      const session = new CDPSessionImpl(\n        this,\n        object.params.targetInfo.type,\n        sessionId\n      );\n      this.#sessions.set(sessionId, session);\n      this.emit('sessionattached', session);\n      const parentSession = this.#sessions.get(object.sessionId);\n      if (parentSession) {\n        parentSession.emit('sessionattached', session);\n      }\n    } else if (object.method === 'Target.detachedFromTarget') {\n      const session = this.#sessions.get(object.params.sessionId);\n      if (session) {\n        session._onClosed();\n        this.#sessions.delete(object.params.sessionId);\n        this.emit('sessiondetached', session);\n        const parentSession = this.#sessions.get(object.sessionId);\n        if (parentSession) {\n          parentSession.emit('sessiondetached', session);\n        }\n      }\n    }\n    if (object.sessionId) {\n      const session = this.#sessions.get(object.sessionId);\n      if (session) {\n        session._onMessage(object);\n      }\n    } else if (object.id) {\n      if (object.error) {\n        this.#callbacks.reject(\n          object.id,\n          createProtocolErrorMessage(object),\n          object.error.message\n        );\n      } else {\n        this.#callbacks.resolve(object.id, object.result);\n      }\n    } else {\n      this.emit(object.method, object.params);\n    }\n  }\n\n  #onClose(): void {\n    if (this.#closed) {\n      return;\n    }\n    this.#closed = true;\n    this.#transport.onmessage = undefined;\n    this.#transport.onclose = undefined;\n    this.#callbacks.clear();\n    for (const session of this.#sessions.values()) {\n      session._onClosed();\n    }\n    this.#sessions.clear();\n    this.emit(ConnectionEmittedEvents.Disconnected);\n  }\n\n  dispose(): void {\n    this.#onClose();\n    this.#transport.close();\n  }\n\n  /**\n   * @internal\n   */\n  isAutoAttached(targetId: string): boolean {\n    return !this.#manuallyAttached.has(targetId);\n  }\n\n  /**\n   * @internal\n   */\n  async _createSession(\n    targetInfo: Protocol.Target.TargetInfo,\n    isAutoAttachEmulated = true\n  ): Promise<CDPSession> {\n    if (!isAutoAttachEmulated) {\n      this.#manuallyAttached.add(targetInfo.targetId);\n    }\n    const {sessionId} = await this.send('Target.attachToTarget', {\n      targetId: targetInfo.targetId,\n      flatten: true,\n    });\n    this.#manuallyAttached.delete(targetInfo.targetId);\n    const session = this.#sessions.get(sessionId);\n    if (!session) {\n      throw new Error('CDPSession creation failed.');\n    }\n    return session;\n  }\n\n  /**\n   * @param targetInfo - The target info\n   * @returns The CDP session that is created\n   */\n  async createSession(\n    targetInfo: Protocol.Target.TargetInfo\n  ): Promise<CDPSession> {\n    return await this._createSession(targetInfo, false);\n  }\n}\n\n/**\n * @internal\n */\nexport interface CDPSessionOnMessageObject {\n  id?: number;\n  method: string;\n  params: Record<string, unknown>;\n  error: {message: string; data: any; code: number};\n  result?: any;\n}\n\n/**\n * Internal events that the CDPSession class emits.\n *\n * @internal\n */\nexport const CDPSessionEmittedEvents = {\n  Disconnected: Symbol('CDPSession.Disconnected'),\n} as const;\n\n/**\n * The `CDPSession` instances are used to talk raw Chrome Devtools Protocol.\n *\n * @remarks\n *\n * Protocol methods can be called with {@link CDPSession.send} method and protocol\n * events can be subscribed to with `CDPSession.on` method.\n *\n * Useful links: {@link https://chromedevtools.github.io/devtools-protocol/ | DevTools Protocol Viewer}\n * and {@link https://github.com/aslushnikov/getting-started-with-cdp/blob/HEAD/README.md | Getting Started with DevTools Protocol}.\n *\n * @example\n *\n * ```ts\n * const client = await page.target().createCDPSession();\n * await client.send('Animation.enable');\n * client.on('Animation.animationCreated', () =>\n *   console.log('Animation created!')\n * );\n * const response = await client.send('Animation.getPlaybackRate');\n * console.log('playback rate is ' + response.playbackRate);\n * await client.send('Animation.setPlaybackRate', {\n *   playbackRate: response.playbackRate / 2,\n * });\n * ```\n *\n * @public\n */\nexport class CDPSession extends EventEmitter {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n\n  connection(): Connection | undefined {\n    throw new Error('Not implemented');\n  }\n\n  send<T extends keyof ProtocolMapping.Commands>(\n    method: T,\n    ...paramArgs: ProtocolMapping.Commands[T]['paramsType']\n  ): Promise<ProtocolMapping.Commands[T]['returnType']>;\n  send<T extends keyof ProtocolMapping.Commands>(): Promise<\n    ProtocolMapping.Commands[T]['returnType']\n  > {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Detaches the cdpSession from the target. Once detached, the cdpSession object\n   * won't emit any events and can't be used to send messages.\n   */\n  async detach(): Promise<void> {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Returns the session's id.\n   */\n  id(): string {\n    throw new Error('Not implemented');\n  }\n}\n\n/**\n * @internal\n */\nexport class CDPSessionImpl extends CDPSession {\n  #sessionId: string;\n  #targetType: string;\n  #callbacks = new CallbackRegistry();\n  #connection?: Connection;\n\n  /**\n   * @internal\n   */\n  constructor(connection: Connection, targetType: string, sessionId: string) {\n    super();\n    this.#connection = connection;\n    this.#targetType = targetType;\n    this.#sessionId = sessionId;\n  }\n\n  override connection(): Connection | undefined {\n    return this.#connection;\n  }\n\n  override send<T extends keyof ProtocolMapping.Commands>(\n    method: T,\n    ...paramArgs: ProtocolMapping.Commands[T]['paramsType']\n  ): Promise<ProtocolMapping.Commands[T]['returnType']> {\n    if (!this.#connection) {\n      return Promise.reject(\n        new TargetCloseError(\n          `Protocol error (${method}): Session closed. Most likely the ${\n            this.#targetType\n          } has been closed.`\n        )\n      );\n    }\n    // See the comment in Connection#send explaining why we do this.\n    const params = paramArgs.length ? paramArgs[0] : undefined;\n    return this.#connection._rawSend(\n      this.#callbacks,\n      method,\n      params,\n      this.#sessionId\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _onMessage(object: CDPSessionOnMessageObject): void {\n    if (object.id) {\n      if (object.error) {\n        this.#callbacks.reject(\n          object.id,\n          createProtocolErrorMessage(object),\n          object.error.message\n        );\n      } else {\n        this.#callbacks.resolve(object.id, object.result);\n      }\n    } else {\n      assert(!object.id);\n      this.emit(object.method, object.params);\n    }\n  }\n\n  /**\n   * Detaches the cdpSession from the target. Once detached, the cdpSession object\n   * won't emit any events and can't be used to send messages.\n   */\n  override async detach(): Promise<void> {\n    if (!this.#connection) {\n      throw new Error(\n        `Session already detached. Most likely the ${\n          this.#targetType\n        } has been closed.`\n      );\n    }\n    await this.#connection.send('Target.detachFromTarget', {\n      sessionId: this.#sessionId,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _onClosed(): void {\n    this.#callbacks.clear();\n    this.#connection = undefined;\n    this.emit(CDPSessionEmittedEvents.Disconnected);\n  }\n\n  /**\n   * Returns the session's id.\n   */\n  override id(): string {\n    return this.#sessionId;\n  }\n}\n\nfunction createProtocolErrorMessage(object: {\n  error: {message: string; data: any; code: number};\n}): string {\n  let message = `${object.error.message}`;\n  // TODO: remove the type checks when we stop connecting to BiDi with a CDP\n  // client.\n  if (\n    object.error &&\n    typeof object.error === 'object' &&\n    'data' in object.error\n  ) {\n    message += ` ${object.error.data}`;\n  }\n  return message;\n}\n\nfunction rewriteError(\n  error: ProtocolError,\n  message: string,\n  originalMessage?: string\n): Error {\n  error.message = message;\n  error.originalMessage = originalMessage ?? error.originalMessage;\n  return error;\n}\n\n/**\n * @internal\n */\nexport function isTargetClosedError(error: Error): boolean {\n  return error instanceof TargetCloseError;\n}\n", "/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {JSHandle} from '../api/JSHandle.js';\n\n/**\n * @public\n */\nexport interface ConsoleMessageLocation {\n  /**\n   * URL of the resource if known or `undefined` otherwise.\n   */\n  url?: string;\n\n  /**\n   * 0-based line number in the resource if known or `undefined` otherwise.\n   */\n  lineNumber?: number;\n\n  /**\n   * 0-based column number in the resource if known or `undefined` otherwise.\n   */\n  columnNumber?: number;\n}\n\n/**\n * The supported types for console messages.\n * @public\n */\nexport type ConsoleMessageType =\n  | 'log'\n  | 'debug'\n  | 'info'\n  | 'error'\n  | 'warning'\n  | 'dir'\n  | 'dirxml'\n  | 'table'\n  | 'trace'\n  | 'clear'\n  | 'startGroup'\n  | 'startGroupCollapsed'\n  | 'endGroup'\n  | 'assert'\n  | 'profile'\n  | 'profileEnd'\n  | 'count'\n  | 'timeEnd'\n  | 'verbose';\n\n/**\n * ConsoleMessage objects are dispatched by page via the 'console' event.\n * @public\n */\nexport class ConsoleMessage {\n  #type: ConsoleMessageType;\n  #text: string;\n  #args: JSHandle[];\n  #stackTraceLocations: ConsoleMessageLocation[];\n\n  /**\n   * @public\n   */\n  constructor(\n    type: ConsoleMessageType,\n    text: string,\n    args: JSHandle[],\n    stackTraceLocations: ConsoleMessageLocation[]\n  ) {\n    this.#type = type;\n    this.#text = text;\n    this.#args = args;\n    this.#stackTraceLocations = stackTraceLocations;\n  }\n\n  /**\n   * The type of the console message.\n   */\n  type(): ConsoleMessageType {\n    return this.#type;\n  }\n\n  /**\n   * The text of the console message.\n   */\n  text(): string {\n    return this.#text;\n  }\n\n  /**\n   * An array of arguments passed to the console.\n   */\n  args(): JSHandle[] {\n    return this.#args;\n  }\n\n  /**\n   * The location of the console message.\n   */\n  location(): ConsoleMessageLocation {\n    return this.#stackTraceLocations[0] ?? {};\n  }\n\n  /**\n   * The array of locations on the stack of the console message.\n   */\n  stackTrace(): ConsoleMessageLocation[] {\n    return this.#stackTraceLocations;\n  }\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {assert} from '../util/assert.js';\n\nimport {CDPSession} from './Connection.js';\nimport {\n  addEventListener,\n  debugError,\n  PuppeteerEventListener,\n  PuppeteerURL,\n  removeEventListeners,\n} from './util.js';\n\n/**\n * @internal\n */\nexport {PuppeteerEventListener};\n\n/**\n * The CoverageEntry class represents one entry of the coverage report.\n * @public\n */\nexport interface CoverageEntry {\n  /**\n   * The URL of the style sheet or script.\n   */\n  url: string;\n  /**\n   * The content of the style sheet or script.\n   */\n  text: string;\n  /**\n   * The covered range as start and end positions.\n   */\n  ranges: Array<{start: number; end: number}>;\n}\n\n/**\n * The CoverageEntry class for JavaScript\n * @public\n */\nexport interface JSCoverageEntry extends CoverageEntry {\n  /**\n   * Raw V8 script coverage entry.\n   */\n  rawScriptCoverage?: Protocol.Profiler.ScriptCoverage;\n}\n\n/**\n * Set of configurable options for JS coverage.\n * @public\n */\nexport interface JSCoverageOptions {\n  /**\n   * Whether to reset coverage on every navigation.\n   */\n  resetOnNavigation?: boolean;\n  /**\n   * Whether anonymous scripts generated by the page should be reported.\n   */\n  reportAnonymousScripts?: boolean;\n  /**\n   * Whether the result includes raw V8 script coverage entries.\n   */\n  includeRawScriptCoverage?: boolean;\n  /**\n   * Whether to collect coverage information at the block level.\n   * If true, coverage will be collected at the block level (this is the default).\n   * If false, coverage will be collected at the function level.\n   */\n  useBlockCoverage?: boolean;\n}\n\n/**\n * Set of configurable options for CSS coverage.\n * @public\n */\nexport interface CSSCoverageOptions {\n  /**\n   * Whether to reset coverage on every navigation.\n   */\n  resetOnNavigation?: boolean;\n}\n\n/**\n * The Coverage class provides methods to gather information about parts of\n * JavaScript and CSS that were used by the page.\n *\n * @remarks\n * To output coverage in a form consumable by {@link https://github.com/istanbuljs | Istanbul},\n * see {@link https://github.com/istanbuljs/puppeteer-to-istanbul | puppeteer-to-istanbul}.\n *\n * @example\n * An example of using JavaScript and CSS coverage to get percentage of initially\n * executed code:\n *\n * ```ts\n * // Enable both JavaScript and CSS coverage\n * await Promise.all([\n *   page.coverage.startJSCoverage(),\n *   page.coverage.startCSSCoverage(),\n * ]);\n * // Navigate to page\n * await page.goto('https://example.com');\n * // Disable both JavaScript and CSS coverage\n * const [jsCoverage, cssCoverage] = await Promise.all([\n *   page.coverage.stopJSCoverage(),\n *   page.coverage.stopCSSCoverage(),\n * ]);\n * let totalBytes = 0;\n * let usedBytes = 0;\n * const coverage = [...jsCoverage, ...cssCoverage];\n * for (const entry of coverage) {\n *   totalBytes += entry.text.length;\n *   for (const range of entry.ranges) usedBytes += range.end - range.start - 1;\n * }\n * console.log(`Bytes used: ${(usedBytes / totalBytes) * 100}%`);\n * ```\n *\n * @public\n */\nexport class Coverage {\n  #jsCoverage: JSCoverage;\n  #cssCoverage: CSSCoverage;\n\n  constructor(client: CDPSession) {\n    this.#jsCoverage = new JSCoverage(client);\n    this.#cssCoverage = new CSSCoverage(client);\n  }\n\n  /**\n   * @param options - Set of configurable options for coverage defaults to\n   * `resetOnNavigation : true, reportAnonymousScripts : false,`\n   * `includeRawScriptCoverage : false, useBlockCoverage : true`\n   * @returns Promise that resolves when coverage is started.\n   *\n   * @remarks\n   * Anonymous scripts are ones that don't have an associated url. These are\n   * scripts that are dynamically created on the page using `eval` or\n   * `new Function`. If `reportAnonymousScripts` is set to `true`, anonymous\n   * scripts URL will start with `debugger://VM` (unless a magic //# sourceURL\n   * comment is present, in which case that will the be URL).\n   */\n  async startJSCoverage(options: JSCoverageOptions = {}): Promise<void> {\n    return await this.#jsCoverage.start(options);\n  }\n\n  /**\n   * Promise that resolves to the array of coverage reports for\n   * all scripts.\n   *\n   * @remarks\n   * JavaScript Coverage doesn't include anonymous scripts by default.\n   * However, scripts with sourceURLs are reported.\n   */\n  async stopJSCoverage(): Promise<JSCoverageEntry[]> {\n    return await this.#jsCoverage.stop();\n  }\n\n  /**\n   * @param options - Set of configurable options for coverage, defaults to\n   * `resetOnNavigation : true`\n   * @returns Promise that resolves when coverage is started.\n   */\n  async startCSSCoverage(options: CSSCoverageOptions = {}): Promise<void> {\n    return await this.#cssCoverage.start(options);\n  }\n\n  /**\n   * Promise that resolves to the array of coverage reports\n   * for all stylesheets.\n   *\n   * @remarks\n   * CSS Coverage doesn't include dynamically injected style tags\n   * without sourceURLs.\n   */\n  async stopCSSCoverage(): Promise<CoverageEntry[]> {\n    return await this.#cssCoverage.stop();\n  }\n}\n\n/**\n * @public\n */\nexport class JSCoverage {\n  #client: CDPSession;\n  #enabled = false;\n  #scriptURLs = new Map<string, string>();\n  #scriptSources = new Map<string, string>();\n  #eventListeners: PuppeteerEventListener[] = [];\n  #resetOnNavigation = false;\n  #reportAnonymousScripts = false;\n  #includeRawScriptCoverage = false;\n\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  async start(\n    options: {\n      resetOnNavigation?: boolean;\n      reportAnonymousScripts?: boolean;\n      includeRawScriptCoverage?: boolean;\n      useBlockCoverage?: boolean;\n    } = {}\n  ): Promise<void> {\n    assert(!this.#enabled, 'JSCoverage is already enabled');\n    const {\n      resetOnNavigation = true,\n      reportAnonymousScripts = false,\n      includeRawScriptCoverage = false,\n      useBlockCoverage = true,\n    } = options;\n    this.#resetOnNavigation = resetOnNavigation;\n    this.#reportAnonymousScripts = reportAnonymousScripts;\n    this.#includeRawScriptCoverage = includeRawScriptCoverage;\n    this.#enabled = true;\n    this.#scriptURLs.clear();\n    this.#scriptSources.clear();\n    this.#eventListeners = [\n      addEventListener(\n        this.#client,\n        'Debugger.scriptParsed',\n        this.#onScriptParsed.bind(this)\n      ),\n      addEventListener(\n        this.#client,\n        'Runtime.executionContextsCleared',\n        this.#onExecutionContextsCleared.bind(this)\n      ),\n    ];\n    await Promise.all([\n      this.#client.send('Profiler.enable'),\n      this.#client.send('Profiler.startPreciseCoverage', {\n        callCount: this.#includeRawScriptCoverage,\n        detailed: useBlockCoverage,\n      }),\n      this.#client.send('Debugger.enable'),\n      this.#client.send('Debugger.setSkipAllPauses', {skip: true}),\n    ]);\n  }\n\n  #onExecutionContextsCleared(): void {\n    if (!this.#resetOnNavigation) {\n      return;\n    }\n    this.#scriptURLs.clear();\n    this.#scriptSources.clear();\n  }\n\n  async #onScriptParsed(\n    event: Protocol.Debugger.ScriptParsedEvent\n  ): Promise<void> {\n    // Ignore puppeteer-injected scripts\n    if (PuppeteerURL.isPuppeteerURL(event.url)) {\n      return;\n    }\n    // Ignore other anonymous scripts unless the reportAnonymousScripts option is true.\n    if (!event.url && !this.#reportAnonymousScripts) {\n      return;\n    }\n    try {\n      const response = await this.#client.send('Debugger.getScriptSource', {\n        scriptId: event.scriptId,\n      });\n      this.#scriptURLs.set(event.scriptId, event.url);\n      this.#scriptSources.set(event.scriptId, response.scriptSource);\n    } catch (error) {\n      // This might happen if the page has already navigated away.\n      debugError(error);\n    }\n  }\n\n  async stop(): Promise<JSCoverageEntry[]> {\n    assert(this.#enabled, 'JSCoverage is not enabled');\n    this.#enabled = false;\n\n    const result = await Promise.all([\n      this.#client.send('Profiler.takePreciseCoverage'),\n      this.#client.send('Profiler.stopPreciseCoverage'),\n      this.#client.send('Profiler.disable'),\n      this.#client.send('Debugger.disable'),\n    ]);\n\n    removeEventListeners(this.#eventListeners);\n\n    const coverage = [];\n    const profileResponse = result[0];\n\n    for (const entry of profileResponse.result) {\n      let url = this.#scriptURLs.get(entry.scriptId);\n      if (!url && this.#reportAnonymousScripts) {\n        url = 'debugger://VM' + entry.scriptId;\n      }\n      const text = this.#scriptSources.get(entry.scriptId);\n      if (text === undefined || url === undefined) {\n        continue;\n      }\n      const flattenRanges = [];\n      for (const func of entry.functions) {\n        flattenRanges.push(...func.ranges);\n      }\n      const ranges = convertToDisjointRanges(flattenRanges);\n      if (!this.#includeRawScriptCoverage) {\n        coverage.push({url, ranges, text});\n      } else {\n        coverage.push({url, ranges, text, rawScriptCoverage: entry});\n      }\n    }\n    return coverage;\n  }\n}\n\n/**\n * @public\n */\nexport class CSSCoverage {\n  #client: CDPSession;\n  #enabled = false;\n  #stylesheetURLs = new Map<string, string>();\n  #stylesheetSources = new Map<string, string>();\n  #eventListeners: PuppeteerEventListener[] = [];\n  #resetOnNavigation = false;\n\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  async start(options: {resetOnNavigation?: boolean} = {}): Promise<void> {\n    assert(!this.#enabled, 'CSSCoverage is already enabled');\n    const {resetOnNavigation = true} = options;\n    this.#resetOnNavigation = resetOnNavigation;\n    this.#enabled = true;\n    this.#stylesheetURLs.clear();\n    this.#stylesheetSources.clear();\n    this.#eventListeners = [\n      addEventListener(\n        this.#client,\n        'CSS.styleSheetAdded',\n        this.#onStyleSheet.bind(this)\n      ),\n      addEventListener(\n        this.#client,\n        'Runtime.executionContextsCleared',\n        this.#onExecutionContextsCleared.bind(this)\n      ),\n    ];\n    await Promise.all([\n      this.#client.send('DOM.enable'),\n      this.#client.send('CSS.enable'),\n      this.#client.send('CSS.startRuleUsageTracking'),\n    ]);\n  }\n\n  #onExecutionContextsCleared(): void {\n    if (!this.#resetOnNavigation) {\n      return;\n    }\n    this.#stylesheetURLs.clear();\n    this.#stylesheetSources.clear();\n  }\n\n  async #onStyleSheet(event: Protocol.CSS.StyleSheetAddedEvent): Promise<void> {\n    const header = event.header;\n    // Ignore anonymous scripts\n    if (!header.sourceURL) {\n      return;\n    }\n    try {\n      const response = await this.#client.send('CSS.getStyleSheetText', {\n        styleSheetId: header.styleSheetId,\n      });\n      this.#stylesheetURLs.set(header.styleSheetId, header.sourceURL);\n      this.#stylesheetSources.set(header.styleSheetId, response.text);\n    } catch (error) {\n      // This might happen if the page has already navigated away.\n      debugError(error);\n    }\n  }\n\n  async stop(): Promise<CoverageEntry[]> {\n    assert(this.#enabled, 'CSSCoverage is not enabled');\n    this.#enabled = false;\n    const ruleTrackingResponse = await this.#client.send(\n      'CSS.stopRuleUsageTracking'\n    );\n    await Promise.all([\n      this.#client.send('CSS.disable'),\n      this.#client.send('DOM.disable'),\n    ]);\n    removeEventListeners(this.#eventListeners);\n\n    // aggregate by styleSheetId\n    const styleSheetIdToCoverage = new Map();\n    for (const entry of ruleTrackingResponse.ruleUsage) {\n      let ranges = styleSheetIdToCoverage.get(entry.styleSheetId);\n      if (!ranges) {\n        ranges = [];\n        styleSheetIdToCoverage.set(entry.styleSheetId, ranges);\n      }\n      ranges.push({\n        startOffset: entry.startOffset,\n        endOffset: entry.endOffset,\n        count: entry.used ? 1 : 0,\n      });\n    }\n\n    const coverage: CoverageEntry[] = [];\n    for (const styleSheetId of this.#stylesheetURLs.keys()) {\n      const url = this.#stylesheetURLs.get(styleSheetId);\n      assert(\n        typeof url !== 'undefined',\n        `Stylesheet URL is undefined (styleSheetId=${styleSheetId})`\n      );\n      const text = this.#stylesheetSources.get(styleSheetId);\n      assert(\n        typeof text !== 'undefined',\n        `Stylesheet text is undefined (styleSheetId=${styleSheetId})`\n      );\n      const ranges = convertToDisjointRanges(\n        styleSheetIdToCoverage.get(styleSheetId) || []\n      );\n      coverage.push({url, ranges, text});\n    }\n\n    return coverage;\n  }\n}\n\nfunction convertToDisjointRanges(\n  nestedRanges: Array<{startOffset: number; endOffset: number; count: number}>\n): Array<{start: number; end: number}> {\n  const points = [];\n  for (const range of nestedRanges) {\n    points.push({offset: range.startOffset, type: 0, range});\n    points.push({offset: range.endOffset, type: 1, range});\n  }\n  // Sort points to form a valid parenthesis sequence.\n  points.sort((a, b) => {\n    // Sort with increasing offsets.\n    if (a.offset !== b.offset) {\n      return a.offset - b.offset;\n    }\n    // All \"end\" points should go before \"start\" points.\n    if (a.type !== b.type) {\n      return b.type - a.type;\n    }\n    const aLength = a.range.endOffset - a.range.startOffset;\n    const bLength = b.range.endOffset - b.range.startOffset;\n    // For two \"start\" points, the one with longer range goes first.\n    if (a.type === 0) {\n      return bLength - aLength;\n    }\n    // For two \"end\" points, the one with shorter range goes first.\n    return aLength - bLength;\n  });\n\n  const hitCountStack = [];\n  const results: Array<{\n    start: number;\n    end: number;\n  }> = [];\n  let lastOffset = 0;\n  // Run scanning line to intersect all ranges.\n  for (const point of points) {\n    if (\n      hitCountStack.length &&\n      lastOffset < point.offset &&\n      hitCountStack[hitCountStack.length - 1]! > 0\n    ) {\n      const lastResult = results[results.length - 1];\n      if (lastResult && lastResult.end === lastOffset) {\n        lastResult.end = point.offset;\n      } else {\n        results.push({start: lastOffset, end: point.offset});\n      }\n    }\n    lastOffset = point.offset;\n    if (point.type === 0) {\n      hitCountStack.push(point.range.count);\n    } else {\n      hitCountStack.pop();\n    }\n  }\n  // Filter out empty ranges.\n  return results.filter(range => {\n    return range.end - range.start > 0;\n  });\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Protocol} from 'devtools-protocol';\n\nimport {GeolocationOptions, MediaFeature} from '../api/Page.js';\nimport {assert} from '../util/assert.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {CDPSession} from './Connection.js';\nimport {Viewport} from './PuppeteerViewport.js';\n\n/**\n * @internal\n */\nexport class EmulationManager {\n  #client: CDPSession;\n  #emulatingMobile = false;\n  #hasTouch = false;\n  #javascriptEnabled = true;\n\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  get javascriptEnabled(): boolean {\n    return this.#javascriptEnabled;\n  }\n\n  async emulateViewport(viewport: Viewport): Promise<boolean> {\n    const mobile = viewport.isMobile || false;\n    const width = viewport.width;\n    const height = viewport.height;\n    const deviceScaleFactor = viewport.deviceScaleFactor ?? 1;\n    const screenOrientation: Protocol.Emulation.ScreenOrientation =\n      viewport.isLandscape\n        ? {angle: 90, type: 'landscapePrimary'}\n        : {angle: 0, type: 'portraitPrimary'};\n    const hasTouch = viewport.hasTouch || false;\n\n    await Promise.all([\n      this.#client.send('Emulation.setDeviceMetricsOverride', {\n        mobile,\n        width,\n        height,\n        deviceScaleFactor,\n        screenOrientation,\n      }),\n      this.#client.send('Emulation.setTouchEmulationEnabled', {\n        enabled: hasTouch,\n      }),\n    ]);\n\n    const reloadNeeded =\n      this.#emulatingMobile !== mobile || this.#hasTouch !== hasTouch;\n    this.#emulatingMobile = mobile;\n    this.#hasTouch = hasTouch;\n    return reloadNeeded;\n  }\n\n  async emulateIdleState(overrides?: {\n    isUserActive: boolean;\n    isScreenUnlocked: boolean;\n  }): Promise<void> {\n    if (overrides) {\n      await this.#client.send('Emulation.setIdleOverride', {\n        isUserActive: overrides.isUserActive,\n        isScreenUnlocked: overrides.isScreenUnlocked,\n      });\n    } else {\n      await this.#client.send('Emulation.clearIdleOverride');\n    }\n  }\n\n  async emulateTimezone(timezoneId?: string): Promise<void> {\n    try {\n      await this.#client.send('Emulation.setTimezoneOverride', {\n        timezoneId: timezoneId || '',\n      });\n    } catch (error) {\n      if (isErrorLike(error) && error.message.includes('Invalid timezone')) {\n        throw new Error(`Invalid timezone ID: ${timezoneId}`);\n      }\n      throw error;\n    }\n  }\n\n  async emulateVisionDeficiency(\n    type?: Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type']\n  ): Promise<void> {\n    const visionDeficiencies = new Set<\n      Protocol.Emulation.SetEmulatedVisionDeficiencyRequest['type']\n    >([\n      'none',\n      'achromatopsia',\n      'blurredVision',\n      'deuteranopia',\n      'protanopia',\n      'tritanopia',\n    ]);\n    try {\n      assert(\n        !type || visionDeficiencies.has(type),\n        `Unsupported vision deficiency: ${type}`\n      );\n      await this.#client.send('Emulation.setEmulatedVisionDeficiency', {\n        type: type || 'none',\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async emulateCPUThrottling(factor: number | null): Promise<void> {\n    assert(\n      factor === null || factor >= 1,\n      'Throttling rate should be greater or equal to 1'\n    );\n    await this.#client.send('Emulation.setCPUThrottlingRate', {\n      rate: factor ?? 1,\n    });\n  }\n\n  async emulateMediaFeatures(features?: MediaFeature[]): Promise<void> {\n    if (!features) {\n      await this.#client.send('Emulation.setEmulatedMedia', {});\n    }\n    if (Array.isArray(features)) {\n      for (const mediaFeature of features) {\n        const name = mediaFeature.name;\n        assert(\n          /^(?:prefers-(?:color-scheme|reduced-motion)|color-gamut)$/.test(\n            name\n          ),\n          'Unsupported media feature: ' + name\n        );\n      }\n      await this.#client.send('Emulation.setEmulatedMedia', {\n        features: features,\n      });\n    }\n  }\n\n  async emulateMediaType(type?: string): Promise<void> {\n    assert(\n      type === 'screen' ||\n        type === 'print' ||\n        (type ?? undefined) === undefined,\n      'Unsupported media type: ' + type\n    );\n    await this.#client.send('Emulation.setEmulatedMedia', {\n      media: type || '',\n    });\n  }\n\n  async setGeolocation(options: GeolocationOptions): Promise<void> {\n    const {longitude, latitude, accuracy = 0} = options;\n    if (longitude < -180 || longitude > 180) {\n      throw new Error(\n        `Invalid longitude \"${longitude}\": precondition -180 <= LONGITUDE <= 180 failed.`\n      );\n    }\n    if (latitude < -90 || latitude > 90) {\n      throw new Error(\n        `Invalid latitude \"${latitude}\": precondition -90 <= LATITUDE <= 90 failed.`\n      );\n    }\n    if (accuracy < 0) {\n      throw new Error(\n        `Invalid accuracy \"${accuracy}\": precondition 0 <= ACCURACY failed.`\n      );\n    }\n    await this.#client.send('Emulation.setGeolocationOverride', {\n      longitude,\n      latitude,\n      accuracy,\n    });\n  }\n\n  /**\n   * Resets default white background\n   */\n  async resetDefaultBackgroundColor(): Promise<void> {\n    await this.#client.send('Emulation.setDefaultBackgroundColorOverride');\n  }\n\n  /**\n   * Hides default white background\n   */\n  async setTransparentBackgroundColor(): Promise<void> {\n    await this.#client.send('Emulation.setDefaultBackgroundColorOverride', {\n      color: {r: 0, g: 0, b: 0, a: 0},\n    });\n  }\n\n  async setJavaScriptEnabled(enabled: boolean): Promise<void> {\n    if (this.#javascriptEnabled === enabled) {\n      return;\n    }\n    this.#javascriptEnabled = enabled;\n    await this.#client.send('Emulation.setScriptExecutionDisabled', {\n      value: !enabled,\n    });\n  }\n}\n", "/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Protocol from 'devtools-protocol';\n\nimport {WaitTimeoutOptions} from '../api/Page.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\n\nimport {CDPSession} from './Connection.js';\nimport {TimeoutSettings} from './TimeoutSettings.js';\n\n/**\n * Device in a request prompt.\n *\n * @public\n */\nexport class DeviceRequestPromptDevice {\n  /**\n   * Device id during a prompt.\n   */\n  id: string;\n\n  /**\n   * Device name as it appears in a prompt.\n   */\n  name: string;\n\n  /**\n   * @internal\n   */\n  constructor(id: string, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * Device request prompts let you respond to the page requesting for a device\n * through an API like WebBluetooth.\n *\n * @remarks\n * `DeviceRequestPrompt` instances are returned via the\n * {@link Page.waitForDevicePrompt} method.\n *\n * @example\n *\n * ```ts\n * const [deviceRequest] = Promise.all([\n *   page.waitForDevicePrompt(),\n *   page.click('#connect-bluetooth'),\n * ]);\n * await devicePrompt.select(\n *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n * );\n * ```\n *\n * @public\n */\nexport class DeviceRequestPrompt {\n  #client: CDPSession | null;\n  #timeoutSettings: TimeoutSettings;\n  #id: string;\n  #handled = false;\n  #updateDevicesHandle = this.#updateDevices.bind(this);\n  #waitForDevicePromises = new Set<{\n    filter: (device: DeviceRequestPromptDevice) => boolean;\n    promise: Deferred<DeviceRequestPromptDevice>;\n  }>();\n\n  /**\n   * Current list of selectable devices.\n   */\n  devices: DeviceRequestPromptDevice[] = [];\n\n  /**\n   * @internal\n   */\n  constructor(\n    client: CDPSession,\n    timeoutSettings: TimeoutSettings,\n    firstEvent: Protocol.DeviceAccess.DeviceRequestPromptedEvent\n  ) {\n    this.#client = client;\n    this.#timeoutSettings = timeoutSettings;\n    this.#id = firstEvent.id;\n\n    this.#client.on(\n      'DeviceAccess.deviceRequestPrompted',\n      this.#updateDevicesHandle\n    );\n    this.#client.on('Target.detachedFromTarget', () => {\n      this.#client = null;\n    });\n\n    this.#updateDevices(firstEvent);\n  }\n\n  #updateDevices(event: Protocol.DeviceAccess.DeviceRequestPromptedEvent) {\n    if (event.id !== this.#id) {\n      return;\n    }\n\n    for (const rawDevice of event.devices) {\n      if (\n        this.devices.some(device => {\n          return device.id === rawDevice.id;\n        })\n      ) {\n        continue;\n      }\n\n      const newDevice = new DeviceRequestPromptDevice(\n        rawDevice.id,\n        rawDevice.name\n      );\n      this.devices.push(newDevice);\n\n      for (const waitForDevicePromise of this.#waitForDevicePromises) {\n        if (waitForDevicePromise.filter(newDevice)) {\n          waitForDevicePromise.promise.resolve(newDevice);\n        }\n      }\n    }\n  }\n\n  /**\n   * Resolve to the first device in the prompt matching a filter.\n   */\n  async waitForDevice(\n    filter: (device: DeviceRequestPromptDevice) => boolean,\n    options: WaitTimeoutOptions = {}\n  ): Promise<DeviceRequestPromptDevice> {\n    for (const device of this.devices) {\n      if (filter(device)) {\n        return device;\n      }\n    }\n\n    const {timeout = this.#timeoutSettings.timeout()} = options;\n    const deferred = Deferred.create<DeviceRequestPromptDevice>({\n      message: `Waiting for \\`DeviceRequestPromptDevice\\` failed: ${timeout}ms exceeded`,\n      timeout,\n    });\n    const handle = {filter, promise: deferred};\n    this.#waitForDevicePromises.add(handle);\n    try {\n      return await deferred.valueOrThrow();\n    } finally {\n      this.#waitForDevicePromises.delete(handle);\n    }\n  }\n\n  /**\n   * Select a device in the prompt's list.\n   */\n  async select(device: DeviceRequestPromptDevice): Promise<void> {\n    assert(\n      this.#client !== null,\n      'Cannot select device through detached session!'\n    );\n    assert(this.devices.includes(device), 'Cannot select unknown device!');\n    assert(\n      !this.#handled,\n      'Cannot select DeviceRequestPrompt which is already handled!'\n    );\n    this.#client.off(\n      'DeviceAccess.deviceRequestPrompted',\n      this.#updateDevicesHandle\n    );\n    this.#handled = true;\n    return this.#client.send('DeviceAccess.selectPrompt', {\n      id: this.#id,\n      deviceId: device.id,\n    });\n  }\n\n  /**\n   * Cancel the prompt.\n   */\n  async cancel(): Promise<void> {\n    assert(\n      this.#client !== null,\n      'Cannot cancel prompt through detached session!'\n    );\n    assert(\n      !this.#handled,\n      'Cannot cancel DeviceRequestPrompt which is already handled!'\n    );\n    this.#client.off(\n      'DeviceAccess.deviceRequestPrompted',\n      this.#updateDevicesHandle\n    );\n    this.#handled = true;\n    return this.#client.send('DeviceAccess.cancelPrompt', {id: this.#id});\n  }\n}\n\n/**\n * @internal\n */\nexport class DeviceRequestPromptManager {\n  #client: CDPSession | null;\n  #timeoutSettings: TimeoutSettings;\n  #deviceRequestPrompDeferreds = new Set<Deferred<DeviceRequestPrompt>>();\n\n  /**\n   * @internal\n   */\n  constructor(client: CDPSession, timeoutSettings: TimeoutSettings) {\n    this.#client = client;\n    this.#timeoutSettings = timeoutSettings;\n\n    this.#client.on('DeviceAccess.deviceRequestPrompted', event => {\n      this.#onDeviceRequestPrompted(event);\n    });\n    this.#client.on('Target.detachedFromTarget', () => {\n      this.#client = null;\n    });\n  }\n\n  /**\n   * Wait for device prompt created by an action like calling WebBluetooth's\n   * requestDevice.\n   */\n  async waitForDevicePrompt(\n    options: WaitTimeoutOptions = {}\n  ): Promise<DeviceRequestPrompt> {\n    assert(\n      this.#client !== null,\n      'Cannot wait for device prompt through detached session!'\n    );\n    const needsEnable = this.#deviceRequestPrompDeferreds.size === 0;\n    let enablePromise: Promise<void> | undefined;\n    if (needsEnable) {\n      enablePromise = this.#client.send('DeviceAccess.enable');\n    }\n\n    const {timeout = this.#timeoutSettings.timeout()} = options;\n    const deferred = Deferred.create<DeviceRequestPrompt>({\n      message: `Waiting for \\`DeviceRequestPrompt\\` failed: ${timeout}ms exceeded`,\n      timeout,\n    });\n    this.#deviceRequestPrompDeferreds.add(deferred);\n\n    try {\n      const [result] = await Promise.all([\n        deferred.valueOrThrow(),\n        enablePromise,\n      ]);\n      return result;\n    } finally {\n      this.#deviceRequestPrompDeferreds.delete(deferred);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  #onDeviceRequestPrompted(\n    event: Protocol.DeviceAccess.DeviceRequestPromptedEvent\n  ) {\n    if (!this.#deviceRequestPrompDeferreds.size) {\n      return;\n    }\n\n    assert(this.#client !== null);\n    const devicePrompt = new DeviceRequestPrompt(\n      this.#client,\n      this.#timeoutSettings,\n      event\n    );\n    for (const promise of this.#deviceRequestPrompDeferreds) {\n      promise.resolve(devicePrompt);\n    }\n    this.#deviceRequestPrompDeferreds.clear();\n  }\n}\n", "import {JSHandle} from '../api/JSHandle.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {ExecutionContext} from './ExecutionContext.js';\nimport {debugError} from './util.js';\n\n/**\n * @internal\n */\nexport class Binding {\n  #name: string;\n  #fn: (...args: unknown[]) => unknown;\n  constructor(name: string, fn: (...args: unknown[]) => unknown) {\n    this.#name = name;\n    this.#fn = fn;\n  }\n\n  get name(): string {\n    return this.#name;\n  }\n\n  /**\n   * @param context - Context to run the binding in; the context should have\n   * the binding added to it beforehand.\n   * @param id - ID of the call. This should come from the CDP\n   * `onBindingCalled` response.\n   * @param args - Plain arguments from CDP.\n   */\n  async run(\n    context: ExecutionContext,\n    id: number,\n    args: unknown[],\n    isTrivial: boolean\n  ): Promise<void> {\n    const garbage = [];\n    try {\n      if (!isTrivial) {\n        // Getting non-trivial arguments.\n        const handles = await context.evaluateHandle(\n          (name, seq) => {\n            // @ts-expect-error Code is evaluated in a different context.\n            return globalThis[name].args.get(seq);\n          },\n          this.#name,\n          id\n        );\n        try {\n          const properties = await handles.getProperties();\n          for (const [index, handle] of properties) {\n            // This is not straight-forward since some arguments can stringify, but\n            // aren't plain objects so add subtypes when the use-case arises.\n            if (index in args) {\n              switch (handle.remoteObject().subtype) {\n                case 'node':\n                  args[+index] = handle;\n                  break;\n                default:\n                  garbage.push(handle.dispose());\n              }\n            } else {\n              garbage.push(handle.dispose());\n            }\n          }\n        } finally {\n          await handles.dispose();\n        }\n      }\n\n      await context.evaluate(\n        (name, seq, result) => {\n          // @ts-expect-error Code is evaluated in a different context.\n          const callbacks = globalThis[name].callbacks;\n          callbacks.get(seq).resolve(result);\n          callbacks.delete(seq);\n        },\n        this.#name,\n        id,\n        await this.#fn(...args)\n      );\n\n      for (const arg of args) {\n        if (arg instanceof JSHandle) {\n          garbage.push(arg.dispose());\n        }\n      }\n    } catch (error) {\n      if (isErrorLike(error)) {\n        await context\n          .evaluate(\n            (name, seq, message, stack) => {\n              const error = new Error(message);\n              error.stack = stack;\n              // @ts-expect-error Code is evaluated in a different context.\n              const callbacks = globalThis[name].callbacks;\n              callbacks.get(seq).reject(error);\n              callbacks.delete(seq);\n            },\n            this.#name,\n            id,\n            error.message,\n            error.stack\n          )\n          .catch(debugError);\n      } else {\n        await context\n          .evaluate(\n            (name, seq, error) => {\n              // @ts-expect-error Code is evaluated in a different context.\n              const callbacks = globalThis[name].callbacks;\n              callbacks.get(seq).reject(error);\n              callbacks.delete(seq);\n            },\n            this.#name,\n            id,\n            error\n          )\n          .catch(debugError);\n      }\n    } finally {\n      await Promise.all(garbage);\n    }\n  }\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport type {ElementHandle} from '../api/ElementHandle.js';\nimport {JSHandle} from '../api/JSHandle.js';\nimport type PuppeteerUtil from '../injected/injected.js';\nimport {AsyncIterableUtil} from '../util/AsyncIterableUtil.js';\nimport {stringifyFunction} from '../util/Function.js';\n\nimport {ARIAQueryHandler} from './AriaQueryHandler.js';\nimport {Binding} from './Binding.js';\nimport {CDPSession} from './Connection.js';\nimport {CDPElementHandle} from './ElementHandle.js';\nimport {IsolatedWorld} from './IsolatedWorld.js';\nimport {CDPJSHandle} from './JSHandle.js';\nimport {LazyArg} from './LazyArg.js';\nimport {scriptInjector} from './ScriptInjector.js';\nimport {EvaluateFunc, HandleFor} from './types.js';\nimport {\n  PuppeteerURL,\n  createEvaluationError,\n  createJSHandle,\n  getSourcePuppeteerURLIfAvailable,\n  isString,\n  valueFromRemoteObject,\n} from './util.js';\n\nconst SOURCE_URL_REGEX = /^[\\040\\t]*\\/\\/[@#] sourceURL=\\s*(\\S*?)\\s*$/m;\n\nconst getSourceUrlComment = (url: string) => {\n  return `//# sourceURL=${url}`;\n};\n\n/**\n * Represents a context for JavaScript execution.\n *\n * @example\n * A {@link Page} can have several execution contexts:\n *\n * - Each {@link Frame} of a {@link Page | page} has a \"default\" execution\n *   context that is always created after frame is attached to DOM. This context\n *   is returned by the {@link Frame.executionContext} method.\n * - Each {@link https://developer.chrome.com/extensions | Chrome extensions}\n *   creates additional execution contexts to isolate their code.\n *\n * @remarks\n * By definition, each context is isolated from one another, however they are\n * all able to manipulate non-JavaScript resources (such as DOM).\n *\n * @remarks\n * Besides pages, execution contexts can be found in\n * {@link WebWorker | workers}.\n *\n * @internal\n */\nexport class ExecutionContext {\n  _client: CDPSession;\n  _world?: IsolatedWorld;\n  _contextId: number;\n  _contextName?: string;\n\n  constructor(\n    client: CDPSession,\n    contextPayload: Protocol.Runtime.ExecutionContextDescription,\n    world?: IsolatedWorld\n  ) {\n    this._client = client;\n    this._world = world;\n    this._contextId = contextPayload.id;\n    if (contextPayload.name) {\n      this._contextName = contextPayload.name;\n    }\n  }\n\n  #bindingsInstalled = false;\n  #puppeteerUtil?: Promise<JSHandle<PuppeteerUtil>>;\n  get puppeteerUtil(): Promise<JSHandle<PuppeteerUtil>> {\n    let promise = Promise.resolve() as Promise<unknown>;\n    if (!this.#bindingsInstalled) {\n      promise = Promise.all([\n        this.#installGlobalBinding(\n          new Binding(\n            '__ariaQuerySelector',\n            ARIAQueryHandler.queryOne as (...args: unknown[]) => unknown\n          )\n        ),\n        this.#installGlobalBinding(\n          new Binding('__ariaQuerySelectorAll', (async (\n            element: ElementHandle<Node>,\n            selector: string\n          ): Promise<JSHandle<Node[]>> => {\n            const results = ARIAQueryHandler.queryAll(element, selector);\n            return element.executionContext().evaluateHandle((...elements) => {\n              return elements;\n            }, ...(await AsyncIterableUtil.collect(results)));\n          }) as (...args: unknown[]) => unknown)\n        ),\n      ]);\n      this.#bindingsInstalled = true;\n    }\n    scriptInjector.inject(script => {\n      if (this.#puppeteerUtil) {\n        void this.#puppeteerUtil.then(handle => {\n          void handle.dispose();\n        });\n      }\n      this.#puppeteerUtil = promise.then(() => {\n        return this.evaluateHandle(script) as Promise<JSHandle<PuppeteerUtil>>;\n      });\n    }, !this.#puppeteerUtil);\n    return this.#puppeteerUtil as Promise<JSHandle<PuppeteerUtil>>;\n  }\n\n  async #installGlobalBinding(binding: Binding) {\n    try {\n      if (this._world) {\n        this._world._bindings.set(binding.name, binding);\n        await this._world._addBindingToContext(this, binding.name);\n      }\n    } catch {\n      // If the binding cannot be added, then either the browser doesn't support\n      // bindings (e.g. Firefox) or the context is broken. Either breakage is\n      // okay, so we ignore the error.\n    }\n  }\n\n  /**\n   * Evaluates the given function.\n   *\n   * @example\n   *\n   * ```ts\n   * const executionContext = await page.mainFrame().executionContext();\n   * const result = await executionContext.evaluate(() => Promise.resolve(8 * 7))* ;\n   * console.log(result); // prints \"56\"\n   * ```\n   *\n   * @example\n   * A string can also be passed in instead of a function:\n   *\n   * ```ts\n   * console.log(await executionContext.evaluate('1 + 2')); // prints \"3\"\n   * ```\n   *\n   * @example\n   * Handles can also be passed as `args`. They resolve to their referenced object:\n   *\n   * ```ts\n   * const oneHandle = await executionContext.evaluateHandle(() => 1);\n   * const twoHandle = await executionContext.evaluateHandle(() => 2);\n   * const result = await executionContext.evaluate(\n   *   (a, b) => a + b,\n   *   oneHandle,\n   *   twoHandle\n   * );\n   * await oneHandle.dispose();\n   * await twoHandle.dispose();\n   * console.log(result); // prints '3'.\n   * ```\n   *\n   * @param pageFunction - The function to evaluate.\n   * @param args - Additional arguments to pass into the function.\n   * @returns The result of evaluating the function. If the result is an object,\n   * a vanilla object containing the serializable properties of the result is\n   * returned.\n   */\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    return await this.#evaluate(true, pageFunction, ...args);\n  }\n\n  /**\n   * Evaluates the given function.\n   *\n   * Unlike {@link ExecutionContext.evaluate | evaluate}, this method returns a\n   * handle to the result of the function.\n   *\n   * This method may be better suited if the object cannot be serialized (e.g.\n   * `Map`) and requires further manipulation.\n   *\n   * @example\n   *\n   * ```ts\n   * const context = await page.mainFrame().executionContext();\n   * const handle: JSHandle<typeof globalThis> = await context.evaluateHandle(\n   *   () => Promise.resolve(self)\n   * );\n   * ```\n   *\n   * @example\n   * A string can also be passed in instead of a function.\n   *\n   * ```ts\n   * const handle: JSHandle<number> = await context.evaluateHandle('1 + 2');\n   * ```\n   *\n   * @example\n   * Handles can also be passed as `args`. They resolve to their referenced object:\n   *\n   * ```ts\n   * const bodyHandle: ElementHandle<HTMLBodyElement> =\n   *   await context.evaluateHandle(() => {\n   *     return document.body;\n   *   });\n   * const stringHandle: JSHandle<string> = await context.evaluateHandle(\n   *   body => body.innerHTML,\n   *   body\n   * );\n   * console.log(await stringHandle.jsonValue()); // prints body's innerHTML\n   * // Always dispose your garbage! :)\n   * await bodyHandle.dispose();\n   * await stringHandle.dispose();\n   * ```\n   *\n   * @param pageFunction - The function to evaluate.\n   * @param args - Additional arguments to pass into the function.\n   * @returns A {@link JSHandle | handle} to the result of evaluating the\n   * function. If the result is a `Node`, then this will return an\n   * {@link ElementHandle | element handle}.\n   */\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    return this.#evaluate(false, pageFunction, ...args);\n  }\n\n  async #evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    returnByValue: true,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>>;\n  async #evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    returnByValue: false,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>>;\n  async #evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    returnByValue: boolean,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>> | Awaited<ReturnType<Func>>> {\n    const sourceUrlComment = getSourceUrlComment(\n      getSourcePuppeteerURLIfAvailable(pageFunction)?.toString() ??\n        PuppeteerURL.INTERNAL_URL\n    );\n\n    if (isString(pageFunction)) {\n      const contextId = this._contextId;\n      const expression = pageFunction;\n      const expressionWithSourceUrl = SOURCE_URL_REGEX.test(expression)\n        ? expression\n        : `${expression}\\n${sourceUrlComment}\\n`;\n\n      const {exceptionDetails, result: remoteObject} = await this._client\n        .send('Runtime.evaluate', {\n          expression: expressionWithSourceUrl,\n          contextId,\n          returnByValue,\n          awaitPromise: true,\n          userGesture: true,\n        })\n        .catch(rewriteError);\n\n      if (exceptionDetails) {\n        throw createEvaluationError(exceptionDetails);\n      }\n\n      return returnByValue\n        ? valueFromRemoteObject(remoteObject)\n        : createJSHandle(this, remoteObject);\n    }\n\n    const functionDeclaration = stringifyFunction(pageFunction);\n    const functionDeclarationWithSourceUrl = SOURCE_URL_REGEX.test(\n      functionDeclaration\n    )\n      ? functionDeclaration\n      : `${functionDeclaration}\\n${sourceUrlComment}\\n`;\n    let callFunctionOnPromise;\n    try {\n      callFunctionOnPromise = this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: functionDeclarationWithSourceUrl,\n        executionContextId: this._contextId,\n        arguments: await Promise.all(args.map(convertArgument.bind(this))),\n        returnByValue,\n        awaitPromise: true,\n        userGesture: true,\n      });\n    } catch (error) {\n      if (\n        error instanceof TypeError &&\n        error.message.startsWith('Converting circular structure to JSON')\n      ) {\n        error.message += ' Recursive objects are not allowed.';\n      }\n      throw error;\n    }\n    const {exceptionDetails, result: remoteObject} =\n      await callFunctionOnPromise.catch(rewriteError);\n    if (exceptionDetails) {\n      throw createEvaluationError(exceptionDetails);\n    }\n    return returnByValue\n      ? valueFromRemoteObject(remoteObject)\n      : createJSHandle(this, remoteObject);\n\n    async function convertArgument(\n      this: ExecutionContext,\n      arg: unknown\n    ): Promise<Protocol.Runtime.CallArgument> {\n      if (arg instanceof LazyArg) {\n        arg = await arg.get(this);\n      }\n      if (typeof arg === 'bigint') {\n        // eslint-disable-line valid-typeof\n        return {unserializableValue: `${arg.toString()}n`};\n      }\n      if (Object.is(arg, -0)) {\n        return {unserializableValue: '-0'};\n      }\n      if (Object.is(arg, Infinity)) {\n        return {unserializableValue: 'Infinity'};\n      }\n      if (Object.is(arg, -Infinity)) {\n        return {unserializableValue: '-Infinity'};\n      }\n      if (Object.is(arg, NaN)) {\n        return {unserializableValue: 'NaN'};\n      }\n      const objectHandle =\n        arg && (arg instanceof CDPJSHandle || arg instanceof CDPElementHandle)\n          ? arg\n          : null;\n      if (objectHandle) {\n        if (objectHandle.executionContext() !== this) {\n          throw new Error(\n            'JSHandles can be evaluated only in the context they were created!'\n          );\n        }\n        if (objectHandle.disposed) {\n          throw new Error('JSHandle is disposed!');\n        }\n        if (objectHandle.remoteObject().unserializableValue) {\n          return {\n            unserializableValue:\n              objectHandle.remoteObject().unserializableValue,\n          };\n        }\n        if (!objectHandle.remoteObject().objectId) {\n          return {value: objectHandle.remoteObject().value};\n        }\n        return {objectId: objectHandle.remoteObject().objectId};\n      }\n      return {value: arg};\n    }\n  }\n}\n\nconst rewriteError = (error: Error): Protocol.Runtime.EvaluateResponse => {\n  if (error.message.includes('Object reference chain is too long')) {\n    return {result: {type: 'undefined'}};\n  }\n  if (error.message.includes(\"Object couldn't be returned by value\")) {\n    return {result: {type: 'undefined'}};\n  }\n\n  if (\n    error.message.endsWith('Cannot find context with specified id') ||\n    error.message.endsWith('Inspected target navigated or closed')\n  ) {\n    throw new Error(\n      'Execution context was destroyed, most likely because of a navigation.'\n    );\n  }\n  throw error;\n};\n", "/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A unique key for {@link IsolatedWorldChart} to denote the default world.\n * Execution contexts are automatically created in the default world.\n *\n * @internal\n */\nexport const MAIN_WORLD = Symbol('mainWorld');\n/**\n * A unique key for {@link IsolatedWorldChart} to denote the puppeteer world.\n * This world contains all puppeteer-internal bindings/code.\n *\n * @internal\n */\nexport const PUPPETEER_WORLD = Symbol('puppeteerWorld');\n", "/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ElementHandle} from '../api/ElementHandle.js';\nimport {Realm} from '../api/Frame.js';\nimport {JSHandle} from '../api/JSHandle.js';\nimport type {Poller} from '../injected/Poller.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\nimport {stringifyFunction} from '../util/Function.js';\n\nimport {TimeoutError} from './Errors.js';\nimport {LazyArg} from './LazyArg.js';\nimport {HandleFor} from './types.js';\n\n/**\n * @internal\n */\nexport interface WaitTaskOptions {\n  polling: 'raf' | 'mutation' | number;\n  root?: ElementHandle<Node>;\n  timeout: number;\n  signal?: AbortSignal;\n}\n\n/**\n * @internal\n */\nexport class WaitTask<T = unknown> {\n  #world: Realm;\n  #polling: 'raf' | 'mutation' | number;\n  #root?: ElementHandle<Node>;\n\n  #fn: string;\n  #args: unknown[];\n\n  #timeout?: NodeJS.Timeout;\n\n  #result = Deferred.create<HandleFor<T>>();\n\n  #poller?: JSHandle<Poller<T>>;\n  #signal?: AbortSignal;\n\n  constructor(\n    world: Realm,\n    options: WaitTaskOptions,\n    fn: ((...args: unknown[]) => Promise<T>) | string,\n    ...args: unknown[]\n  ) {\n    this.#world = world;\n    this.#polling = options.polling;\n    this.#root = options.root;\n    this.#signal = options.signal;\n    this.#signal?.addEventListener(\n      'abort',\n      () => {\n        void this.terminate(this.#signal?.reason);\n      },\n      {\n        once: true,\n      }\n    );\n\n    switch (typeof fn) {\n      case 'string':\n        this.#fn = `() => {return (${fn});}`;\n        break;\n      default:\n        this.#fn = stringifyFunction(fn);\n        break;\n    }\n    this.#args = args;\n\n    this.#world.taskManager.add(this);\n\n    if (options.timeout) {\n      this.#timeout = setTimeout(() => {\n        void this.terminate(\n          new TimeoutError(`Waiting failed: ${options.timeout}ms exceeded`)\n        );\n      }, options.timeout);\n    }\n\n    void this.rerun();\n  }\n\n  get result(): Promise<HandleFor<T>> {\n    return this.#result.valueOrThrow();\n  }\n\n  async rerun(): Promise<void> {\n    try {\n      switch (this.#polling) {\n        case 'raf':\n          this.#poller = await this.#world.evaluateHandle(\n            ({RAFPoller, createFunction}, fn, ...args) => {\n              const fun = createFunction(fn);\n              return new RAFPoller(() => {\n                return fun(...args) as Promise<T>;\n              });\n            },\n            LazyArg.create(context => {\n              return context.puppeteerUtil;\n            }),\n            this.#fn,\n            ...this.#args\n          );\n          break;\n        case 'mutation':\n          this.#poller = await this.#world.evaluateHandle(\n            ({MutationPoller, createFunction}, root, fn, ...args) => {\n              const fun = createFunction(fn);\n              return new MutationPoller(() => {\n                return fun(...args) as Promise<T>;\n              }, root || document);\n            },\n            LazyArg.create(context => {\n              return context.puppeteerUtil;\n            }),\n            this.#root,\n            this.#fn,\n            ...this.#args\n          );\n          break;\n        default:\n          this.#poller = await this.#world.evaluateHandle(\n            ({IntervalPoller, createFunction}, ms, fn, ...args) => {\n              const fun = createFunction(fn);\n              return new IntervalPoller(() => {\n                return fun(...args) as Promise<T>;\n              }, ms);\n            },\n            LazyArg.create(context => {\n              return context.puppeteerUtil;\n            }),\n            this.#polling,\n            this.#fn,\n            ...this.#args\n          );\n          break;\n      }\n\n      await this.#poller.evaluate(poller => {\n        void poller.start();\n      });\n\n      const result = await this.#poller.evaluateHandle(poller => {\n        return poller.result();\n      });\n      this.#result.resolve(result);\n\n      await this.terminate();\n    } catch (error) {\n      const badError = this.getBadError(error);\n      if (badError) {\n        await this.terminate(badError);\n      }\n    }\n  }\n\n  async terminate(error?: Error): Promise<void> {\n    this.#world.taskManager.delete(this);\n\n    if (this.#timeout) {\n      clearTimeout(this.#timeout);\n    }\n\n    if (error && !this.#result.finished()) {\n      this.#result.reject(error);\n    }\n\n    if (this.#poller) {\n      try {\n        await this.#poller.evaluateHandle(async poller => {\n          await poller.stop();\n        });\n        if (this.#poller) {\n          await this.#poller.dispose();\n          this.#poller = undefined;\n        }\n      } catch {\n        // Ignore errors since they most likely come from low-level cleanup.\n      }\n    }\n  }\n\n  /**\n   * Not all errors lead to termination. They usually imply we need to rerun the task.\n   */\n  getBadError(error: unknown): Error | undefined {\n    if (isErrorLike(error)) {\n      // When frame is detached the task should have been terminated by the IsolatedWorld.\n      // This can fail if we were adding this task while the frame was detached,\n      // so we terminate here instead.\n      if (\n        error.message.includes(\n          'Execution context is not available in detached frame'\n        )\n      ) {\n        return new Error('Waiting failed: Frame detached');\n      }\n\n      // When the page is navigated, the promise is rejected.\n      // We will try again in the new execution context.\n      if (error.message.includes('Execution context was destroyed')) {\n        return;\n      }\n\n      // We could have tried to evaluate in a context which was already\n      // destroyed.\n      if (error.message.includes('Cannot find context with specified id')) {\n        return;\n      }\n\n      return error;\n    }\n\n    // @ts-expect-error TODO: uncomment once cause is supported in Node types.\n    return new Error('WaitTask failed with an error', {\n      cause: error,\n    });\n  }\n}\n\n/**\n * @internal\n */\nexport class TaskManager {\n  #tasks: Set<WaitTask> = new Set<WaitTask>();\n\n  add(task: WaitTask<any>): void {\n    this.#tasks.add(task);\n  }\n\n  delete(task: WaitTask<any>): void {\n    this.#tasks.delete(task);\n  }\n\n  terminateAll(error?: Error): void {\n    for (const task of this.#tasks) {\n      void task.terminate(error);\n    }\n    this.#tasks.clear();\n  }\n\n  async rerunAll(): Promise<void> {\n    await Promise.all(\n      [...this.#tasks].map(task => {\n        return task.rerun();\n      })\n    );\n  }\n}\n", "/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport type {ClickOptions, ElementHandle} from '../api/ElementHandle.js';\nimport {Realm} from '../api/Frame.js';\nimport {KeyboardTypeOptions} from '../api/Input.js';\nimport {JSHandle} from '../api/JSHandle.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\n\nimport {Binding} from './Binding.js';\nimport {CDPSession} from './Connection.js';\nimport {ExecutionContext} from './ExecutionContext.js';\nimport {Frame} from './Frame.js';\nimport {FrameManager} from './FrameManager.js';\nimport {MAIN_WORLD, PUPPETEER_WORLD} from './IsolatedWorlds.js';\nimport {LifecycleWatcher, PuppeteerLifeCycleEvent} from './LifecycleWatcher.js';\nimport {TimeoutSettings} from './TimeoutSettings.js';\nimport {\n  BindingPayload,\n  EvaluateFunc,\n  EvaluateFuncWith,\n  HandleFor,\n  InnerLazyParams,\n  NodeFor,\n} from './types.js';\nimport {\n  addPageBinding,\n  createJSHandle,\n  debugError,\n  getPageContent,\n  setPageContent,\n  withSourcePuppeteerURLIfNone,\n} from './util.js';\nimport {TaskManager, WaitTask} from './WaitTask.js';\n\n/**\n * @public\n */\nexport interface WaitForSelectorOptions {\n  /**\n   * Wait for the selected element to be present in DOM and to be visible, i.e.\n   * to not have `display: none` or `visibility: hidden` CSS properties.\n   *\n   * @defaultValue `false`\n   */\n  visible?: boolean;\n  /**\n   * Wait for the selected element to not be found in the DOM or to be hidden,\n   * i.e. have `display: none` or `visibility: hidden` CSS properties.\n   *\n   * @defaultValue `false`\n   */\n  hidden?: boolean;\n  /**\n   * Maximum time to wait in milliseconds. Pass `0` to disable timeout.\n   *\n   * The default value can be changed by using {@link Page.setDefaultTimeout}\n   *\n   * @defaultValue `30_000` (30 seconds)\n   */\n  timeout?: number;\n  /**\n   * A signal object that allows you to cancel a waitForSelector call.\n   */\n  signal?: AbortSignal;\n}\n\n/**\n * @internal\n */\nexport interface PageBinding {\n  name: string;\n  pptrFunction: Function;\n}\n\n/**\n * @internal\n */\nexport interface IsolatedWorldChart {\n  [key: string]: IsolatedWorld;\n  [MAIN_WORLD]: IsolatedWorld;\n  [PUPPETEER_WORLD]: IsolatedWorld;\n}\n\n/**\n * @internal\n */\nexport class IsolatedWorld implements Realm {\n  #frame: Frame;\n  #document?: ElementHandle<Document>;\n  #context = Deferred.create<ExecutionContext>();\n  #detached = false;\n\n  // Set of bindings that have been registered in the current context.\n  #contextBindings = new Set<string>();\n\n  // Contains mapping from functions that should be bound to Puppeteer functions.\n  #bindings = new Map<string, Binding>();\n  #taskManager = new TaskManager();\n\n  get taskManager(): TaskManager {\n    return this.#taskManager;\n  }\n\n  get _bindings(): Map<string, Binding> {\n    return this.#bindings;\n  }\n\n  constructor(frame: Frame) {\n    // Keep own reference to client because it might differ from the FrameManager's\n    // client for OOP iframes.\n    this.#frame = frame;\n    this.#client.on('Runtime.bindingCalled', this.#onBindingCalled);\n  }\n\n  get #client(): CDPSession {\n    return this.#frame._client();\n  }\n\n  get #frameManager(): FrameManager {\n    return this.#frame._frameManager;\n  }\n\n  get #timeoutSettings(): TimeoutSettings {\n    return this.#frameManager.timeoutSettings;\n  }\n\n  frame(): Frame {\n    return this.#frame;\n  }\n\n  clearContext(): void {\n    this.#document = undefined;\n    this.#context = Deferred.create();\n  }\n\n  setContext(context: ExecutionContext): void {\n    this.#contextBindings.clear();\n    this.#context.resolve(context);\n    void this.#taskManager.rerunAll();\n  }\n\n  hasContext(): boolean {\n    return this.#context.resolved();\n  }\n\n  _detach(): void {\n    this.#detached = true;\n    this.#client.off('Runtime.bindingCalled', this.#onBindingCalled);\n    this.#taskManager.terminateAll(\n      new Error('waitForFunction failed: frame got detached.')\n    );\n  }\n\n  executionContext(): Promise<ExecutionContext> {\n    if (this.#detached) {\n      throw new Error(\n        `Execution context is not available in detached frame \"${this.#frame.url()}\" (are you trying to evaluate?)`\n      );\n    }\n    if (this.#context === null) {\n      throw new Error(`Execution content promise is missing`);\n    }\n    return this.#context.valueOrThrow();\n  }\n\n  async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluateHandle.name,\n      pageFunction\n    );\n    const context = await this.executionContext();\n    return context.evaluateHandle(pageFunction, ...args);\n  }\n\n  async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluate.name,\n      pageFunction\n    );\n    const context = await this.executionContext();\n    return context.evaluate(pageFunction, ...args);\n  }\n\n  async $<Selector extends string>(\n    selector: Selector\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    const document = await this.document();\n    return document.$(selector);\n  }\n\n  async $$<Selector extends string>(\n    selector: Selector\n  ): Promise<Array<ElementHandle<NodeFor<Selector>>>> {\n    const document = await this.document();\n    return document.$$(selector);\n  }\n\n  async document(): Promise<ElementHandle<Document>> {\n    if (this.#document) {\n      return this.#document;\n    }\n    const context = await this.executionContext();\n    this.#document = await context.evaluateHandle(() => {\n      return document;\n    });\n    return this.#document;\n  }\n\n  async $x(expression: string): Promise<Array<ElementHandle<Node>>> {\n    const document = await this.document();\n    return document.$x(expression);\n  }\n\n  async $eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<NodeFor<Selector>, Params> = EvaluateFuncWith<\n      NodeFor<Selector>,\n      Params\n    >\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$eval.name, pageFunction);\n    const document = await this.document();\n    return document.$eval(selector, pageFunction, ...args);\n  }\n\n  async $$eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<\n      Array<NodeFor<Selector>>,\n      Params\n    > = EvaluateFuncWith<Array<NodeFor<Selector>>, Params>\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$$eval.name, pageFunction);\n    const document = await this.document();\n    return document.$$eval(selector, pageFunction, ...args);\n  }\n\n  async content(): Promise<string> {\n    return await this.evaluate(getPageContent);\n  }\n\n  async setContent(\n    html: string,\n    options: {\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    } = {}\n  ): Promise<void> {\n    const {\n      waitUntil = ['load'],\n      timeout = this.#timeoutSettings.navigationTimeout(),\n    } = options;\n\n    await setPageContent(this, html);\n\n    const watcher = new LifecycleWatcher(\n      this.#frameManager,\n      this.#frame,\n      waitUntil,\n      timeout\n    );\n    const error = await Deferred.race<void | Error | undefined>([\n      watcher.timeoutOrTerminationPromise(),\n      watcher.lifecyclePromise(),\n    ]);\n    watcher.dispose();\n    if (error) {\n      throw error;\n    }\n  }\n\n  async click(\n    selector: string,\n    options?: Readonly<ClickOptions>\n  ): Promise<void> {\n    const handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    await handle.click(options);\n    await handle.dispose();\n  }\n\n  async focus(selector: string): Promise<void> {\n    const handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    await handle.focus();\n    await handle.dispose();\n  }\n\n  async hover(selector: string): Promise<void> {\n    const handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    await handle.hover();\n    await handle.dispose();\n  }\n\n  async select(selector: string, ...values: string[]): Promise<string[]> {\n    const handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    const result = await handle.select(...values);\n    await handle.dispose();\n    return result;\n  }\n\n  async tap(selector: string): Promise<void> {\n    const handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    await handle.tap();\n    await handle.dispose();\n  }\n\n  async type(\n    selector: string,\n    text: string,\n    options?: Readonly<KeyboardTypeOptions>\n  ): Promise<void> {\n    const handle = await this.$(selector);\n    assert(handle, `No element found for selector: ${selector}`);\n    await handle.type(text, options);\n    await handle.dispose();\n  }\n\n  // If multiple waitFor are set up asynchronously, we need to wait for the\n  // first one to set up the binding in the page before running the others.\n  #mutex = new Mutex();\n  async _addBindingToContext(\n    context: ExecutionContext,\n    name: string\n  ): Promise<void> {\n    if (this.#contextBindings.has(name)) {\n      return;\n    }\n\n    await this.#mutex.acquire();\n    try {\n      await context._client.send(\n        'Runtime.addBinding',\n        context._contextName\n          ? {\n              name,\n              executionContextName: context._contextName,\n            }\n          : {\n              name,\n              executionContextId: context._contextId,\n            }\n      );\n\n      await context.evaluate(addPageBinding, 'internal', name);\n\n      this.#contextBindings.add(name);\n    } catch (error) {\n      // We could have tried to evaluate in a context which was already\n      // destroyed. This happens, for example, if the page is navigated while\n      // we are trying to add the binding\n      if (error instanceof Error) {\n        // Destroyed context.\n        if (error.message.includes('Execution context was destroyed')) {\n          return;\n        }\n        // Missing context.\n        if (error.message.includes('Cannot find context with specified id')) {\n          return;\n        }\n      }\n\n      debugError(error);\n    } finally {\n      this.#mutex.release();\n    }\n  }\n\n  #onBindingCalled = async (\n    event: Protocol.Runtime.BindingCalledEvent\n  ): Promise<void> => {\n    let payload: BindingPayload;\n    try {\n      payload = JSON.parse(event.payload);\n    } catch {\n      // The binding was either called by something in the page or it was\n      // called before our wrapper was initialized.\n      return;\n    }\n    const {type, name, seq, args, isTrivial} = payload;\n    if (type !== 'internal') {\n      return;\n    }\n    if (!this.#contextBindings.has(name)) {\n      return;\n    }\n\n    try {\n      const context = await this.#context.valueOrThrow();\n      if (event.executionContextId !== context._contextId) {\n        return;\n      }\n\n      const binding = this._bindings.get(name);\n      await binding?.run(context, seq, args, isTrivial);\n    } catch (err) {\n      debugError(err);\n    }\n  };\n\n  waitForFunction<\n    Params extends unknown[],\n    Func extends EvaluateFunc<InnerLazyParams<Params>> = EvaluateFunc<\n      InnerLazyParams<Params>\n    >\n  >(\n    pageFunction: Func | string,\n    options: {\n      polling?: 'raf' | 'mutation' | number;\n      timeout?: number;\n      root?: ElementHandle<Node>;\n      signal?: AbortSignal;\n    } = {},\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    const {\n      polling = 'raf',\n      timeout = this.#timeoutSettings.timeout(),\n      root,\n      signal,\n    } = options;\n    if (typeof polling === 'number' && polling < 0) {\n      throw new Error('Cannot poll with non-positive interval');\n    }\n    const waitTask = new WaitTask(\n      this,\n      {\n        polling,\n        root,\n        timeout,\n        signal,\n      },\n      pageFunction as unknown as\n        | ((...args: unknown[]) => Promise<Awaited<ReturnType<Func>>>)\n        | string,\n      ...args\n    );\n    return waitTask.result;\n  }\n\n  async title(): Promise<string> {\n    return this.evaluate(() => {\n      return document.title;\n    });\n  }\n\n  async adoptBackendNode(\n    backendNodeId?: Protocol.DOM.BackendNodeId\n  ): Promise<JSHandle<Node>> {\n    const executionContext = await this.executionContext();\n    const {object} = await this.#client.send('DOM.resolveNode', {\n      backendNodeId: backendNodeId,\n      executionContextId: executionContext._contextId,\n    });\n    return createJSHandle(executionContext, object) as JSHandle<Node>;\n  }\n\n  async adoptHandle<T extends JSHandle<Node>>(handle: T): Promise<T> {\n    const context = await this.executionContext();\n    assert(\n      handle.executionContext() !== context,\n      'Cannot adopt handle that already belongs to this execution context'\n    );\n    const nodeInfo = await this.#client.send('DOM.describeNode', {\n      objectId: handle.id,\n    });\n    return (await this.adoptBackendNode(nodeInfo.node.backendNodeId)) as T;\n  }\n\n  async transferHandle<T extends JSHandle<Node>>(handle: T): Promise<T> {\n    const context = await this.executionContext();\n    if (handle.executionContext() === context) {\n      return handle;\n    }\n    const info = await this.#client.send('DOM.describeNode', {\n      objectId: handle.remoteObject().objectId,\n    });\n    const newHandle = (await this.adoptBackendNode(\n      info.node.backendNodeId\n    )) as T;\n    await handle.dispose();\n    return newHandle;\n  }\n}\n\nclass Mutex {\n  #locked = false;\n  #acquirers: Array<() => void> = [];\n\n  // This is FIFO.\n  acquire(): Promise<void> {\n    if (!this.#locked) {\n      this.#locked = true;\n      return Promise.resolve();\n    }\n    const deferred = Deferred.create<void>();\n    this.#acquirers.push(deferred.resolve.bind(deferred));\n    return deferred.valueOrThrow();\n  }\n\n  release(): void {\n    const resolve = this.#acquirers.shift();\n    if (!resolve) {\n      this.#locked = false;\n      return;\n    }\n    resolve();\n  }\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {ElementHandle} from '../api/ElementHandle.js';\nimport {\n  Frame as BaseFrame,\n  FrameAddScriptTagOptions,\n  FrameAddStyleTagOptions,\n} from '../api/Frame.js';\nimport {HTTPResponse} from '../api/HTTPResponse.js';\nimport {Page, WaitTimeoutOptions} from '../api/Page.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {CDPSession} from './Connection.js';\nimport {\n  DeviceRequestPrompt,\n  DeviceRequestPromptManager,\n} from './DeviceRequestPrompt.js';\nimport {ExecutionContext} from './ExecutionContext.js';\nimport {FrameManager} from './FrameManager.js';\nimport {IsolatedWorld, IsolatedWorldChart} from './IsolatedWorld.js';\nimport {MAIN_WORLD, PUPPETEER_WORLD} from './IsolatedWorlds.js';\nimport {LazyArg} from './LazyArg.js';\nimport {LifecycleWatcher, PuppeteerLifeCycleEvent} from './LifecycleWatcher.js';\nimport {EvaluateFunc, EvaluateFuncWith, HandleFor, NodeFor} from './types.js';\nimport {importFSPromises, withSourcePuppeteerURLIfNone} from './util.js';\n\n/**\n * @internal\n */\nexport class Frame extends BaseFrame {\n  #url = '';\n  #detached = false;\n  #client!: CDPSession;\n\n  override worlds!: IsolatedWorldChart;\n  _frameManager: FrameManager;\n  override _id: string;\n  _loaderId = '';\n  override _name?: string;\n  override _hasStartedLoading = false;\n  _lifecycleEvents = new Set<string>();\n  override _parentId?: string;\n\n  constructor(\n    frameManager: FrameManager,\n    frameId: string,\n    parentFrameId: string | undefined,\n    client: CDPSession\n  ) {\n    super();\n    this._frameManager = frameManager;\n    this.#url = '';\n    this._id = frameId;\n    this._parentId = parentFrameId;\n    this.#detached = false;\n\n    this._loaderId = '';\n\n    this.updateClient(client);\n  }\n\n  updateClient(client: CDPSession): void {\n    this.#client = client;\n    this.worlds = {\n      [MAIN_WORLD]: new IsolatedWorld(this),\n      [PUPPETEER_WORLD]: new IsolatedWorld(this),\n    };\n  }\n\n  override page(): Page {\n    return this._frameManager.page();\n  }\n\n  override isOOPFrame(): boolean {\n    return this.#client !== this._frameManager.client;\n  }\n\n  override async goto(\n    url: string,\n    options: {\n      referer?: string;\n      referrerPolicy?: string;\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    } = {}\n  ): Promise<HTTPResponse | null> {\n    const {\n      referer = this._frameManager.networkManager.extraHTTPHeaders()['referer'],\n      referrerPolicy = this._frameManager.networkManager.extraHTTPHeaders()[\n        'referer-policy'\n      ],\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout(),\n    } = options;\n\n    let ensureNewDocumentNavigation = false;\n    const watcher = new LifecycleWatcher(\n      this._frameManager,\n      this,\n      waitUntil,\n      timeout\n    );\n    let error = await Deferred.race([\n      navigate(\n        this.#client,\n        url,\n        referer,\n        referrerPolicy as Protocol.Page.ReferrerPolicy,\n        this._id\n      ),\n      watcher.timeoutOrTerminationPromise(),\n    ]);\n    if (!error) {\n      error = await Deferred.race([\n        watcher.timeoutOrTerminationPromise(),\n        ensureNewDocumentNavigation\n          ? watcher.newDocumentNavigationPromise()\n          : watcher.sameDocumentNavigationPromise(),\n      ]);\n    }\n\n    try {\n      if (error) {\n        throw error;\n      }\n      return await watcher.navigationResponse();\n    } finally {\n      watcher.dispose();\n    }\n\n    async function navigate(\n      client: CDPSession,\n      url: string,\n      referrer: string | undefined,\n      referrerPolicy: Protocol.Page.ReferrerPolicy | undefined,\n      frameId: string\n    ): Promise<Error | null> {\n      try {\n        const response = await client.send('Page.navigate', {\n          url,\n          referrer,\n          frameId,\n          referrerPolicy,\n        });\n        ensureNewDocumentNavigation = !!response.loaderId;\n        if (response.errorText === 'net::ERR_HTTP_RESPONSE_CODE_FAILURE') {\n          return null;\n        }\n        return response.errorText\n          ? new Error(`${response.errorText} at ${url}`)\n          : null;\n      } catch (error) {\n        if (isErrorLike(error)) {\n          return error;\n        }\n        throw error;\n      }\n    }\n  }\n\n  override async waitForNavigation(\n    options: {\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    } = {}\n  ): Promise<HTTPResponse | null> {\n    const {\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout(),\n    } = options;\n    const watcher = new LifecycleWatcher(\n      this._frameManager,\n      this,\n      waitUntil,\n      timeout\n    );\n    const error = await Deferred.race([\n      watcher.timeoutOrTerminationPromise(),\n      watcher.sameDocumentNavigationPromise(),\n      watcher.newDocumentNavigationPromise(),\n    ]);\n    try {\n      if (error) {\n        throw error;\n      }\n      return await watcher.navigationResponse();\n    } finally {\n      watcher.dispose();\n    }\n  }\n\n  override _client(): CDPSession {\n    return this.#client;\n  }\n\n  override executionContext(): Promise<ExecutionContext> {\n    return this.worlds[MAIN_WORLD].executionContext();\n  }\n\n  /**\n   * @internal\n   */\n  override mainRealm(): IsolatedWorld {\n    return this.worlds[MAIN_WORLD];\n  }\n\n  /**\n   * @internal\n   */\n  override isolatedRealm(): IsolatedWorld {\n    return this.worlds[PUPPETEER_WORLD];\n  }\n\n  override async evaluateHandle<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<HandleFor<Awaited<ReturnType<Func>>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluateHandle.name,\n      pageFunction\n    );\n    return this.mainRealm().evaluateHandle(pageFunction, ...args);\n  }\n\n  override async evaluate<\n    Params extends unknown[],\n    Func extends EvaluateFunc<Params> = EvaluateFunc<Params>\n  >(\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(\n      this.evaluate.name,\n      pageFunction\n    );\n    return this.mainRealm().evaluate(pageFunction, ...args);\n  }\n\n  override async $<Selector extends string>(\n    selector: Selector\n  ): Promise<ElementHandle<NodeFor<Selector>> | null> {\n    return this.mainRealm().$(selector);\n  }\n\n  override async $$<Selector extends string>(\n    selector: Selector\n  ): Promise<Array<ElementHandle<NodeFor<Selector>>>> {\n    return this.mainRealm().$$(selector);\n  }\n\n  override async $eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<NodeFor<Selector>, Params> = EvaluateFuncWith<\n      NodeFor<Selector>,\n      Params\n    >\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$eval.name, pageFunction);\n    return this.mainRealm().$eval(selector, pageFunction, ...args);\n  }\n\n  override async $$eval<\n    Selector extends string,\n    Params extends unknown[],\n    Func extends EvaluateFuncWith<\n      Array<NodeFor<Selector>>,\n      Params\n    > = EvaluateFuncWith<Array<NodeFor<Selector>>, Params>\n  >(\n    selector: Selector,\n    pageFunction: Func | string,\n    ...args: Params\n  ): Promise<Awaited<ReturnType<Func>>> {\n    pageFunction = withSourcePuppeteerURLIfNone(this.$$eval.name, pageFunction);\n    return this.mainRealm().$$eval(selector, pageFunction, ...args);\n  }\n\n  override async $x(expression: string): Promise<Array<ElementHandle<Node>>> {\n    return this.mainRealm().$x(expression);\n  }\n\n  override async content(): Promise<string> {\n    return this.isolatedRealm().content();\n  }\n\n  override async setContent(\n    html: string,\n    options: {\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    } = {}\n  ): Promise<void> {\n    return this.isolatedRealm().setContent(html, options);\n  }\n\n  override name(): string {\n    return this._name || '';\n  }\n\n  override url(): string {\n    return this.#url;\n  }\n\n  override parentFrame(): Frame | null {\n    return this._frameManager._frameTree.parentFrame(this._id) || null;\n  }\n\n  override childFrames(): Frame[] {\n    return this._frameManager._frameTree.childFrames(this._id);\n  }\n\n  override isDetached(): boolean {\n    return this.#detached;\n  }\n\n  override async addScriptTag(\n    options: FrameAddScriptTagOptions\n  ): Promise<ElementHandle<HTMLScriptElement>> {\n    let {content = '', type} = options;\n    const {path} = options;\n    if (+!!options.url + +!!path + +!!content !== 1) {\n      throw new Error(\n        'Exactly one of `url`, `path`, or `content` must be specified.'\n      );\n    }\n\n    if (path) {\n      const fs = await importFSPromises();\n      content = await fs.readFile(path, 'utf8');\n      content += `//# sourceURL=${path.replace(/\\n/g, '')}`;\n    }\n\n    type = type ?? 'text/javascript';\n\n    return this.mainRealm().transferHandle(\n      await this.isolatedRealm().evaluateHandle(\n        async ({Deferred}, {url, id, type, content}) => {\n          const deferred = Deferred.create<void>();\n          const script = document.createElement('script');\n          script.type = type;\n          script.text = content;\n          if (url) {\n            script.src = url;\n            script.addEventListener(\n              'load',\n              () => {\n                return deferred.resolve();\n              },\n              {once: true}\n            );\n            script.addEventListener(\n              'error',\n              event => {\n                deferred.reject(\n                  new Error(event.message ?? 'Could not load script')\n                );\n              },\n              {once: true}\n            );\n          } else {\n            deferred.resolve();\n          }\n          if (id) {\n            script.id = id;\n          }\n          document.head.appendChild(script);\n          await deferred.valueOrThrow();\n          return script;\n        },\n        LazyArg.create(context => {\n          return context.puppeteerUtil;\n        }),\n        {...options, type, content}\n      )\n    );\n  }\n\n  override async addStyleTag(\n    options: Omit<FrameAddStyleTagOptions, 'url'>\n  ): Promise<ElementHandle<HTMLStyleElement>>;\n  override async addStyleTag(\n    options: FrameAddStyleTagOptions\n  ): Promise<ElementHandle<HTMLLinkElement>>;\n  override async addStyleTag(\n    options: FrameAddStyleTagOptions\n  ): Promise<ElementHandle<HTMLStyleElement | HTMLLinkElement>> {\n    let {content = ''} = options;\n    const {path} = options;\n    if (+!!options.url + +!!path + +!!content !== 1) {\n      throw new Error(\n        'Exactly one of `url`, `path`, or `content` must be specified.'\n      );\n    }\n\n    if (path) {\n      const fs = await importFSPromises();\n\n      content = await fs.readFile(path, 'utf8');\n      content += '/*# sourceURL=' + path.replace(/\\n/g, '') + '*/';\n      options.content = content;\n    }\n\n    return this.mainRealm().transferHandle(\n      await this.isolatedRealm().evaluateHandle(\n        async ({Deferred}, {url, content}) => {\n          const deferred = Deferred.create<void>();\n          let element: HTMLStyleElement | HTMLLinkElement;\n          if (!url) {\n            element = document.createElement('style');\n            element.appendChild(document.createTextNode(content!));\n          } else {\n            const link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.href = url;\n            element = link;\n          }\n          element.addEventListener(\n            'load',\n            () => {\n              deferred.resolve();\n            },\n            {once: true}\n          );\n          element.addEventListener(\n            'error',\n            event => {\n              deferred.reject(\n                new Error(\n                  (event as ErrorEvent).message ?? 'Could not load style'\n                )\n              );\n            },\n            {once: true}\n          );\n          document.head.appendChild(element);\n          await deferred.valueOrThrow();\n          return element;\n        },\n        LazyArg.create(context => {\n          return context.puppeteerUtil;\n        }),\n        options\n      )\n    );\n  }\n\n  override async title(): Promise<string> {\n    return this.isolatedRealm().title();\n  }\n\n  _deviceRequestPromptManager(): DeviceRequestPromptManager {\n    if (this.isOOPFrame()) {\n      return this._frameManager._deviceRequestPromptManager(this.#client);\n    }\n    const parentFrame = this.parentFrame();\n    assert(parentFrame !== null);\n    return parentFrame._deviceRequestPromptManager();\n  }\n\n  override waitForDevicePrompt(\n    options: WaitTimeoutOptions = {}\n  ): Promise<DeviceRequestPrompt> {\n    return this._deviceRequestPromptManager().waitForDevicePrompt(options);\n  }\n\n  _navigated(framePayload: Protocol.Page.Frame): void {\n    this._name = framePayload.name;\n    this.#url = `${framePayload.url}${framePayload.urlFragment || ''}`;\n  }\n\n  _navigatedWithinDocument(url: string): void {\n    this.#url = url;\n  }\n\n  _onLifecycleEvent(loaderId: string, name: string): void {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n      this._lifecycleEvents.clear();\n    }\n    this._lifecycleEvents.add(name);\n  }\n\n  _onLoadingStopped(): void {\n    this._lifecycleEvents.add('DOMContentLoaded');\n    this._lifecycleEvents.add('load');\n  }\n\n  _onLoadingStarted(): void {\n    this._hasStartedLoading = true;\n  }\n\n  _detach(): void {\n    this.#detached = true;\n    this.worlds[MAIN_WORLD]._detach();\n    this.worlds[PUPPETEER_WORLD]._detach();\n  }\n}\n", "/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Frame as BaseFrame} from '../api/Frame.js';\nimport {Deferred} from '../util/Deferred.js';\n\n/**\n * Keeps track of the page frame tree and it's is managed by\n * {@link FrameManager}. FrameTree uses frame IDs to reference frame and it\n * means that referenced frames might not be in the tree anymore. Thus, the tree\n * structure is eventually consistent.\n * @internal\n */\nexport class FrameTree<Frame extends BaseFrame> {\n  #frames = new Map<string, Frame>();\n  // frameID -> parentFrameID\n  #parentIds = new Map<string, string>();\n  // frameID -> childFrameIDs\n  #childIds = new Map<string, Set<string>>();\n  #mainFrame?: Frame;\n  #waitRequests = new Map<string, Set<Deferred<Frame>>>();\n\n  getMainFrame(): Frame | undefined {\n    return this.#mainFrame;\n  }\n\n  getById(frameId: string): Frame | undefined {\n    return this.#frames.get(frameId);\n  }\n\n  /**\n   * Returns a promise that is resolved once the frame with\n   * the given ID is added to the tree.\n   */\n  waitForFrame(frameId: string): Promise<Frame> {\n    const frame = this.getById(frameId);\n    if (frame) {\n      return Promise.resolve(frame);\n    }\n    const deferred = Deferred.create<Frame>();\n    const callbacks =\n      this.#waitRequests.get(frameId) || new Set<Deferred<Frame>>();\n    callbacks.add(deferred);\n    return deferred.valueOrThrow();\n  }\n\n  frames(): Frame[] {\n    return Array.from(this.#frames.values());\n  }\n\n  addFrame(frame: Frame): void {\n    this.#frames.set(frame._id, frame);\n    if (frame._parentId) {\n      this.#parentIds.set(frame._id, frame._parentId);\n      if (!this.#childIds.has(frame._parentId)) {\n        this.#childIds.set(frame._parentId, new Set());\n      }\n      this.#childIds.get(frame._parentId)!.add(frame._id);\n    } else {\n      this.#mainFrame = frame;\n    }\n    this.#waitRequests.get(frame._id)?.forEach(request => {\n      return request.resolve(frame);\n    });\n  }\n\n  removeFrame(frame: Frame): void {\n    this.#frames.delete(frame._id);\n    this.#parentIds.delete(frame._id);\n    if (frame._parentId) {\n      this.#childIds.get(frame._parentId)?.delete(frame._id);\n    } else {\n      this.#mainFrame = undefined;\n    }\n  }\n\n  childFrames(frameId: string): Frame[] {\n    const childIds = this.#childIds.get(frameId);\n    if (!childIds) {\n      return [];\n    }\n    return Array.from(childIds)\n      .map(id => {\n        return this.getById(id);\n      })\n      .filter((frame): frame is Frame => {\n        return frame !== undefined;\n      });\n  }\n\n  parentFrame(frameId: string): Frame | undefined {\n    const parentId = this.#parentIds.get(frameId);\n    return parentId ? this.getById(parentId) : undefined;\n  }\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Protocol} from 'devtools-protocol';\n\nimport {Page} from '../api/Page.js';\nimport {assert} from '../util/assert.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {CDPSession, isTargetClosedError} from './Connection.js';\nimport {DeviceRequestPromptManager} from './DeviceRequestPrompt.js';\nimport {EventEmitter} from './EventEmitter.js';\nimport {ExecutionContext} from './ExecutionContext.js';\nimport {Frame} from './Frame.js';\nimport {Frame as CDPFrame} from './Frame.js';\nimport {FrameTree} from './FrameTree.js';\nimport {IsolatedWorld} from './IsolatedWorld.js';\nimport {MAIN_WORLD, PUPPETEER_WORLD} from './IsolatedWorlds.js';\nimport {NetworkManager} from './NetworkManager.js';\nimport {Target} from './Target.js';\nimport {TimeoutSettings} from './TimeoutSettings.js';\nimport {debugError, PuppeteerURL} from './util.js';\n\n/**\n * @internal\n */\nexport const UTILITY_WORLD_NAME = '__puppeteer_utility_world__';\n\n/**\n * We use symbols to prevent external parties listening to these events.\n * They are internal to Puppeteer.\n *\n * @internal\n */\nexport const FrameManagerEmittedEvents = {\n  FrameAttached: Symbol('FrameManager.FrameAttached'),\n  FrameNavigated: Symbol('FrameManager.FrameNavigated'),\n  FrameDetached: Symbol('FrameManager.FrameDetached'),\n  FrameSwapped: Symbol('FrameManager.FrameSwapped'),\n  LifecycleEvent: Symbol('FrameManager.LifecycleEvent'),\n  FrameNavigatedWithinDocument: Symbol(\n    'FrameManager.FrameNavigatedWithinDocument'\n  ),\n  ExecutionContextCreated: Symbol('FrameManager.ExecutionContextCreated'),\n  ExecutionContextDestroyed: Symbol('FrameManager.ExecutionContextDestroyed'),\n};\n\n/**\n * A frame manager manages the frames for a given {@link Page | page}.\n *\n * @internal\n */\nexport class FrameManager extends EventEmitter {\n  #page: Page;\n  #networkManager: NetworkManager;\n  #timeoutSettings: TimeoutSettings;\n  #contextIdToContext = new Map<string, ExecutionContext>();\n  #isolatedWorlds = new Set<string>();\n  #client: CDPSession;\n  /**\n   * @internal\n   */\n  _frameTree = new FrameTree<Frame>();\n\n  /**\n   * Set of frame IDs stored to indicate if a frame has received a\n   * frameNavigated event so that frame tree responses could be ignored as the\n   * frameNavigated event usually contains the latest information.\n   */\n  #frameNavigatedReceived = new Set<string>();\n\n  #deviceRequestPromptManagerMap = new WeakMap<\n    CDPSession,\n    DeviceRequestPromptManager\n  >();\n\n  get timeoutSettings(): TimeoutSettings {\n    return this.#timeoutSettings;\n  }\n\n  get networkManager(): NetworkManager {\n    return this.#networkManager;\n  }\n\n  get client(): CDPSession {\n    return this.#client;\n  }\n\n  constructor(\n    client: CDPSession,\n    page: Page,\n    ignoreHTTPSErrors: boolean,\n    timeoutSettings: TimeoutSettings\n  ) {\n    super();\n    this.#client = client;\n    this.#page = page;\n    this.#networkManager = new NetworkManager(client, ignoreHTTPSErrors, this);\n    this.#timeoutSettings = timeoutSettings;\n    this.setupEventListeners(this.#client);\n  }\n\n  private setupEventListeners(session: CDPSession) {\n    session.on('Page.frameAttached', event => {\n      this.#onFrameAttached(session, event.frameId, event.parentFrameId);\n    });\n    session.on('Page.frameNavigated', event => {\n      this.#frameNavigatedReceived.add(event.frame.id);\n      void this.#onFrameNavigated(event.frame);\n    });\n    session.on('Page.navigatedWithinDocument', event => {\n      this.#onFrameNavigatedWithinDocument(event.frameId, event.url);\n    });\n    session.on(\n      'Page.frameDetached',\n      (event: Protocol.Page.FrameDetachedEvent) => {\n        this.#onFrameDetached(\n          event.frameId,\n          event.reason as Protocol.Page.FrameDetachedEventReason\n        );\n      }\n    );\n    session.on('Page.frameStartedLoading', event => {\n      this.#onFrameStartedLoading(event.frameId);\n    });\n    session.on('Page.frameStoppedLoading', event => {\n      this.#onFrameStoppedLoading(event.frameId);\n    });\n    session.on('Runtime.executionContextCreated', event => {\n      this.#onExecutionContextCreated(event.context, session);\n    });\n    session.on('Runtime.executionContextDestroyed', event => {\n      this.#onExecutionContextDestroyed(event.executionContextId, session);\n    });\n    session.on('Runtime.executionContextsCleared', () => {\n      this.#onExecutionContextsCleared(session);\n    });\n    session.on('Page.lifecycleEvent', event => {\n      this.#onLifecycleEvent(event);\n    });\n  }\n\n  async initialize(client: CDPSession = this.#client): Promise<void> {\n    try {\n      const result = await Promise.all([\n        client.send('Page.enable'),\n        client.send('Page.getFrameTree'),\n      ]);\n\n      const {frameTree} = result[1];\n      this.#handleFrameTree(client, frameTree);\n      await Promise.all([\n        client.send('Page.setLifecycleEventsEnabled', {enabled: true}),\n        client.send('Runtime.enable').then(() => {\n          return this.#createIsolatedWorld(client, UTILITY_WORLD_NAME);\n        }),\n        // TODO: Network manager is not aware of OOP iframes yet.\n        client === this.#client\n          ? this.#networkManager.initialize()\n          : Promise.resolve(),\n      ]);\n    } catch (error) {\n      // The target might have been closed before the initialization finished.\n      if (isErrorLike(error) && isTargetClosedError(error)) {\n        return;\n      }\n\n      throw error;\n    }\n  }\n\n  executionContextById(\n    contextId: number,\n    session: CDPSession = this.#client\n  ): ExecutionContext {\n    const context = this.getExecutionContextById(contextId, session);\n    assert(context, 'INTERNAL ERROR: missing context with id = ' + contextId);\n    return context;\n  }\n\n  getExecutionContextById(\n    contextId: number,\n    session: CDPSession = this.#client\n  ): ExecutionContext | undefined {\n    return this.#contextIdToContext.get(`${session.id()}:${contextId}`);\n  }\n\n  page(): Page {\n    return this.#page;\n  }\n\n  mainFrame(): Frame {\n    const mainFrame = this._frameTree.getMainFrame();\n    assert(mainFrame, 'Requesting main frame too early!');\n    return mainFrame;\n  }\n\n  frames(): Frame[] {\n    return Array.from(this._frameTree.frames());\n  }\n\n  frame(frameId: string): Frame | null {\n    return this._frameTree.getById(frameId) || null;\n  }\n\n  onAttachedToTarget(target: Target): void {\n    if (target._getTargetInfo().type !== 'iframe') {\n      return;\n    }\n\n    const frame = this.frame(target._getTargetInfo().targetId);\n    if (frame) {\n      frame.updateClient(target._session()!);\n    }\n    this.setupEventListeners(target._session()!);\n    void this.initialize(target._session());\n  }\n\n  /**\n   * @internal\n   */\n  _deviceRequestPromptManager(client: CDPSession): DeviceRequestPromptManager {\n    let manager = this.#deviceRequestPromptManagerMap.get(client);\n    if (manager === undefined) {\n      manager = new DeviceRequestPromptManager(client, this.#timeoutSettings);\n      this.#deviceRequestPromptManagerMap.set(client, manager);\n    }\n    return manager;\n  }\n\n  #onLifecycleEvent(event: Protocol.Page.LifecycleEventEvent): void {\n    const frame = this.frame(event.frameId);\n    if (!frame) {\n      return;\n    }\n    frame._onLifecycleEvent(event.loaderId, event.name);\n    this.emit(FrameManagerEmittedEvents.LifecycleEvent, frame);\n  }\n\n  #onFrameStartedLoading(frameId: string): void {\n    const frame = this.frame(frameId);\n    if (!frame) {\n      return;\n    }\n    frame._onLoadingStarted();\n  }\n\n  #onFrameStoppedLoading(frameId: string): void {\n    const frame = this.frame(frameId);\n    if (!frame) {\n      return;\n    }\n    frame._onLoadingStopped();\n    this.emit(FrameManagerEmittedEvents.LifecycleEvent, frame);\n  }\n\n  #handleFrameTree(\n    session: CDPSession,\n    frameTree: Protocol.Page.FrameTree\n  ): void {\n    if (frameTree.frame.parentId) {\n      this.#onFrameAttached(\n        session,\n        frameTree.frame.id,\n        frameTree.frame.parentId\n      );\n    }\n    if (!this.#frameNavigatedReceived.has(frameTree.frame.id)) {\n      void this.#onFrameNavigated(frameTree.frame);\n    } else {\n      this.#frameNavigatedReceived.delete(frameTree.frame.id);\n    }\n\n    if (!frameTree.childFrames) {\n      return;\n    }\n\n    for (const child of frameTree.childFrames) {\n      this.#handleFrameTree(session, child);\n    }\n  }\n\n  #onFrameAttached(\n    session: CDPSession,\n    frameId: string,\n    parentFrameId: string\n  ): void {\n    let frame = this.frame(frameId);\n    if (frame) {\n      if (session && frame.isOOPFrame()) {\n        // If an OOP iframes becomes a normal iframe again\n        // it is first attached to the parent page before\n        // the target is removed.\n        frame.updateClient(session);\n      }\n      return;\n    }\n\n    frame = new CDPFrame(this, frameId, parentFrameId, session);\n    this._frameTree.addFrame(frame);\n    this.emit(FrameManagerEmittedEvents.FrameAttached, frame);\n  }\n\n  async #onFrameNavigated(framePayload: Protocol.Page.Frame): Promise<void> {\n    const frameId = framePayload.id;\n    const isMainFrame = !framePayload.parentId;\n\n    let frame = this._frameTree.getById(frameId);\n\n    // Detach all child frames first.\n    if (frame) {\n      for (const child of frame.childFrames()) {\n        this.#removeFramesRecursively(child);\n      }\n    }\n\n    // Update or create main frame.\n    if (isMainFrame) {\n      if (frame) {\n        // Update frame id to retain frame identity on cross-process navigation.\n        this._frameTree.removeFrame(frame);\n        frame._id = frameId;\n      } else {\n        // Initial main frame navigation.\n        frame = new CDPFrame(this, frameId, undefined, this.#client);\n      }\n      this._frameTree.addFrame(frame);\n    }\n\n    frame = await this._frameTree.waitForFrame(frameId);\n    frame._navigated(framePayload);\n    this.emit(FrameManagerEmittedEvents.FrameNavigated, frame);\n  }\n\n  async #createIsolatedWorld(session: CDPSession, name: string): Promise<void> {\n    const key = `${session.id()}:${name}`;\n\n    if (this.#isolatedWorlds.has(key)) {\n      return;\n    }\n\n    await session.send('Page.addScriptToEvaluateOnNewDocument', {\n      source: `//# sourceURL=${PuppeteerURL.INTERNAL_URL}`,\n      worldName: name,\n    });\n\n    await Promise.all(\n      this.frames()\n        .filter(frame => {\n          return frame._client() === session;\n        })\n        .map(frame => {\n          // Frames might be removed before we send this, so we don't want to\n          // throw an error.\n          return session\n            .send('Page.createIsolatedWorld', {\n              frameId: frame._id,\n              worldName: name,\n              grantUniveralAccess: true,\n            })\n            .catch(debugError);\n        })\n    );\n\n    this.#isolatedWorlds.add(key);\n  }\n\n  #onFrameNavigatedWithinDocument(frameId: string, url: string): void {\n    const frame = this.frame(frameId);\n    if (!frame) {\n      return;\n    }\n    frame._navigatedWithinDocument(url);\n    this.emit(FrameManagerEmittedEvents.FrameNavigatedWithinDocument, frame);\n    this.emit(FrameManagerEmittedEvents.FrameNavigated, frame);\n  }\n\n  #onFrameDetached(\n    frameId: string,\n    reason: Protocol.Page.FrameDetachedEventReason\n  ): void {\n    const frame = this.frame(frameId);\n    if (reason === 'remove') {\n      // Only remove the frame if the reason for the detached event is\n      // an actual removement of the frame.\n      // For frames that become OOP iframes, the reason would be 'swap'.\n      if (frame) {\n        this.#removeFramesRecursively(frame);\n      }\n    } else if (reason === 'swap') {\n      this.emit(FrameManagerEmittedEvents.FrameSwapped, frame);\n    }\n  }\n\n  #onExecutionContextCreated(\n    contextPayload: Protocol.Runtime.ExecutionContextDescription,\n    session: CDPSession\n  ): void {\n    const auxData = contextPayload.auxData as {frameId?: string} | undefined;\n    const frameId = auxData && auxData.frameId;\n    const frame = typeof frameId === 'string' ? this.frame(frameId) : undefined;\n    let world: IsolatedWorld | undefined;\n    if (frame) {\n      // Only care about execution contexts created for the current session.\n      if (frame._client() !== session) {\n        return;\n      }\n      if (contextPayload.auxData && contextPayload.auxData['isDefault']) {\n        world = frame.worlds[MAIN_WORLD];\n      } else if (\n        contextPayload.name === UTILITY_WORLD_NAME &&\n        !frame.worlds[PUPPETEER_WORLD].hasContext()\n      ) {\n        // In case of multiple sessions to the same target, there's a race between\n        // connections so we might end up creating multiple isolated worlds.\n        // We can use either.\n        world = frame.worlds[PUPPETEER_WORLD];\n      }\n    }\n    const context = new ExecutionContext(\n      frame?._client() || this.#client,\n      contextPayload,\n      world\n    );\n    if (world) {\n      world.setContext(context);\n    }\n    const key = `${session.id()}:${contextPayload.id}`;\n    this.#contextIdToContext.set(key, context);\n  }\n\n  #onExecutionContextDestroyed(\n    executionContextId: number,\n    session: CDPSession\n  ): void {\n    const key = `${session.id()}:${executionContextId}`;\n    const context = this.#contextIdToContext.get(key);\n    if (!context) {\n      return;\n    }\n    this.#contextIdToContext.delete(key);\n    if (context._world) {\n      context._world.clearContext();\n    }\n  }\n\n  #onExecutionContextsCleared(session: CDPSession): void {\n    for (const [key, context] of this.#contextIdToContext.entries()) {\n      // Make sure to only clear execution contexts that belong\n      // to the current session.\n      if (context._client !== session) {\n        continue;\n      }\n      if (context._world) {\n        context._world.clearContext();\n      }\n      this.#contextIdToContext.delete(key);\n    }\n  }\n\n  #removeFramesRecursively(frame: Frame): void {\n    for (const child of frame.childFrames()) {\n      this.#removeFramesRecursively(child);\n    }\n    frame._detach();\n    this._frameTree.removeFrame(frame);\n    this.emit(FrameManagerEmittedEvents.FrameDetached, frame);\n  }\n}\n", "/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {HTTPResponse} from '../api/HTTPResponse.js';\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\n\nimport {CDPSessionEmittedEvents} from './Connection.js';\nimport {TimeoutError} from './Errors.js';\nimport {Frame} from './Frame.js';\nimport {FrameManager, FrameManagerEmittedEvents} from './FrameManager.js';\nimport {HTTPRequest} from './HTTPRequest.js';\nimport {NetworkManagerEmittedEvents} from './NetworkManager.js';\nimport {\n  addEventListener,\n  PuppeteerEventListener,\n  removeEventListeners,\n} from './util.js';\n/**\n * @public\n */\nexport type PuppeteerLifeCycleEvent =\n  | 'load'\n  | 'domcontentloaded'\n  | 'networkidle0'\n  | 'networkidle2';\n\n/**\n * @public\n */\nexport type ProtocolLifeCycleEvent =\n  | 'load'\n  | 'DOMContentLoaded'\n  | 'networkIdle'\n  | 'networkAlmostIdle';\n\nconst puppeteerToProtocolLifecycle = new Map<\n  PuppeteerLifeCycleEvent,\n  ProtocolLifeCycleEvent\n>([\n  ['load', 'load'],\n  ['domcontentloaded', 'DOMContentLoaded'],\n  ['networkidle0', 'networkIdle'],\n  ['networkidle2', 'networkAlmostIdle'],\n]);\n\nconst noop = (): void => {};\n\n/**\n * @internal\n */\nexport class LifecycleWatcher {\n  #expectedLifecycle: ProtocolLifeCycleEvent[];\n  #frameManager: FrameManager;\n  #frame: Frame;\n  #timeout: number;\n  #navigationRequest: HTTPRequest | null = null;\n  #eventListeners: PuppeteerEventListener[];\n  #initialLoaderId: string;\n\n  #sameDocumentNavigationDeferred = Deferred.create<undefined>();\n  #lifecycleDeferred = Deferred.create<void>();\n  #newDocumentNavigationDeferred = Deferred.create<undefined>();\n  #terminationDeferred = Deferred.create<Error>();\n\n  #timeoutPromise: Promise<TimeoutError | undefined>;\n\n  #maximumTimer?: NodeJS.Timeout;\n  #hasSameDocumentNavigation?: boolean;\n  #swapped?: boolean;\n\n  #navigationResponseReceived?: Deferred<void>;\n\n  constructor(\n    frameManager: FrameManager,\n    frame: Frame,\n    waitUntil: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[],\n    timeout: number\n  ) {\n    if (Array.isArray(waitUntil)) {\n      waitUntil = waitUntil.slice();\n    } else if (typeof waitUntil === 'string') {\n      waitUntil = [waitUntil];\n    }\n    this.#initialLoaderId = frame._loaderId;\n    this.#expectedLifecycle = waitUntil.map(value => {\n      const protocolEvent = puppeteerToProtocolLifecycle.get(value);\n      assert(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n      return protocolEvent as ProtocolLifeCycleEvent;\n    });\n\n    this.#frameManager = frameManager;\n    this.#frame = frame;\n    this.#timeout = timeout;\n    this.#eventListeners = [\n      addEventListener(\n        frameManager.client,\n        CDPSessionEmittedEvents.Disconnected,\n        this.#terminate.bind(\n          this,\n          new Error('Navigation failed because browser has disconnected!')\n        )\n      ),\n      addEventListener(\n        this.#frameManager,\n        FrameManagerEmittedEvents.LifecycleEvent,\n        this.#checkLifecycleComplete.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager,\n        FrameManagerEmittedEvents.FrameNavigatedWithinDocument,\n        this.#navigatedWithinDocument.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager,\n        FrameManagerEmittedEvents.FrameNavigated,\n        this.#navigated.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager,\n        FrameManagerEmittedEvents.FrameSwapped,\n        this.#frameSwapped.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager,\n        FrameManagerEmittedEvents.FrameDetached,\n        this.#onFrameDetached.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager.networkManager,\n        NetworkManagerEmittedEvents.Request,\n        this.#onRequest.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager.networkManager,\n        NetworkManagerEmittedEvents.Response,\n        this.#onResponse.bind(this)\n      ),\n      addEventListener(\n        this.#frameManager.networkManager,\n        NetworkManagerEmittedEvents.RequestFailed,\n        this.#onRequestFailed.bind(this)\n      ),\n    ];\n\n    this.#timeoutPromise = this.#createTimeoutPromise();\n    this.#checkLifecycleComplete();\n  }\n\n  #onRequest(request: HTTPRequest): void {\n    if (request.frame() !== this.#frame || !request.isNavigationRequest()) {\n      return;\n    }\n    this.#navigationRequest = request;\n    // Resolve previous navigation response in case there are multiple\n    // navigation requests reported by the backend. This generally should not\n    // happen by it looks like it's possible.\n    this.#navigationResponseReceived?.resolve();\n    this.#navigationResponseReceived = Deferred.create();\n    if (request.response() !== null) {\n      this.#navigationResponseReceived?.resolve();\n    }\n  }\n\n  #onRequestFailed(request: HTTPRequest): void {\n    if (this.#navigationRequest?._requestId !== request._requestId) {\n      return;\n    }\n    this.#navigationResponseReceived?.resolve();\n  }\n\n  #onResponse(response: HTTPResponse): void {\n    if (this.#navigationRequest?._requestId !== response.request()._requestId) {\n      return;\n    }\n    this.#navigationResponseReceived?.resolve();\n  }\n\n  #onFrameDetached(frame: Frame): void {\n    if (this.#frame === frame) {\n      this.#terminationDeferred.resolve(\n        new Error('Navigating frame was detached')\n      );\n      return;\n    }\n    this.#checkLifecycleComplete();\n  }\n\n  async navigationResponse(): Promise<HTTPResponse | null> {\n    // Continue with a possibly null response.\n    await this.#navigationResponseReceived?.valueOrThrow();\n    return this.#navigationRequest ? this.#navigationRequest.response() : null;\n  }\n\n  #terminate(error: Error): void {\n    this.#terminationDeferred.resolve(error);\n  }\n\n  sameDocumentNavigationPromise(): Promise<Error | undefined> {\n    return this.#sameDocumentNavigationDeferred.valueOrThrow();\n  }\n\n  newDocumentNavigationPromise(): Promise<Error | undefined> {\n    return this.#newDocumentNavigationDeferred.valueOrThrow();\n  }\n\n  lifecyclePromise(): Promise<void> {\n    return this.#lifecycleDeferred.valueOrThrow();\n  }\n\n  timeoutOrTerminationPromise(): Promise<Error | TimeoutError | undefined> {\n    return Deferred.race([this.#timeoutPromise, this.#terminationDeferred]);\n  }\n\n  async #createTimeoutPromise(): Promise<TimeoutError | undefined> {\n    if (!this.#timeout) {\n      return new Promise(noop);\n    }\n    const errorMessage =\n      'Navigation timeout of ' + this.#timeout + ' ms exceeded';\n    await new Promise(fulfill => {\n      return (this.#maximumTimer = setTimeout(fulfill, this.#timeout));\n    });\n    return new TimeoutError(errorMessage);\n  }\n\n  #navigatedWithinDocument(frame: Frame): void {\n    if (frame !== this.#frame) {\n      return;\n    }\n    this.#hasSameDocumentNavigation = true;\n    this.#checkLifecycleComplete();\n  }\n\n  #navigated(frame: Frame): void {\n    if (frame !== this.#frame) {\n      return;\n    }\n    this.#checkLifecycleComplete();\n  }\n\n  #frameSwapped(frame: Frame): void {\n    if (frame !== this.#frame) {\n      return;\n    }\n    this.#swapped = true;\n    this.#checkLifecycleComplete();\n  }\n\n  #checkLifecycleComplete(): void {\n    // We expect navigation to commit.\n    if (!checkLifecycle(this.#frame, this.#expectedLifecycle)) {\n      return;\n    }\n    this.#lifecycleDeferred.resolve();\n    if (this.#hasSameDocumentNavigation) {\n      this.#sameDocumentNavigationDeferred.resolve(undefined);\n    }\n    if (this.#swapped || this.#frame._loaderId !== this.#initialLoaderId) {\n      this.#newDocumentNavigationDeferred.resolve(undefined);\n    }\n\n    function checkLifecycle(\n      frame: Frame,\n      expectedLifecycle: ProtocolLifeCycleEvent[]\n    ): boolean {\n      for (const event of expectedLifecycle) {\n        if (!frame._lifecycleEvents.has(event)) {\n          return false;\n        }\n      }\n      for (const child of frame.childFrames()) {\n        if (\n          child._hasStartedLoading &&\n          !checkLifecycle(child, expectedLifecycle)\n        ) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  dispose(): void {\n    removeEventListeners(this.#eventListeners);\n    clearTimeout(this.#maximumTimer);\n  }\n}\n", "/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_TIMEOUT = 30000;\n\n/**\n * @internal\n */\nexport class TimeoutSettings {\n  #defaultTimeout: number | null;\n  #defaultNavigationTimeout: number | null;\n\n  constructor() {\n    this.#defaultTimeout = null;\n    this.#defaultNavigationTimeout = null;\n  }\n\n  setDefaultTimeout(timeout: number): void {\n    this.#defaultTimeout = timeout;\n  }\n\n  setDefaultNavigationTimeout(timeout: number): void {\n    this.#defaultNavigationTimeout = timeout;\n  }\n\n  navigationTimeout(): number {\n    if (this.#defaultNavigationTimeout !== null) {\n      return this.#defaultNavigationTimeout;\n    }\n    if (this.#defaultTimeout !== null) {\n      return this.#defaultTimeout;\n    }\n    return DEFAULT_TIMEOUT;\n  }\n\n  timeout(): number {\n    if (this.#defaultTimeout !== null) {\n      return this.#defaultTimeout;\n    }\n    return DEFAULT_TIMEOUT;\n  }\n}\n", "/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {assert} from '../util/assert.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {CDPSession} from './Connection.js';\nimport {getReadableAsBuffer, getReadableFromProtocolStream} from './util.js';\n\n/**\n * @public\n */\nexport interface TracingOptions {\n  path?: string;\n  screenshots?: boolean;\n  categories?: string[];\n}\n\n/**\n * The Tracing class exposes the tracing audit interface.\n * @remarks\n * You can use `tracing.start` and `tracing.stop` to create a trace file\n * which can be opened in Chrome DevTools or {@link https://chromedevtools.github.io/timeline-viewer/ | timeline viewer}.\n *\n * @example\n *\n * ```ts\n * await page.tracing.start({path: 'trace.json'});\n * await page.goto('https://www.google.com');\n * await page.tracing.stop();\n * ```\n *\n * @public\n */\nexport class Tracing {\n  #client: CDPSession;\n  #recording = false;\n  #path?: string;\n\n  /**\n   * @internal\n   */\n  constructor(client: CDPSession) {\n    this.#client = client;\n  }\n\n  /**\n   * Starts a trace for the current page.\n   * @remarks\n   * Only one trace can be active at a time per browser.\n   *\n   * @param options - Optional `TracingOptions`.\n   */\n  async start(options: TracingOptions = {}): Promise<void> {\n    assert(\n      !this.#recording,\n      'Cannot start recording trace while already recording trace.'\n    );\n\n    const defaultCategories = [\n      '-*',\n      'devtools.timeline',\n      'v8.execute',\n      'disabled-by-default-devtools.timeline',\n      'disabled-by-default-devtools.timeline.frame',\n      'toplevel',\n      'blink.console',\n      'blink.user_timing',\n      'latencyInfo',\n      'disabled-by-default-devtools.timeline.stack',\n      'disabled-by-default-v8.cpu_profiler',\n    ];\n    const {path, screenshots = false, categories = defaultCategories} = options;\n\n    if (screenshots) {\n      categories.push('disabled-by-default-devtools.screenshot');\n    }\n\n    const excludedCategories = categories\n      .filter(cat => {\n        return cat.startsWith('-');\n      })\n      .map(cat => {\n        return cat.slice(1);\n      });\n    const includedCategories = categories.filter(cat => {\n      return !cat.startsWith('-');\n    });\n\n    this.#path = path;\n    this.#recording = true;\n    await this.#client.send('Tracing.start', {\n      transferMode: 'ReturnAsStream',\n      traceConfig: {\n        excludedCategories,\n        includedCategories,\n      },\n    });\n  }\n\n  /**\n   * Stops a trace started with the `start` method.\n   * @returns Promise which resolves to buffer with trace data.\n   */\n  async stop(): Promise<Buffer | undefined> {\n    const contentDeferred = Deferred.create<Buffer | undefined>();\n    this.#client.once('Tracing.tracingComplete', async event => {\n      try {\n        const readable = await getReadableFromProtocolStream(\n          this.#client,\n          event.stream\n        );\n        const buffer = await getReadableAsBuffer(readable, this.#path);\n        contentDeferred.resolve(buffer ?? undefined);\n      } catch (error) {\n        if (isErrorLike(error)) {\n          contentDeferred.reject(error);\n        } else {\n          contentDeferred.reject(new Error(`Unknown error: ${error}`));\n        }\n      }\n    });\n    await this.#client.send('Tracing.end');\n    this.#recording = false;\n    return contentDeferred.valueOrThrow();\n  }\n}\n"],
  "mappings": "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",
  "names": ["n", "_a", "__classPrivateFieldSet", "__classPrivateFieldGet", "InterceptResolutionAction", "value", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "__classPrivateFieldGet", "__classPrivateFieldSet", "_ScriptInjector_get", "__classPrivateFieldGet", "_a", "QueryHandler", "__classPrivateFieldGet", "__classPrivateFieldSet", "propertyName", "__classPrivateFieldSet", "__classPrivateFieldGet", "quad", "_CDPElementHandle_page_get", "_CDPElementHandle_getOOPIFOffsets", "_CDPElementHandle_getBoxModel", "_CDPElementHandle_fromProtocolQuad", "_CDPElementHandle_intersectQuadWithViewport", "_a", "__classPrivateFieldSet", "__classPrivateFieldGet", "fs", "QueryHandler", "elements", "results", "__classPrivateFieldGet", "tagName", "values", "threshold", "_ElementHandle_checkVisibility", "element", "visibility", "_ElementHandle_asSVGElementHandle", "_ElementHandle_getOwnerSVGElement", "iterator", "size", "selector", "visible", "__classPrivateFieldSet", "__classPrivateFieldGet", "__classPrivateFieldGet", "HTTPRequest", "__classPrivateFieldGet", "__classPrivateFieldSet", "_HTTPRequest_continue", "_HTTPRequest_respond", "_HTTPRequest_abort", "HTTPResponse", "__classPrivateFieldSet", "__classPrivateFieldGet", "error", "__classPrivateFieldSet", "__classPrivateFieldGet", "_NetworkManager_updateNetworkConditions", "_NetworkManager_updateProtocolRequestInterception", "_NetworkManager_cacheDisabled", "_NetworkManager_updateProtocolCacheDisabled", "_NetworkManager_onRequestWillBeSent", "_NetworkManager_onAuthRequired", "_NetworkManager_onRequestPaused", "requestWillBeSentEvent", "_NetworkManager_patchRequestEventHeaders", "_NetworkManager_onRequestWithoutNetworkInstrumentation", "HTTPRequest", "_NetworkManager_onRequest", "request", "_NetworkManager_onRequestServedFromCache", "_NetworkManager_handleRequestRedirect", "HTTPResponse", "_NetworkManager_emitResponseEvent", "_NetworkManager_onResponseReceived", "_NetworkManager_onResponseReceivedExtraInfo", "_NetworkManager_forgetRequest", "_NetworkManager_onLoadingFinished", "_NetworkManager_emitLoadingFinished", "_a", "_NetworkManager_onLoadingFailed", "_NetworkManager_emitLoadingFailed", "LocatorEmittedEvents", "__classPrivateFieldGet", "__classPrivateFieldSet", "input", "value", "_LocatorImpl_waitForFunction", "_LocatorImpl_run", "_RaceLocatorImpl_runRace", "_a", "__classPrivateFieldGet", "fs", "_a", "QueryHandler", "__classPrivateFieldSet", "_a", "__classPrivateFieldGet", "_AXNode_isTextOnlyObject", "_AXNode_hasFocusableChild", "__classPrivateFieldSet", "__classPrivateFieldGet", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "__classPrivateFieldSet", "__classPrivateFieldGet", "_JSCoverage_onScriptParsed", "_CSSCoverage_onStyleSheet", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "__classPrivateFieldGet", "__classPrivateFieldSet", "__classPrivateFieldSet", "__classPrivateFieldGet", "error", "__classPrivateFieldGet", "__classPrivateFieldSet", "_ExecutionContext_installGlobalBinding", "_ExecutionContext_evaluate", "_a", "exceptionDetails", "remoteObject", "rewriteError", "_a", "__classPrivateFieldSet", "__classPrivateFieldGet", "createFunction", "__classPrivateFieldGet", "__classPrivateFieldSet", "document", "_IsolatedWorld_frameManager_get", "_IsolatedWorld_timeoutSettings_get", "Frame", "__classPrivateFieldSet", "__classPrivateFieldGet", "url", "referrerPolicy", "error", "fs", "Deferred", "type", "content", "_a", "__classPrivateFieldGet", "_a", "__classPrivateFieldSet", "__classPrivateFieldGet", "__classPrivateFieldSet", "_FrameManager_onFrameStartedLoading", "_FrameManager_onFrameStoppedLoading", "_FrameManager_handleFrameTree", "_FrameManager_onFrameAttached", "Frame", "_FrameManager_onFrameNavigated", "_FrameManager_createIsolatedWorld", "_FrameManager_onFrameNavigatedWithinDocument", "_FrameManager_onFrameDetached", "_FrameManager_onExecutionContextCreated", "_FrameManager_onExecutionContextDestroyed", "_FrameManager_onExecutionContextsCleared", "_FrameManager_removeFramesRecursively", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "_LifecycleWatcher_onRequestFailed", "_LifecycleWatcher_onResponse", "_LifecycleWatcher_onFrameDetached", "_LifecycleWatcher_terminate", "_LifecycleWatcher_createTimeoutPromise", "_LifecycleWatcher_navigatedWithinDocument", "_LifecycleWatcher_navigated", "_LifecycleWatcher_frameSwapped", "_LifecycleWatcher_checkLifecycleComplete", "__classPrivateFieldSet", "__classPrivateFieldGet", "__classPrivateFieldSet", "__classPrivateFieldGet"]
}
